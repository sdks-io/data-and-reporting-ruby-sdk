# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class TransactionControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.transaction
    @response_catcher = @controller.http_call_back
  end

  # This endpoint allows querying last 48 hours of transaction data of Shell Card (i.e. Priced, Billed, Unbilled etc. sales items). It provides a flexible search criteria and supports pagination. E.g., if the request is made at 08:30 AM on 18 Aug 2022 then transactions until 16 Aug 2022 08:30 AM (including) can be retrieved.
  #
  ##### Supported operations
  #    * Search by Date and Time range (within the last 48 hours only)
  #    * Search by Payer and/or Account number
  #    * Search by Card
  #    * Search by Purchased Country
  #    * Search by Transaction posting date
  #    * Search by Driver Name or Vehicle registration number
  #    * Search by Fuel only transactions
  #    * Search by Product and/or Product group
  def test_recent_transactions_new
    # Parameters for the API call
    request_id = '2b0cbe11-f109-4c43-9201-49af0370df1c'
    body = RecentTransactionRequest.from_hash(APIHelper.json_deserialize(
      '{"PageSize":1,"Page":1,"Filters":{"ColCoCode":14,"PayerNumber":"GB00001'\
      '232","AccountNumber":"GB00001233","ProductCode":"22","PurchasedInCountr'\
      'y":"GB","CardPAN":"700205******890645","FromDateTime":"2020-11-09 13:56'\
      ':03.000","ToDateTime":"2020-12-09 13:56:03.000","TransactionStatus":"AP'\
      'PROVED","FuelOnly":"False","ProductGroupName":"Motor gasoline","Vehicle'\
      'RegistrationNumber":"YG67OUM","IncludeDeclines":true,"CardIssuerName":"'\
      'Mathew","ColumnList":"PayerNumber,AccountNumber,ProductName,FuelVolume,'\
      'PAN"}}', false))

    # Perform the API call through the SDK function
    result = @controller.recent_transactions_new(request_id, body: body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"RequestId":"9d2dee33-7803-485a-a2b1-2c7538e597ee","Status":"SUCCESS",'\
      '"Page":1,"RowCount":2,"TotalPages":1,"Data":[{"ColCoCode":84,"PayerNumb'\
      'er":"MY00200653","AccountNumber":"MY00200653","CardIssueNumber":"1","Co'\
      'llectingCompanyCurrencyCode":"MYR","CustDataCustomerEntered":"PartnerId'\
      '","CustDataDriverId":"D123","CustDataFleetDescription":"Fleet-Truck","F'\
      'leetIdInput":"AS2344","Amount":62.47,"EuroshellSiteNumber":"1231","Inco'\
      'mingProductCode":"10","ProductCode":"23","ProductName":"Unleaded - Low '\
      'octane","SiteCode":3350,"HostingCollectingCompanyName":"Shell Malaysia '\
      'Trading Sdn Bhd","HostingCollectingCompanyNumber":"84","IccdataTranType'\
      'Code":"1","TransactionType":"Transaction Type description","Latitude":"'\
      '52.143814","Longitude":"101.72869","MerchantCategory":"5542","MerchantC'\
      'ategoryDescription":"Description","PurchasedInCountry":"MY","MerchantId'\
      '":"MY1737000000000","SiteName":"ShellPT3895 BATU 4    KUALA LUMPUR MY",'\
      '"Network":"458","DelcoCode":"084","OdometerInput":"201620","OdometerRea'\
      'dingKm":"201620","OdometerReadingMiles":"201620","CardPAN":"700214*****'\
      '**780061","PINIndicator":"Y","POIReceiptNumber":"417662","ProductsCodeA'\
      'dditional":"Additional Code","ProductsTaxCode":"0","FuelVolume":34.15,"'\
      'SfgwCardDateOfExpiry":"2024-12","SiteCurrencyISOCode":"MYR","CardId":"3'\
      '30743","TransactionDate":"2021-11-11","TransactionDateTime":"2021-11-11'\
      ' 16:32:09.000","TransactionId":"864220307","TransactionStatus":"Approve'\
      'd","UnitOfMeasure":"L","VehicleRegistrationNumber":"WD33637","NetworkDe'\
      'lcoName":"Shell Malaysia Trading Sdn Bhd","ProductGroupName":"Motor gas'\
      'oline","FuelProduct":"All Fuels","AccountCustomerName":"WCT BERHAD","Pa'\
      'yerName":"WCT BERHAD","TransactionTime":"2021-11-11","TransactionCurren'\
      'cy":"RM","UnitPrice":0.02050073206442167,"AuthorisedFlag":"Y","Transact'\
      'ionTimeGMT":"08:41:02","ReasonCode":"10","IssuerActionCode":"2","Issuer'\
      'ActionCodeDescription":"Approved, partial","DeclinedReason":"partial","'\
      'CardStatusReasonDescription":"Approved, partial","TransactionCountry":"'\
      '458","IssuingCollectingCompanyName":"Partner Name","CardIssuerName":"Jo'\
      'hn","DriverName":"PAK PAK","BearerDescription":"Description","CardCateg'\
      'oryDescription":"Driver Card","CardTypeDescription":"SHELL FLEET- HONG '\
      'KONG 7002821","CardTokenTypeDescription":"HK FLE NAT SIN R1 - CHIP","Em'\
      'bossType":"Driver","EVPrintedNumber":"NL-TNM-C00122045-K","IsRFID":fals'\
      'e}]}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

  # This API allows querying transaction data (i.e. Priced, Billed and Unbilled sales items). It provides a flexible search criteria and supports paging. 
  #The version 2 is an enhancement to the version 1 where EV transactions and their details are added in the response. 
  #
  #Transactions that are posted but not yet priced, billed or that are in error will not be returned by this API. The API also supports returning Fee Items.
  #
  ##### Supported operations
  #  * Get sales items and fee transactions
  #    * Search by invoice status
  #    * Search by fixed date period
  #    * Search by date range
  #    * Search by account
  #    * Search by card
  #  * Get sales items only
  #    * Search by transaction Id or location
  #    * Search by transaction posting date
  #    * Search by invoice number or date
  #    * Search by driver name or vehicle registration number
  #    * Search by card group
  #    * Search by fuel only transactions
  #    * Search by product
  # * EV transaction details - Below are EV specific parameters
  #    * EVOperator
  #    * EVSerialId
  #    * EVChargePointSerial
  #    * EVChargePointConnectorType
  #    * EVChargePointConnectorTypeDescription
  #    * EVChargeDuration
  #    * EVChargeStartDate
  #    * EVChargeStartTime
  #    * EVChargeEndDate
  #    * EVChargeEndTime
  def test_priced_transactions_v2
    # Parameters for the API call
    request_id = '2b0cbe11-f109-4c43-9201-49af0370df1c'
    body = PricedTransactionRequestV2.from_hash(APIHelper.json_deserialize(
      '{"PageSize":1,"Page":1,"Filters":{"ColCoCode":"032","InvoiceStatus":"A"'\
      ',"PayerNumber":"DE26685263","AccountId":29484,"AccountNumber":"DE266670'\
      '80","DriverName":"HH NX 508","CardGroupId":40000,"CardPAN":"70020510066'\
      '29890645","ProductCode":"10","ProductName":"Diesel AGO","SiteCode":"050'\
      '00100","IncomingSiteNumber":"100021","InvoiceDate":"2021-01-01","Invoic'\
      'eNumber":"3201016193","PurchasedInCountryCode":"GB","PurchasedInCountry'\
      '":"United Kingdom","SiteGroupId":202,"VehicleRegistrationNumber":"4K468'\
      '01","FeeTypeId":275549,"LineItemDescription":"ABC3","Cards":[0],"SortOr'\
      'der":"5","FromDate":"2022-01-01 00:00:00","ToDate":"2022-01-01 00:00:00'\
      '","Period":3,"PostingDateFrom":"2022-01-01 00:00:00","PostingDateTo":"2'\
      '022-01-01 00:00:00","TransactionItemId":"1208176398","FuelOnly":false,"'\
      'IncludeFees":true,"IsMultipayer":true,"ValidInvoiceDateOnly":false,"Inv'\
      'oiceFromDate":"2022-01-01 00:00:00","InvoiceToDate":"2022-01-01 00:00:0'\
      '0","HostingCollectingCompanyNumber":"032","Search":"2K89909","Transacti'\
      'onId":"io9KVXk1UkW57XWKyeaHHg"}}', false))

    # Perform the API call through the SDK function
    result = @controller.priced_transactions_v2(request_id, body: body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    expected_body = JSON.parse(
      '{"RequestId":"9d2dee33-7803-485a-a2b1-2c7538e597ee","Status":"SUCCESS",'\
      '"Data":[{"AccountName":"Blue Colour Ltd","AccountId":29484,"AccountNumb'\
      'er":"DE26667080","AccountShortName":"Mathew","Additional1":"GBALLEGO000'\
      '2452","Additional2":"GBALLEGO0002452","Additional3":"GBALLEGO0002452","'\
      'Additional4":"GBALLEGO0002452","AllowClearing":"Null","AuthorisationCod'\
      'e":300796,"TransactionStatus":"Y","DriverName":"SATTY BHAMRA","CardExpi'\
      'ryPeriod":2204,"CardExpiry":"2022-01-01","CardGroupId":40000,"CardGroup'\
      'Name":"006240 FIRE BRIGHT SOLUTIONS","IssuerCode":7002,"CardPAN":"70020'\
      '53465789891000","ReleaseCode":9,"CardSequenceNumber":617,"CardType":"GB'\
      ' STD FLT NAT SINGLE R9","ColCoCode":"014","UnitDiscountInvoiceCurrency"'\
      ':-0.0051,"ColCoExchangeRate":0.851858,"InvoiceCurrencySymbol":"GBP","Co'\
      'rrectionFlag":true,"CRMNumber":10,"CustomerCountry":"United Kingdom","C'\
      'ustomerCurrencyCode":"GBP","CustomerCurrencySymbol":"Â£","RebateonNetAmo'\
      'untInCustomerCurrency":0,"EffectiveDiscountInCustomerCurrency":-0.22,"E'\
      'ffectiveUnitDiscountInCustomerCurrency":-0.0051,"UnitPriceInInvoiceCurr'\
      'ency":1.1024,"InvoiceTax":0,"InvoiceGrossAmount":57.25,"InvoiceNetAmoun'\
      't":47.71,"VATonNetAmountInCustomerCurrency":9.54,"CustomerRetailPriceUn'\
      'itGross":0,"CustomerRetailValueTotalGross":57.52,"CustomerRetailValueTo'\
      'talNet":47.93,"TransactionTypeDescription":9.59,"RebateonNetAmountInTra'\
      'nsactionCurrency":-0.22,"EffectiveDiscountInTrxCurrency":-0.22,"DelCoTo'\
      'ColCoExchangeRate":0,"Cards":[275549],"UnitDiscountTransactionCurrency"'\
      ':-0.005,"TransactionGrossAmount":57.25,"TransactionNetAmount":47.71,"Tr'\
      'ansactionTax":9.54,"VATonNetAmount":9.54,"DelcoListPriceUnitNet":0,"Del'\
      'coRetailPriceUnitGross":1.32888,"UnitPriceInTransactionCurrency":1.1074'\
      ',"DelcoRetailPriceUnitNet":1.1074,"DelcoRetailValueTotalGross":57.52,"D'\
      'elcoRetailValueTotalNet":47.93,"TransactionCurrencySymbol":"$","Discoun'\
      'tType":"Retail","DisputeStatus":false,"IsShellSite":false,"FleetIdInput'\
      '":"YG67OUM","IncomingProductCode":23,"PostingDate":"2021-08-02","Postin'\
      'gTime":"0001-01-01T14:15:22Z","ProductCode":30,"ProductName":"Unleaded '\
      '- Medium octane","ProductGroupId":22,"IncomingCurrencyCode":"GBP","Inco'\
      'mingSiteDescription":"Shell Broadway Ring","Location":"Shell Broadway R'\
      'ing","SiteName":"Shell Broadway Ring","SiteCode":32,"IncomingSiteNumber'\
      '":15,"InvoiceCurrencyCode":"GBP","InvoiceDate":"2021-08-02","InvoiceNum'\
      'ber":3201016193,"FuelProduct":true,"VATApplicable":"Y","PayerName":"Col'\
      'ours Services Ltd","PayerNumber":"GB12121212","ParentCustomerNumber":"G'\
      'B12121212","PayerGroup":"H312066","PayerGroupName":"12162566 - FUEL CAR'\
      'D SERVICE","CheckDigit":6,"NetInvoiceIndicator":"Y","DelcoCode":5,"Netw'\
      'orkCode":3,"PurchasedInCountry":"United Kingdom","SiteCountry":"United '\
      'Kingdom","VATCountry":"United Kingdom","DelcoName":"Shell U.K. Oil Prod'\
      'ucts Limited","Network":"Shell","OdometerInput":0,"OriginalSalesItemId"'\
      ':"Null","FleetIDDescription":"YG67OUM","ParentCustomerId":6494,"PINIndi'\
      'cator":"Y, N","ProductGroupName":"Fees","PurchasedInCountryCode":"GB","'\
      'Quantity":43.28,"RebateRate":0.0022,"ReceiptNumber":6803,"RefundFlag":"'\
      'Y","SiteGroupId":202,"SiteGroupName":"CZ 9100 ECONOMY NETWORK","Latitud'\
      'e":53.83606,"Longitude":-1.61854,"DelCoExchangeRate":0.851858,"EuroReba'\
      'teAmount":-0.258259,"NetEuroAmount":56.01,"EuroVATAmount":11.2,"ParentC'\
      'ustomerName":"FUEL CARD SERVICES LTD","IsInvoiced":false,"TransactionCu'\
      'rrencyCode":"GBP","CreditDebitCode":"D or C","TransactionDate":"2021-08'\
      '-01","TransactionTime":"0001-01-01T12:16:58Z","TransactionItemId":"H305'\
      '908971030","TrnIdentifier":"H305908971030","Type":"SALE","TransactionLi'\
      'ne":1,"TransactionType":"Purchase","UTCOffset":"Europe/London","VATCate'\
      'gory":"United Kingdom Standard VAT Rate","VATRate":0.2,"VehicleRegistra'\
      'tion":"YG67OUM","IsCancelled":"Y","ColCoGrossAmount":57.25,"ColCoNetAmo'\
      'unt":47.71,"ColCoVATAmount":9.54,"OriginalCurrencySymbol":"$","Original'\
      'CurrencyCode":"$","OriginalVATAmount":0,"EmbossText":"PARKLANE PROPERTI'\
      'ES LTD","OriginalExchangeRate":0,"OriginalTransactionItemInvoiceDate":"'\
      '2022-02-02","FeeTypeId":1,"LineItemDescription":true,"FeeRuleDescriptio'\
      'n":"Simple Fee","Frequency":1,"FeeRuleId":1,"SystemEntryDate":"2021-08-'\
      '28","SystemEntryTime":"0001-01-01T20:21:08Z","IsManual":"Y","OriginalTr'\
      'ansactionItemId":"Y","OriginalTransactionItemInvoiceNumber":6750802,"Or'\
      'iginalTransactionItemInvoiceId":234,"PayerShortName":"FUEL CARD SERVICE'\
      'S LTD","ReverseCharge":"Y","OriginalGrossAmount":57.25,"OriginalNetAmou'\
      'nt":57.25,"UnitOfMeasure":"L","RoadType":"National Road","CustomerCount'\
      'ryIsoCode":"DE","EVOperator":"Shell Recharge","EVSerialId":"GBALLEGO000'\
      '2452","EVChargePointSerial":"GBALLEGO0002452","EVChargePointConnectorTy'\
      'pe":5,"EVChargePointConnectorTypeDescription":"DC 50 kW","EVChargeDurat'\
      'ion":"PT3205S","EVChargeStartDate":"2021-08-01","EVChargeStartTime":"00'\
      '01-01-01T20:08:01Z","EVChargeEndDate":"2022-08-01","EVChargeEndTime":"0'\
      '001-01-01T20:08:01Z","HostingCollectingCompanyNumber":0,"TransactionId"'\
      ':0,"FuelOnly":true}],"Page":3,"PageSize":30,"TotalPages":5}'
    )
    received_body = JSON.parse(@response_catcher.response.raw_body)
    assert(ComparisonHelper.match_body(expected_body, received_body))
  end

end