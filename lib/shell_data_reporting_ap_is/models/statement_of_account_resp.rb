# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # StatementOfAccountResp Model.
  class StatementOfAccountResp < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Latest statement of the account generated for the given Payer.
    # @return [LastStatementOfAccount]
    attr_accessor :last_statement_of_account

    # Latest statement of the account generated for the given Payer.
    # @return [Array[MonthlyInvoiceTrend]]
    attr_accessor :monthly_invoice_trend

    # Latest statement of the account generated for the given Payer.
    # @return [Array[PastStatementOfAccounts]]
    attr_accessor :past_statement_of_accounts

    # Latest statement of the account generated for the given Payer.
    # @return [Array[PaymentsSinceLastSOA]]
    attr_accessor :payments_since_last_soa

    # Latest statement of the account generated for the given Payer.
    # @return [Array[InvoicesSummaries]]
    attr_accessor :invoices_summaries

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['last_statement_of_account'] = 'LastStatementOfAccount'
      @_hash['monthly_invoice_trend'] = 'MonthlyInvoiceTrend'
      @_hash['past_statement_of_accounts'] = 'PastStatementOfAccounts'
      @_hash['payments_since_last_soa'] = 'PaymentsSinceLastSOA'
      @_hash['invoices_summaries'] = 'InvoicesSummaries'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        last_statement_of_account
        monthly_invoice_trend
        past_statement_of_accounts
        payments_since_last_soa
        invoices_summaries
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        monthly_invoice_trend
        payments_since_last_soa
        invoices_summaries
      ]
    end

    def initialize(last_statement_of_account = SKIP,
                   monthly_invoice_trend = SKIP,
                   past_statement_of_accounts = SKIP,
                   payments_since_last_soa = SKIP,
                   invoices_summaries = SKIP)
      unless last_statement_of_account == SKIP
        @last_statement_of_account =
          last_statement_of_account
      end
      @monthly_invoice_trend = monthly_invoice_trend unless monthly_invoice_trend == SKIP
      unless past_statement_of_accounts == SKIP
        @past_statement_of_accounts =
          past_statement_of_accounts
      end
      @payments_since_last_soa = payments_since_last_soa unless payments_since_last_soa == SKIP
      @invoices_summaries = invoices_summaries unless invoices_summaries == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      if hash['LastStatementOfAccount']
        last_statement_of_account = LastStatementOfAccount.from_hash(hash['LastStatementOfAccount'])
      end
      # Parameter is an array, so we need to iterate through it
      monthly_invoice_trend = nil
      unless hash['MonthlyInvoiceTrend'].nil?
        monthly_invoice_trend = []
        hash['MonthlyInvoiceTrend'].each do |structure|
          monthly_invoice_trend << (MonthlyInvoiceTrend.from_hash(structure) if structure)
        end
      end

      monthly_invoice_trend = SKIP unless hash.key?('MonthlyInvoiceTrend')
      # Parameter is an array, so we need to iterate through it
      past_statement_of_accounts = nil
      unless hash['PastStatementOfAccounts'].nil?
        past_statement_of_accounts = []
        hash['PastStatementOfAccounts'].each do |structure|
          past_statement_of_accounts << (PastStatementOfAccounts.from_hash(structure) if structure)
        end
      end

      past_statement_of_accounts = SKIP unless hash.key?('PastStatementOfAccounts')
      # Parameter is an array, so we need to iterate through it
      payments_since_last_soa = nil
      unless hash['PaymentsSinceLastSOA'].nil?
        payments_since_last_soa = []
        hash['PaymentsSinceLastSOA'].each do |structure|
          payments_since_last_soa << (PaymentsSinceLastSOA.from_hash(structure) if structure)
        end
      end

      payments_since_last_soa = SKIP unless hash.key?('PaymentsSinceLastSOA')
      # Parameter is an array, so we need to iterate through it
      invoices_summaries = nil
      unless hash['InvoicesSummaries'].nil?
        invoices_summaries = []
        hash['InvoicesSummaries'].each do |structure|
          invoices_summaries << (InvoicesSummaries.from_hash(structure) if structure)
        end
      end

      invoices_summaries = SKIP unless hash.key?('InvoicesSummaries')

      # Create object from extracted values.
      StatementOfAccountResp.new(last_statement_of_account,
                                 monthly_invoice_trend,
                                 past_statement_of_accounts,
                                 payments_since_last_soa,
                                 invoices_summaries)
    end
  end
end
