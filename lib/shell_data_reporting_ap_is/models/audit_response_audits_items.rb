# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # AuditResponseAuditsItems Model.
  class AuditResponseAuditsItems < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account id of the customer.
    # It will be the source account id in case of “Fund Transfer
    # @return [Integer]
    attr_accessor :account_id

    # Account number of the customer.
    # It will be the source account number in case of “Fund Transfer”
    # @return [String]
    attr_accessor :account_number

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information1

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information2

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information3

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information4

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information5

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information6

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information7

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information8

    # Additional information in the request.
    # @return [String]
    attr_accessor :additional_information9

    # Additional information in the request.
    # @return [Integer]
    attr_accessor :card_group_id

    # Card group name in the request.
    # @return [String]
    attr_accessor :card_group_name

    # Card Id in the request
    # @return [Integer]
    attr_accessor :card_id

    # Collecting company code of the customer
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting company id of the customer.
    # @return [Integer]
    attr_accessor :col_co_id

    # Error code of the request
    # @return [String]
    attr_accessor :error_code

    # Error description of the request
    # @return [String]
    attr_accessor :error_string

    # Global unique request reference provided by client application.
    # @return [String]
    attr_accessor :global_request_id

    # PAN in the request.
    # If Mask PAN is enabled at Microservices configuration then all digits of
    # the PAN, except the last 6 digits, will be masked.
    # @return [String]
    attr_accessor :pan

    # Payer id of the customer.
    # @return [Integer]
    attr_accessor :payer_id

    # Payer number of the customer.
    # @return [String]
    attr_accessor :payer_number

    # Request processed date. 
    # Format: yyyyMMdd HH:mm: ss
    # @return [String]
    attr_accessor :processed_on

    # vUUID of the user who submitted this request.
    # It will be the UUID of the Driver in the case of
    # “MobilePaymentRegistration”
    # @return [String]
    attr_accessor :requested_by

    # User requested operation. 
    # Possible values:
    # •	OrderCard
    # •	CreateCardGroup
    # •	PINReminder
    # •	MoveCard
    # •	UpdateCardStatus
    # •	UpdateCardGroup
    # •	AutoRenew
    # •	BulkCardOrder
    # •	BulkCardBlock
    # •	BulkCardOrderMultiAccount
    # •	MobilePaymentRegistration
    # •	UpdateCompanyInfo
    # •	BCOSummary
    # •	BCOMultiAccountSummary
    # •	BCBSummary
    # •	FundTransfer
    # •	DeliveryAddressUpdate
    # @return [String]
    attr_accessor :requested_operation

    # Reference number for the requested operation.
    # @return [Integer]
    attr_accessor :request_reference

    # Request type initiated under the requested operation. 
    # Possible values:
    # •	OrderCard
    # •	CreateCardGroup
    # •	PINReminder
    # •	MoveCard
    # •	UpdateCardStatus
    # •	UpdateCardGroup
    # •	AutoRenew
    # •	BulkCardOrder
    # •	BulkCardBlock
    # •	BulkCardOrderMultiAccount
    # •	MobilePaymentRegistration
    # •	UpdateCompanyInfo
    # •	BCOSummary
    # •	BCOMultiAccountSummary
    # •	BCBSummary
    # •	FundTransfer
    # •	DeliveryAddressUpdate
    # @return [String]
    attr_accessor :request_type

    # Status of the request.
    # Possible values:
    # •	Success
    # •	Failed
    # •	InProgress
    # •	Submitted
    # •	Rejected
    # •	PendingApproval
    # •	MailedToCSC
    # @return [String]
    attr_accessor :status

    # Request submitted date. 
    # Format: yyyyMMdd HH:mm: ss
    # @return [String]
    attr_accessor :submitted_on

    # Reference number for the individual request type.
    # @return [Integer]
    attr_accessor :sub_request_reference

    # Display name of the user who submitted this request.
    # It will be the Display Name of the Driver in the case of
    # “MobilePaymentRegistration” in the below format:
    # @return [String]
    attr_accessor :user_display_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['additional_information1'] = 'AdditionalInformation1'
      @_hash['additional_information2'] = 'AdditionalInformation2'
      @_hash['additional_information3'] = 'AdditionalInformation3'
      @_hash['additional_information4'] = 'AdditionalInformation4'
      @_hash['additional_information5'] = 'AdditionalInformation5'
      @_hash['additional_information6'] = 'AdditionalInformation6'
      @_hash['additional_information7'] = 'AdditionalInformation7'
      @_hash['additional_information8'] = 'AdditionalInformation8'
      @_hash['additional_information9'] = 'AdditionalInformation9'
      @_hash['card_group_id'] = 'CardGroupId'
      @_hash['card_group_name'] = 'CardGroupName'
      @_hash['card_id'] = 'CardId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['error_code'] = 'ErrorCode'
      @_hash['error_string'] = 'ErrorString'
      @_hash['global_request_id'] = 'GlobalRequestID'
      @_hash['pan'] = 'PAN'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['processed_on'] = 'ProcessedOn'
      @_hash['requested_by'] = 'RequestedBy'
      @_hash['requested_operation'] = 'RequestedOperation'
      @_hash['request_reference'] = 'RequestReference'
      @_hash['request_type'] = 'RequestType'
      @_hash['status'] = 'Status'
      @_hash['submitted_on'] = 'SubmittedOn'
      @_hash['sub_request_reference'] = 'SubRequestReference'
      @_hash['user_display_name'] = 'UserDisplayName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_id
        account_number
        additional_information1
        additional_information2
        additional_information3
        additional_information4
        additional_information5
        additional_information6
        additional_information7
        additional_information8
        additional_information9
        card_group_id
        card_group_name
        card_id
        col_co_code
        col_co_id
        error_code
        error_string
        global_request_id
        pan
        payer_id
        payer_number
        processed_on
        requested_by
        requested_operation
        request_reference
        request_type
        status
        submitted_on
        sub_request_reference
        user_display_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        account_id
        account_number
        additional_information1
        additional_information2
        additional_information3
        additional_information4
        additional_information5
        additional_information6
        additional_information7
        additional_information8
        additional_information9
        card_group_id
        card_group_name
        card_id
        col_co_code
        col_co_id
        error_string
        global_request_id
        pan
        payer_id
        payer_number
        processed_on
        requested_by
        requested_operation
        request_reference
        request_type
        status
        submitted_on
        sub_request_reference
        user_display_name
      ]
    end

    def initialize(account_id = SKIP,
                   account_number = SKIP,
                   additional_information1 = SKIP,
                   additional_information2 = SKIP,
                   additional_information3 = SKIP,
                   additional_information4 = SKIP,
                   additional_information5 = SKIP,
                   additional_information6 = SKIP,
                   additional_information7 = SKIP,
                   additional_information8 = SKIP,
                   additional_information9 = SKIP,
                   card_group_id = SKIP,
                   card_group_name = SKIP,
                   card_id = SKIP,
                   col_co_code = SKIP,
                   col_co_id = SKIP,
                   error_code = SKIP,
                   error_string = SKIP,
                   global_request_id = SKIP,
                   pan = SKIP,
                   payer_id = SKIP,
                   payer_number = SKIP,
                   processed_on = SKIP,
                   requested_by = SKIP,
                   requested_operation = SKIP,
                   request_reference = SKIP,
                   request_type = SKIP,
                   status = SKIP,
                   submitted_on = SKIP,
                   sub_request_reference = SKIP,
                   user_display_name = SKIP)
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @additional_information1 = additional_information1 unless additional_information1 == SKIP
      @additional_information2 = additional_information2 unless additional_information2 == SKIP
      @additional_information3 = additional_information3 unless additional_information3 == SKIP
      @additional_information4 = additional_information4 unless additional_information4 == SKIP
      @additional_information5 = additional_information5 unless additional_information5 == SKIP
      @additional_information6 = additional_information6 unless additional_information6 == SKIP
      @additional_information7 = additional_information7 unless additional_information7 == SKIP
      @additional_information8 = additional_information8 unless additional_information8 == SKIP
      @additional_information9 = additional_information9 unless additional_information9 == SKIP
      @card_group_id = card_group_id unless card_group_id == SKIP
      @card_group_name = card_group_name unless card_group_name == SKIP
      @card_id = card_id unless card_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @col_co_id = col_co_id unless col_co_id == SKIP
      @error_code = error_code unless error_code == SKIP
      @error_string = error_string unless error_string == SKIP
      @global_request_id = global_request_id unless global_request_id == SKIP
      @pan = pan unless pan == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @processed_on = processed_on unless processed_on == SKIP
      @requested_by = requested_by unless requested_by == SKIP
      @requested_operation = requested_operation unless requested_operation == SKIP
      @request_reference = request_reference unless request_reference == SKIP
      @request_type = request_type unless request_type == SKIP
      @status = status unless status == SKIP
      @submitted_on = submitted_on unless submitted_on == SKIP
      @sub_request_reference = sub_request_reference unless sub_request_reference == SKIP
      @user_display_name = user_display_name unless user_display_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      additional_information1 =
        hash.key?('AdditionalInformation1') ? hash['AdditionalInformation1'] : SKIP
      additional_information2 =
        hash.key?('AdditionalInformation2') ? hash['AdditionalInformation2'] : SKIP
      additional_information3 =
        hash.key?('AdditionalInformation3') ? hash['AdditionalInformation3'] : SKIP
      additional_information4 =
        hash.key?('AdditionalInformation4') ? hash['AdditionalInformation4'] : SKIP
      additional_information5 =
        hash.key?('AdditionalInformation5') ? hash['AdditionalInformation5'] : SKIP
      additional_information6 =
        hash.key?('AdditionalInformation6') ? hash['AdditionalInformation6'] : SKIP
      additional_information7 =
        hash.key?('AdditionalInformation7') ? hash['AdditionalInformation7'] : SKIP
      additional_information8 =
        hash.key?('AdditionalInformation8') ? hash['AdditionalInformation8'] : SKIP
      additional_information9 =
        hash.key?('AdditionalInformation9') ? hash['AdditionalInformation9'] : SKIP
      card_group_id = hash.key?('CardGroupId') ? hash['CardGroupId'] : SKIP
      card_group_name =
        hash.key?('CardGroupName') ? hash['CardGroupName'] : SKIP
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      error_code = hash.key?('ErrorCode') ? hash['ErrorCode'] : SKIP
      error_string = hash.key?('ErrorString') ? hash['ErrorString'] : SKIP
      global_request_id =
        hash.key?('GlobalRequestID') ? hash['GlobalRequestID'] : SKIP
      pan = hash.key?('PAN') ? hash['PAN'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      processed_on = hash.key?('ProcessedOn') ? hash['ProcessedOn'] : SKIP
      requested_by = hash.key?('RequestedBy') ? hash['RequestedBy'] : SKIP
      requested_operation =
        hash.key?('RequestedOperation') ? hash['RequestedOperation'] : SKIP
      request_reference =
        hash.key?('RequestReference') ? hash['RequestReference'] : SKIP
      request_type = hash.key?('RequestType') ? hash['RequestType'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      submitted_on = hash.key?('SubmittedOn') ? hash['SubmittedOn'] : SKIP
      sub_request_reference =
        hash.key?('SubRequestReference') ? hash['SubRequestReference'] : SKIP
      user_display_name =
        hash.key?('UserDisplayName') ? hash['UserDisplayName'] : SKIP

      # Create object from extracted values.
      AuditResponseAuditsItems.new(account_id,
                                   account_number,
                                   additional_information1,
                                   additional_information2,
                                   additional_information3,
                                   additional_information4,
                                   additional_information5,
                                   additional_information6,
                                   additional_information7,
                                   additional_information8,
                                   additional_information9,
                                   card_group_id,
                                   card_group_name,
                                   card_id,
                                   col_co_code,
                                   col_co_id,
                                   error_code,
                                   error_string,
                                   global_request_id,
                                   pan,
                                   payer_id,
                                   payer_number,
                                   processed_on,
                                   requested_by,
                                   requested_operation,
                                   request_reference,
                                   request_type,
                                   status,
                                   submitted_on,
                                   sub_request_reference,
                                   user_display_name)
    end
  end
end
