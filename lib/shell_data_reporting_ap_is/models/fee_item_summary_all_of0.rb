# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FeeItemSummaryAllOf0 Model.
  class FeeItemSummaryAllOf0 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Fee type group in under which the Fee item is generated.
    # @return [String]
    attr_accessor :fee_type_group

    # Fee Type Id ID  Description
    # @return [String]
    attr_accessor :fee_type_id

    # Product Id
    # @return [Integer]
    attr_accessor :product_id

    # Product Code
    # @return [String]
    attr_accessor :product_code

    # Product Name
    # @return [String]
    attr_accessor :product_name

    # Product Group Id
    # @return [Integer]
    attr_accessor :product_group_id

    # Product Group Name
    # @return [String]
    attr_accessor :product_group_name

    # Total Quantity
    # @return [Float]
    attr_accessor :total_quantity

    # Total Net amount in invoice currency
    # @return [Float]
    attr_accessor :total_invoice_net_amount

    # Total Gross amount in invoice currency
    # @return [Float]
    attr_accessor :total_invoice_gross_amount

    # Total VAT amount in invoice currency
    # @return [Float]
    attr_accessor :total_invoice_vat_amount

    # ISO 4217 currency code of the country
    # @return [String]
    attr_accessor :invoice_currency_code

    # Currency symbol of the Invoice Currency Code
    # @return [String]
    attr_accessor :invoice_currency_symbol

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['fee_type_group'] = 'FeeTypeGroup'
      @_hash['fee_type_id'] = 'FeeTypeId'
      @_hash['product_id'] = 'ProductId'
      @_hash['product_code'] = 'ProductCode'
      @_hash['product_name'] = 'ProductName'
      @_hash['product_group_id'] = 'ProductGroupId'
      @_hash['product_group_name'] = 'ProductGroupName'
      @_hash['total_quantity'] = 'TotalQuantity'
      @_hash['total_invoice_net_amount'] = 'TotalInvoiceNetAmount'
      @_hash['total_invoice_gross_amount'] = 'TotalInvoiceGrossAmount'
      @_hash['total_invoice_vat_amount'] = 'TotalInvoiceVATAmount'
      @_hash['invoice_currency_code'] = 'InvoiceCurrencyCode'
      @_hash['invoice_currency_symbol'] = 'InvoiceCurrencySymbol'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        fee_type_group
        fee_type_id
        product_id
        product_code
        product_name
        product_group_id
        product_group_name
        total_quantity
        total_invoice_net_amount
        total_invoice_gross_amount
        total_invoice_vat_amount
        invoice_currency_code
        invoice_currency_symbol
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        fee_type_group
        fee_type_id
        product_id
        product_code
        product_name
        product_group_id
        product_group_name
        total_quantity
        total_invoice_net_amount
        total_invoice_gross_amount
        total_invoice_vat_amount
        invoice_currency_code
        invoice_currency_symbol
      ]
    end

    def initialize(fee_type_group = SKIP,
                   fee_type_id = SKIP,
                   product_id = SKIP,
                   product_code = SKIP,
                   product_name = SKIP,
                   product_group_id = SKIP,
                   product_group_name = SKIP,
                   total_quantity = SKIP,
                   total_invoice_net_amount = SKIP,
                   total_invoice_gross_amount = SKIP,
                   total_invoice_vat_amount = SKIP,
                   invoice_currency_code = SKIP,
                   invoice_currency_symbol = SKIP)
      @fee_type_group = fee_type_group unless fee_type_group == SKIP
      @fee_type_id = fee_type_id unless fee_type_id == SKIP
      @product_id = product_id unless product_id == SKIP
      @product_code = product_code unless product_code == SKIP
      @product_name = product_name unless product_name == SKIP
      @product_group_id = product_group_id unless product_group_id == SKIP
      @product_group_name = product_group_name unless product_group_name == SKIP
      @total_quantity = total_quantity unless total_quantity == SKIP
      @total_invoice_net_amount = total_invoice_net_amount unless total_invoice_net_amount == SKIP
      unless total_invoice_gross_amount == SKIP
        @total_invoice_gross_amount =
          total_invoice_gross_amount
      end
      @total_invoice_vat_amount = total_invoice_vat_amount unless total_invoice_vat_amount == SKIP
      @invoice_currency_code = invoice_currency_code unless invoice_currency_code == SKIP
      @invoice_currency_symbol = invoice_currency_symbol unless invoice_currency_symbol == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      fee_type_group = hash.key?('FeeTypeGroup') ? hash['FeeTypeGroup'] : SKIP
      fee_type_id = hash.key?('FeeTypeId') ? hash['FeeTypeId'] : SKIP
      product_id = hash.key?('ProductId') ? hash['ProductId'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      product_name = hash.key?('ProductName') ? hash['ProductName'] : SKIP
      product_group_id =
        hash.key?('ProductGroupId') ? hash['ProductGroupId'] : SKIP
      product_group_name =
        hash.key?('ProductGroupName') ? hash['ProductGroupName'] : SKIP
      total_quantity = hash.key?('TotalQuantity') ? hash['TotalQuantity'] : SKIP
      total_invoice_net_amount =
        hash.key?('TotalInvoiceNetAmount') ? hash['TotalInvoiceNetAmount'] : SKIP
      total_invoice_gross_amount =
        hash.key?('TotalInvoiceGrossAmount') ? hash['TotalInvoiceGrossAmount'] : SKIP
      total_invoice_vat_amount =
        hash.key?('TotalInvoiceVATAmount') ? hash['TotalInvoiceVATAmount'] : SKIP
      invoice_currency_code =
        hash.key?('InvoiceCurrencyCode') ? hash['InvoiceCurrencyCode'] : SKIP
      invoice_currency_symbol =
        hash.key?('InvoiceCurrencySymbol') ? hash['InvoiceCurrencySymbol'] : SKIP

      # Create object from extracted values.
      FeeItemSummaryAllOf0.new(fee_type_group,
                               fee_type_id,
                               product_id,
                               product_code,
                               product_name,
                               product_group_id,
                               product_group_name,
                               total_quantity,
                               total_invoice_net_amount,
                               total_invoice_gross_amount,
                               total_invoice_vat_amount,
                               invoice_currency_code,
                               invoice_currency_symbol)
    end
  end
end
