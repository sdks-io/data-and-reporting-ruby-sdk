# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # LastStatementOfAccount2 Model.
  class LastStatementOfAccount2 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Invoiced amount and due for payment.
    # @return [Float]
    attr_accessor :amount_due

    # Invoiced amount and not overdue for payment.
    # @return [Float]
    attr_accessor :amount_not_overdue

    # Invoiced amount and overdue for payment.
    # @return [Float]
    attr_accessor :amount_overdue

    # Credit limit.
    # @return [Integer]
    attr_accessor :credit_limit

    # ISO code of the credit limit’s currency.
    # Example: EUR
    # @return [String]
    attr_accessor :credit_limit_currency_code

    # Symbol of the credit limit’s currency.
    # Example: €
    # @return [String]
    attr_accessor :credit_limit_currency_symbol

    # Credit limit in Customer currency.
    # **Note**: For currency details refer the parameters CurrencyCode &
    # CurrencySymbol in the StatementOfAccount response.
    # @return [Float]
    attr_accessor :credit_limit_in_customer_currency

    # ISO code of SOA currency. 
    # Example: EUR
    # @return [String]
    attr_accessor :currency_code

    # Symbol of SOA currency. 
    # Example: €
    # @return [String]
    attr_accessor :currency_symbol

    # ISO code of Last Payment currency. 
    # Example: EUR
    # @return [String]
    attr_accessor :last_payment_currency_code

    # Symbol of Last Payment currency. 
    # Example: €
    # @return [String]
    attr_accessor :last_payment_currency_symbol

    # Last payment date. Format: yyyyMMdd
    # @return [String]
    attr_accessor :last_payment_date

    # Last payment value.
    # @return [Float]
    attr_accessor :last_payment_value

    # Current outstanding balance amount.
    # @return [Float]
    attr_accessor :outstanding_balance

    # Payment customer id of the customer.
    # @return [Integer]
    attr_accessor :payer_id

    # Payment customer number.
    # @return [String]
    attr_accessor :payer_number

    # Due date for payment. Format: yyyyMMdd
    # @return [String]
    attr_accessor :payment_due_date

    # Payment method description of the Payer. 
    # Example: Id & Description
    # •    Incoming - Direct Debit
    # •    Incoming - Cheque
    # •    Incoming - Direct Debit A
    # •    Incoming - Bank Transfer
    # •    Incoming - Cash
    # @return [String]
    attr_accessor :payment_method

    # Payment method Id of the Payer. 
    # Example: Id & Description
    # •    Incoming - Direct Debit
    # •    Incoming - Cheque
    # •    Incoming - Direct Debit A
    # •    Incoming - Bank Transfer
    # •    Incoming - Cash
    # @return [Integer]
    attr_accessor :payment_method_id

    # Payment terms description of the Payer.
    # Example: Id & Description
    # •    14 days after Invoice
    # •    15 days after Invoice
    # •    21 days after Invoice
    # •    30 days after Invoice
    # •    45 days after Invoice
    # •    0 days after invoice
    # •    days after invoice
    # •    days after invoice
    # •    7 days after invoice
    # •    10th of the following month
    # @return [String]
    attr_accessor :payment_terms

    # Payment terms Id of the Payer.
    # Example: Id & Description
    # •    14 days after Invoice
    # •    15 days after Invoice
    # •    21 days after Invoice
    # •    30 days after Invoice
    # •    45 days after Invoice
    # •    0 days after invoice
    # •    days after invoice
    # •    days after invoice
    # •    7 days after invoice
    # •    10th of the following month
    # @return [Integer]
    attr_accessor :payment_terms_id

    # Statement of account reference number
    # @return [String]
    attr_accessor :so_a_reference_number

    # Date on which the SOA was generated.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :statement_date

    # Statement of account identifier,
    # Example: 1
    # @return [Integer]
    attr_accessor :statement_of_account_id

    # Total number of billing documents for this Statement of Account
    # @return [Integer]
    attr_accessor :total_billing_documents

    # Total number of summary billing documents for this Statement of Account
    # @return [Integer]
    attr_accessor :total_summary_billing_documents

    # Unallocated payment. 
    # When negative, indicates overdue amount.
    # @return [Integer]
    attr_accessor :unallocated_payment

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount_due'] = 'AmountDue'
      @_hash['amount_not_overdue'] = 'AmountNotOverdue'
      @_hash['amount_overdue'] = 'AmountOverdue'
      @_hash['credit_limit'] = 'CreditLimit'
      @_hash['credit_limit_currency_code'] = 'CreditLimitCurrencyCode'
      @_hash['credit_limit_currency_symbol'] = 'CreditLimitCurrencySymbol'
      @_hash['credit_limit_in_customer_currency'] =
        'CreditLimitInCustomerCurrency'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['currency_symbol'] = 'CurrencySymbol'
      @_hash['last_payment_currency_code'] = 'LastPaymentCurrencyCode'
      @_hash['last_payment_currency_symbol'] = 'LastPaymentCurrencySymbol'
      @_hash['last_payment_date'] = 'LastPaymentDate'
      @_hash['last_payment_value'] = 'LastPaymentValue'
      @_hash['outstanding_balance'] = 'OutstandingBalance'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payment_due_date'] = 'PaymentDueDate'
      @_hash['payment_method'] = 'PaymentMethod'
      @_hash['payment_method_id'] = 'PaymentMethodId'
      @_hash['payment_terms'] = 'PaymentTerms'
      @_hash['payment_terms_id'] = 'PaymentTermsId'
      @_hash['so_a_reference_number'] = 'SoAReferenceNumber'
      @_hash['statement_date'] = 'StatementDate'
      @_hash['statement_of_account_id'] = 'StatementOfAccountId'
      @_hash['total_billing_documents'] = 'TotalBillingDocuments'
      @_hash['total_summary_billing_documents'] =
        'TotalSummaryBillingDocuments'
      @_hash['unallocated_payment'] = 'UnallocatedPayment'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        amount_due
        amount_not_overdue
        amount_overdue
        credit_limit
        credit_limit_currency_code
        credit_limit_currency_symbol
        credit_limit_in_customer_currency
        currency_code
        currency_symbol
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_date
        last_payment_value
        outstanding_balance
        payer_id
        payer_number
        payment_due_date
        payment_method
        payment_method_id
        payment_terms
        payment_terms_id
        so_a_reference_number
        statement_date
        statement_of_account_id
        total_billing_documents
        total_summary_billing_documents
        unallocated_payment
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        amount_due
        amount_not_overdue
        amount_overdue
        credit_limit
        credit_limit_currency_code
        credit_limit_currency_symbol
        credit_limit_in_customer_currency
        currency_code
        currency_symbol
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_date
        last_payment_value
        outstanding_balance
        payer_id
        payer_number
        payment_due_date
        payment_method
        payment_method_id
        payment_terms
        payment_terms_id
        so_a_reference_number
        statement_date
        statement_of_account_id
        total_billing_documents
        total_summary_billing_documents
        unallocated_payment
      ]
    end

    def initialize(amount_due = SKIP, amount_not_overdue = SKIP,
                   amount_overdue = SKIP, credit_limit = SKIP,
                   credit_limit_currency_code = SKIP,
                   credit_limit_currency_symbol = SKIP,
                   credit_limit_in_customer_currency = SKIP,
                   currency_code = SKIP, currency_symbol = SKIP,
                   last_payment_currency_code = SKIP,
                   last_payment_currency_symbol = SKIP,
                   last_payment_date = SKIP, last_payment_value = SKIP,
                   outstanding_balance = SKIP, payer_id = SKIP,
                   payer_number = SKIP, payment_due_date = SKIP,
                   payment_method = SKIP, payment_method_id = SKIP,
                   payment_terms = SKIP, payment_terms_id = SKIP,
                   so_a_reference_number = SKIP, statement_date = SKIP,
                   statement_of_account_id = SKIP,
                   total_billing_documents = SKIP,
                   total_summary_billing_documents = SKIP,
                   unallocated_payment = SKIP)
      @amount_due = amount_due unless amount_due == SKIP
      @amount_not_overdue = amount_not_overdue unless amount_not_overdue == SKIP
      @amount_overdue = amount_overdue unless amount_overdue == SKIP
      @credit_limit = credit_limit unless credit_limit == SKIP
      unless credit_limit_currency_code == SKIP
        @credit_limit_currency_code =
          credit_limit_currency_code
      end
      unless credit_limit_currency_symbol == SKIP
        @credit_limit_currency_symbol =
          credit_limit_currency_symbol
      end
      unless credit_limit_in_customer_currency == SKIP
        @credit_limit_in_customer_currency =
          credit_limit_in_customer_currency
      end
      @currency_code = currency_code unless currency_code == SKIP
      @currency_symbol = currency_symbol unless currency_symbol == SKIP
      unless last_payment_currency_code == SKIP
        @last_payment_currency_code =
          last_payment_currency_code
      end
      unless last_payment_currency_symbol == SKIP
        @last_payment_currency_symbol =
          last_payment_currency_symbol
      end
      @last_payment_date = last_payment_date unless last_payment_date == SKIP
      @last_payment_value = last_payment_value unless last_payment_value == SKIP
      @outstanding_balance = outstanding_balance unless outstanding_balance == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payment_due_date = payment_due_date unless payment_due_date == SKIP
      @payment_method = payment_method unless payment_method == SKIP
      @payment_method_id = payment_method_id unless payment_method_id == SKIP
      @payment_terms = payment_terms unless payment_terms == SKIP
      @payment_terms_id = payment_terms_id unless payment_terms_id == SKIP
      @so_a_reference_number = so_a_reference_number unless so_a_reference_number == SKIP
      @statement_date = statement_date unless statement_date == SKIP
      @statement_of_account_id = statement_of_account_id unless statement_of_account_id == SKIP
      @total_billing_documents = total_billing_documents unless total_billing_documents == SKIP
      unless total_summary_billing_documents == SKIP
        @total_summary_billing_documents =
          total_summary_billing_documents
      end
      @unallocated_payment = unallocated_payment unless unallocated_payment == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount_due = hash.key?('AmountDue') ? hash['AmountDue'] : SKIP
      amount_not_overdue =
        hash.key?('AmountNotOverdue') ? hash['AmountNotOverdue'] : SKIP
      amount_overdue = hash.key?('AmountOverdue') ? hash['AmountOverdue'] : SKIP
      credit_limit = hash.key?('CreditLimit') ? hash['CreditLimit'] : SKIP
      credit_limit_currency_code =
        hash.key?('CreditLimitCurrencyCode') ? hash['CreditLimitCurrencyCode'] : SKIP
      credit_limit_currency_symbol =
        hash.key?('CreditLimitCurrencySymbol') ? hash['CreditLimitCurrencySymbol'] : SKIP
      credit_limit_in_customer_currency =
        hash.key?('CreditLimitInCustomerCurrency') ? hash['CreditLimitInCustomerCurrency'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      currency_symbol =
        hash.key?('CurrencySymbol') ? hash['CurrencySymbol'] : SKIP
      last_payment_currency_code =
        hash.key?('LastPaymentCurrencyCode') ? hash['LastPaymentCurrencyCode'] : SKIP
      last_payment_currency_symbol =
        hash.key?('LastPaymentCurrencySymbol') ? hash['LastPaymentCurrencySymbol'] : SKIP
      last_payment_date =
        hash.key?('LastPaymentDate') ? hash['LastPaymentDate'] : SKIP
      last_payment_value =
        hash.key?('LastPaymentValue') ? hash['LastPaymentValue'] : SKIP
      outstanding_balance =
        hash.key?('OutstandingBalance') ? hash['OutstandingBalance'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payment_due_date =
        hash.key?('PaymentDueDate') ? hash['PaymentDueDate'] : SKIP
      payment_method = hash.key?('PaymentMethod') ? hash['PaymentMethod'] : SKIP
      payment_method_id =
        hash.key?('PaymentMethodId') ? hash['PaymentMethodId'] : SKIP
      payment_terms = hash.key?('PaymentTerms') ? hash['PaymentTerms'] : SKIP
      payment_terms_id =
        hash.key?('PaymentTermsId') ? hash['PaymentTermsId'] : SKIP
      so_a_reference_number =
        hash.key?('SoAReferenceNumber') ? hash['SoAReferenceNumber'] : SKIP
      statement_date = hash.key?('StatementDate') ? hash['StatementDate'] : SKIP
      statement_of_account_id =
        hash.key?('StatementOfAccountId') ? hash['StatementOfAccountId'] : SKIP
      total_billing_documents =
        hash.key?('TotalBillingDocuments') ? hash['TotalBillingDocuments'] : SKIP
      total_summary_billing_documents =
        hash.key?('TotalSummaryBillingDocuments') ? hash['TotalSummaryBillingDocuments'] : SKIP
      unallocated_payment =
        hash.key?('UnallocatedPayment') ? hash['UnallocatedPayment'] : SKIP

      # Create object from extracted values.
      LastStatementOfAccount2.new(amount_due,
                                  amount_not_overdue,
                                  amount_overdue,
                                  credit_limit,
                                  credit_limit_currency_code,
                                  credit_limit_currency_symbol,
                                  credit_limit_in_customer_currency,
                                  currency_code,
                                  currency_symbol,
                                  last_payment_currency_code,
                                  last_payment_currency_symbol,
                                  last_payment_date,
                                  last_payment_value,
                                  outstanding_balance,
                                  payer_id,
                                  payer_number,
                                  payment_due_date,
                                  payment_method,
                                  payment_method_id,
                                  payment_terms,
                                  payment_terms_id,
                                  so_a_reference_number,
                                  statement_date,
                                  statement_of_account_id,
                                  total_billing_documents,
                                  total_summary_billing_documents,
                                  unallocated_payment)
    end
  end
end
