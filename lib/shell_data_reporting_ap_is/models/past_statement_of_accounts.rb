# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PastStatementOfAccounts Model.
  class PastStatementOfAccounts < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Invoiced amount under this statement of account and due for payment.
    # @return [Float]
    attr_accessor :amount_due

    # Total Invoiced amount until this SOA and not overdue for payment.
    # @return [Float]
    attr_accessor :amount_not_overdue

    # Overdue amount from the previously generated statement of accounts.
    # @return [Float]
    attr_accessor :amount_overdue

    # Overdue amount calculated from unallocated payment.
    # @return [Float]
    attr_accessor :amount_overdue_from_unallocated

    # Amount settled for this Statement.
    # @return [Float]
    attr_accessor :amount_paid

    # Balance amount to be settled on this SOA.
    # @return [Float]
    attr_accessor :balance_on_this_statement

    # Billing currency ISO code.
    # Example: EUR
    # @return [String]
    attr_accessor :billing_currency_code

    # Billing currency symbol.
    # Example: €
    # @return [String]
    attr_accessor :billing_currency_symbol

    # Credit limit.
    # @return [Float]
    attr_accessor :credit_limit

    # ISO code of the credit limit’s currency.
    # Example: EUR
    # @return [String]
    attr_accessor :credit_limit_currency_code

    # Symbol of the credit limit’s currency.
    # Example: €
    # @return [String]
    attr_accessor :credit_limit_currency_symbol

    # Credit limit in Customer currency.
    # Note: For currency details refer the parameters CurrencyCode &
    # CurrencySymbol in the SOADetail response.
    # @return [Float]
    attr_accessor :credit_limit_in_customer_currency

    # ISO code of SOA currency. 
    # Example: EUR
    # @return [String]
    attr_accessor :currency_code

    # Symbol of SOA currency. 
    # Example: €
    # @return [String]
    attr_accessor :currency_symbol

    # True If all summary billing documents under this SOA are fully paid (i.e.,
    # the fully paid flag is set to true for all documents or the amount
    # allocated is greater than or equal to the amount due under this SOA.
    # @return [TrueClass | FalseClass]
    attr_accessor :fully_paid

    # ISO code of last payment currency. 
    # Example: EUR
    # @return [String]
    attr_accessor :last_payment_currency_code

    # Symbol of last payment currency. 
    # Example: €
    # @return [String]
    attr_accessor :last_payment_currency_symbol

    # Last payment date. Format: yyyyMMdd
    # @return [String]
    attr_accessor :last_payment_date

    # Last payment value.
    # @return [Float]
    attr_accessor :last_payment_value

    # Total outstanding balance at the time of this SOA generation.
    # @return [Float]
    attr_accessor :outstanding_balance

    # Payment customer id of the customer.
    # @return [Integer]
    attr_accessor :payer_id

    # Payment customer number.
    # @return [String]
    attr_accessor :payer_number

    # Due date for payment. Format: yyyyMMdd
    # @return [String]
    attr_accessor :payment_due_date

    # Statement of account reference number.
    # @return [String]
    attr_accessor :so_a_reference_number

    # Date on which the SOA was generated.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :statement_date

    # Statement of account identifier,
    # @return [Integer]
    attr_accessor :statement_of_account_id

    # Total number of billing documents generated under this Statement of
    # Account.
    # @return [Integer]
    attr_accessor :total_billing_documents

    # Total NET amount from all billing documents in this SOA.
    # @return [Float]
    attr_accessor :total_net_amount_billing_currency

    # Total number of summary billing documents for this Statement of Account
    # @return [Float]
    attr_accessor :total_summary_billing_documents

    # Total VAT amount from all billing documents in this SOA.
    # @return [Float]
    attr_accessor :total_vat_amount_billing_currency

    # Amount paid but not allocated to any invoices at the time of this SOA
    # generation.
    # @return [Float]
    attr_accessor :unallocated_payment

    # Currency ISO code of the local country. It is derived based on CountryCode
    # from microservice configuration. This field is expected to have different
    # value than the previously mentioned field CurrencyCode, only in the case
    # of serviced OUs.
    # Example: EUR
    # @return [String]
    attr_accessor :local_currency_code

    # Currency Symbol of the local country. It is derived based on CountryCode
    # from microservice configuration. This field is expected to have different
    # value than the previously mentioned field CurrencySymbol, only in the case
    # of serviced OUs.
    # Example: €
    # @return [String]
    attr_accessor :local_currency_symbol

    # Exchange rate from Billing currency to local currency.
    # Example: 1.2
    # @return [Float]
    attr_accessor :local_currency_exchange_rate

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount_due'] = 'AmountDue'
      @_hash['amount_not_overdue'] = 'AmountNotOverdue'
      @_hash['amount_overdue'] = 'AmountOverdue'
      @_hash['amount_overdue_from_unallocated'] =
        'AmountOverdueFromUnallocated'
      @_hash['amount_paid'] = 'AmountPaid'
      @_hash['balance_on_this_statement'] = 'BalanceOnThisStatement'
      @_hash['billing_currency_code'] = 'BillingCurrencyCode'
      @_hash['billing_currency_symbol'] = 'BillingCurrencySymbol'
      @_hash['credit_limit'] = 'CreditLimit'
      @_hash['credit_limit_currency_code'] = 'CreditLimitCurrencyCode'
      @_hash['credit_limit_currency_symbol'] = 'CreditLimitCurrencySymbol'
      @_hash['credit_limit_in_customer_currency'] =
        'CreditLimitInCustomerCurrency'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['currency_symbol'] = 'CurrencySymbol'
      @_hash['fully_paid'] = 'FullyPaid'
      @_hash['last_payment_currency_code'] = 'LastPaymentCurrencyCode'
      @_hash['last_payment_currency_symbol'] = 'LastPaymentCurrencySymbol'
      @_hash['last_payment_date'] = 'LastPaymentDate'
      @_hash['last_payment_value'] = 'LastPaymentValue'
      @_hash['outstanding_balance'] = 'OutstandingBalance'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payment_due_date'] = 'PaymentDueDate'
      @_hash['so_a_reference_number'] = 'SoAReferenceNumber'
      @_hash['statement_date'] = 'StatementDate'
      @_hash['statement_of_account_id'] = 'StatementOfAccountId'
      @_hash['total_billing_documents'] = 'TotalBillingDocuments'
      @_hash['total_net_amount_billing_currency'] =
        'TotalNetAmountBillingCurrency'
      @_hash['total_summary_billing_documents'] =
        'TotalSummaryBillingDocuments'
      @_hash['total_vat_amount_billing_currency'] =
        'TotalVATAmountBillingCurrency'
      @_hash['unallocated_payment'] = 'UnallocatedPayment'
      @_hash['local_currency_code'] = 'LocalCurrencyCode'
      @_hash['local_currency_symbol'] = 'LocalCurrencySymbol'
      @_hash['local_currency_exchange_rate'] = 'LocalCurrencyExchangeRate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        amount_due
        amount_not_overdue
        amount_overdue
        amount_overdue_from_unallocated
        amount_paid
        balance_on_this_statement
        billing_currency_code
        billing_currency_symbol
        credit_limit
        credit_limit_currency_code
        credit_limit_currency_symbol
        credit_limit_in_customer_currency
        currency_code
        currency_symbol
        fully_paid
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_date
        last_payment_value
        outstanding_balance
        payer_id
        payer_number
        payment_due_date
        so_a_reference_number
        statement_date
        statement_of_account_id
        total_billing_documents
        total_net_amount_billing_currency
        total_summary_billing_documents
        total_vat_amount_billing_currency
        unallocated_payment
        local_currency_code
        local_currency_symbol
        local_currency_exchange_rate
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        amount_due
        amount_not_overdue
        amount_overdue
        amount_overdue_from_unallocated
        amount_paid
        balance_on_this_statement
        billing_currency_code
        billing_currency_symbol
        credit_limit
        credit_limit_currency_code
        credit_limit_currency_symbol
        credit_limit_in_customer_currency
        currency_code
        currency_symbol
        fully_paid
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_date
        last_payment_value
        outstanding_balance
        payer_id
        payer_number
        payment_due_date
        so_a_reference_number
        statement_date
        statement_of_account_id
        total_billing_documents
        total_net_amount_billing_currency
        total_summary_billing_documents
        total_vat_amount_billing_currency
        unallocated_payment
        local_currency_code
        local_currency_symbol
        local_currency_exchange_rate
      ]
    end

    def initialize(amount_due = SKIP,
                   amount_not_overdue = SKIP,
                   amount_overdue = SKIP,
                   amount_overdue_from_unallocated = SKIP,
                   amount_paid = SKIP,
                   balance_on_this_statement = SKIP,
                   billing_currency_code = SKIP,
                   billing_currency_symbol = SKIP,
                   credit_limit = SKIP,
                   credit_limit_currency_code = SKIP,
                   credit_limit_currency_symbol = SKIP,
                   credit_limit_in_customer_currency = SKIP,
                   currency_code = SKIP,
                   currency_symbol = SKIP,
                   fully_paid = SKIP,
                   last_payment_currency_code = SKIP,
                   last_payment_currency_symbol = SKIP,
                   last_payment_date = SKIP,
                   last_payment_value = SKIP,
                   outstanding_balance = SKIP,
                   payer_id = SKIP,
                   payer_number = SKIP,
                   payment_due_date = SKIP,
                   so_a_reference_number = SKIP,
                   statement_date = SKIP,
                   statement_of_account_id = SKIP,
                   total_billing_documents = SKIP,
                   total_net_amount_billing_currency = SKIP,
                   total_summary_billing_documents = SKIP,
                   total_vat_amount_billing_currency = SKIP,
                   unallocated_payment = SKIP,
                   local_currency_code = SKIP,
                   local_currency_symbol = SKIP,
                   local_currency_exchange_rate = SKIP)
      @amount_due = amount_due unless amount_due == SKIP
      @amount_not_overdue = amount_not_overdue unless amount_not_overdue == SKIP
      @amount_overdue = amount_overdue unless amount_overdue == SKIP
      unless amount_overdue_from_unallocated == SKIP
        @amount_overdue_from_unallocated =
          amount_overdue_from_unallocated
      end
      @amount_paid = amount_paid unless amount_paid == SKIP
      unless balance_on_this_statement == SKIP
        @balance_on_this_statement =
          balance_on_this_statement
      end
      @billing_currency_code = billing_currency_code unless billing_currency_code == SKIP
      @billing_currency_symbol = billing_currency_symbol unless billing_currency_symbol == SKIP
      @credit_limit = credit_limit unless credit_limit == SKIP
      unless credit_limit_currency_code == SKIP
        @credit_limit_currency_code =
          credit_limit_currency_code
      end
      unless credit_limit_currency_symbol == SKIP
        @credit_limit_currency_symbol =
          credit_limit_currency_symbol
      end
      unless credit_limit_in_customer_currency == SKIP
        @credit_limit_in_customer_currency =
          credit_limit_in_customer_currency
      end
      @currency_code = currency_code unless currency_code == SKIP
      @currency_symbol = currency_symbol unless currency_symbol == SKIP
      @fully_paid = fully_paid unless fully_paid == SKIP
      unless last_payment_currency_code == SKIP
        @last_payment_currency_code =
          last_payment_currency_code
      end
      unless last_payment_currency_symbol == SKIP
        @last_payment_currency_symbol =
          last_payment_currency_symbol
      end
      @last_payment_date = last_payment_date unless last_payment_date == SKIP
      @last_payment_value = last_payment_value unless last_payment_value == SKIP
      @outstanding_balance = outstanding_balance unless outstanding_balance == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payment_due_date = payment_due_date unless payment_due_date == SKIP
      @so_a_reference_number = so_a_reference_number unless so_a_reference_number == SKIP
      @statement_date = statement_date unless statement_date == SKIP
      @statement_of_account_id = statement_of_account_id unless statement_of_account_id == SKIP
      @total_billing_documents = total_billing_documents unless total_billing_documents == SKIP
      unless total_net_amount_billing_currency == SKIP
        @total_net_amount_billing_currency =
          total_net_amount_billing_currency
      end
      unless total_summary_billing_documents == SKIP
        @total_summary_billing_documents =
          total_summary_billing_documents
      end
      unless total_vat_amount_billing_currency == SKIP
        @total_vat_amount_billing_currency =
          total_vat_amount_billing_currency
      end
      @unallocated_payment = unallocated_payment unless unallocated_payment == SKIP
      @local_currency_code = local_currency_code unless local_currency_code == SKIP
      @local_currency_symbol = local_currency_symbol unless local_currency_symbol == SKIP
      unless local_currency_exchange_rate == SKIP
        @local_currency_exchange_rate =
          local_currency_exchange_rate
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount_due = hash.key?('AmountDue') ? hash['AmountDue'] : SKIP
      amount_not_overdue =
        hash.key?('AmountNotOverdue') ? hash['AmountNotOverdue'] : SKIP
      amount_overdue = hash.key?('AmountOverdue') ? hash['AmountOverdue'] : SKIP
      amount_overdue_from_unallocated =
        hash.key?('AmountOverdueFromUnallocated') ? hash['AmountOverdueFromUnallocated'] : SKIP
      amount_paid = hash.key?('AmountPaid') ? hash['AmountPaid'] : SKIP
      balance_on_this_statement =
        hash.key?('BalanceOnThisStatement') ? hash['BalanceOnThisStatement'] : SKIP
      billing_currency_code =
        hash.key?('BillingCurrencyCode') ? hash['BillingCurrencyCode'] : SKIP
      billing_currency_symbol =
        hash.key?('BillingCurrencySymbol') ? hash['BillingCurrencySymbol'] : SKIP
      credit_limit = hash.key?('CreditLimit') ? hash['CreditLimit'] : SKIP
      credit_limit_currency_code =
        hash.key?('CreditLimitCurrencyCode') ? hash['CreditLimitCurrencyCode'] : SKIP
      credit_limit_currency_symbol =
        hash.key?('CreditLimitCurrencySymbol') ? hash['CreditLimitCurrencySymbol'] : SKIP
      credit_limit_in_customer_currency =
        hash.key?('CreditLimitInCustomerCurrency') ? hash['CreditLimitInCustomerCurrency'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      currency_symbol =
        hash.key?('CurrencySymbol') ? hash['CurrencySymbol'] : SKIP
      fully_paid = hash.key?('FullyPaid') ? hash['FullyPaid'] : SKIP
      last_payment_currency_code =
        hash.key?('LastPaymentCurrencyCode') ? hash['LastPaymentCurrencyCode'] : SKIP
      last_payment_currency_symbol =
        hash.key?('LastPaymentCurrencySymbol') ? hash['LastPaymentCurrencySymbol'] : SKIP
      last_payment_date =
        hash.key?('LastPaymentDate') ? hash['LastPaymentDate'] : SKIP
      last_payment_value =
        hash.key?('LastPaymentValue') ? hash['LastPaymentValue'] : SKIP
      outstanding_balance =
        hash.key?('OutstandingBalance') ? hash['OutstandingBalance'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payment_due_date =
        hash.key?('PaymentDueDate') ? hash['PaymentDueDate'] : SKIP
      so_a_reference_number =
        hash.key?('SoAReferenceNumber') ? hash['SoAReferenceNumber'] : SKIP
      statement_date = hash.key?('StatementDate') ? hash['StatementDate'] : SKIP
      statement_of_account_id =
        hash.key?('StatementOfAccountId') ? hash['StatementOfAccountId'] : SKIP
      total_billing_documents =
        hash.key?('TotalBillingDocuments') ? hash['TotalBillingDocuments'] : SKIP
      total_net_amount_billing_currency =
        hash.key?('TotalNetAmountBillingCurrency') ? hash['TotalNetAmountBillingCurrency'] : SKIP
      total_summary_billing_documents =
        hash.key?('TotalSummaryBillingDocuments') ? hash['TotalSummaryBillingDocuments'] : SKIP
      total_vat_amount_billing_currency =
        hash.key?('TotalVATAmountBillingCurrency') ? hash['TotalVATAmountBillingCurrency'] : SKIP
      unallocated_payment =
        hash.key?('UnallocatedPayment') ? hash['UnallocatedPayment'] : SKIP
      local_currency_code =
        hash.key?('LocalCurrencyCode') ? hash['LocalCurrencyCode'] : SKIP
      local_currency_symbol =
        hash.key?('LocalCurrencySymbol') ? hash['LocalCurrencySymbol'] : SKIP
      local_currency_exchange_rate =
        hash.key?('LocalCurrencyExchangeRate') ? hash['LocalCurrencyExchangeRate'] : SKIP

      # Create object from extracted values.
      PastStatementOfAccounts.new(amount_due,
                                  amount_not_overdue,
                                  amount_overdue,
                                  amount_overdue_from_unallocated,
                                  amount_paid,
                                  balance_on_this_statement,
                                  billing_currency_code,
                                  billing_currency_symbol,
                                  credit_limit,
                                  credit_limit_currency_code,
                                  credit_limit_currency_symbol,
                                  credit_limit_in_customer_currency,
                                  currency_code,
                                  currency_symbol,
                                  fully_paid,
                                  last_payment_currency_code,
                                  last_payment_currency_symbol,
                                  last_payment_date,
                                  last_payment_value,
                                  outstanding_balance,
                                  payer_id,
                                  payer_number,
                                  payment_due_date,
                                  so_a_reference_number,
                                  statement_date,
                                  statement_of_account_id,
                                  total_billing_documents,
                                  total_net_amount_billing_currency,
                                  total_summary_billing_documents,
                                  total_vat_amount_billing_currency,
                                  unallocated_payment,
                                  local_currency_code,
                                  local_currency_symbol,
                                  local_currency_exchange_rate)
    end
  end
end
