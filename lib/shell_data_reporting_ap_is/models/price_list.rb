# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PriceList Model.
  class PriceList < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Date on which the price is applicable.
    # Format: yyyyMMdd
    # E.g.: 20180131
    # @return [String]
    attr_accessor :date

    # Day on which the price is applicable.
    # E.g.: Sunday, Monday etc.
    # @return [String]
    attr_accessor :day

    # Price list type.
    # E.g., List, Shell Standard International List
    # @return [String]
    attr_accessor :type

    # Price list ID
    # @return [Integer]
    attr_accessor :price_list_id

    # Price list description
    # E.g., UK Fuels CRT Reseller List Price
    # @return [String]
    attr_accessor :price_list_description

    # Price Rule Id
    # @return [Integer]
    attr_accessor :price_rule_id

    # Price Rule Name
    # @return [String]
    attr_accessor :price_rule_name

    # DelCo Id
    # @return [Integer]
    attr_accessor :del_co_id

    # Country ISO Code
    # E.g., UK, NL, etc.,
    # @return [String]
    attr_accessor :country_code

    # Country
    # E.g., United Kingdom, Netherlands etc
    # @return [String]
    attr_accessor :country

    # Product Group Id
    # @return [Integer]
    attr_accessor :product_group_id

    # Product Group name
    # @return [String]
    attr_accessor :product_group_name

    # Client Product Code
    # @return [String]
    attr_accessor :product_code

    # Product Id
    # @return [Integer]
    attr_accessor :product_id

    # Product name in English
    # @return [String]
    attr_accessor :product_name

    # Price per unit
    # @return [Float]
    attr_accessor :price_per_unit

    # Currency Code.
    # Format : 3 digit ISO code
    # @return [String]
    attr_accessor :currency_code

    # Currency Symbol
    # Example: £
    # @return [String]
    attr_accessor :currency_symbol

    # Price Type
    # Possible Values are:
    # •	Country– Price rule defined at country whereas Price Rule DelcoId same
    # as ColcoId.
    # •	TPNDelcoPrice – Price rule defined in the TPN whereas Price Rule DelcoId
    # is different from ColcoId.
    # •	NetworkPrice – Price rule defined at Fuel Network level.
    # •	Other – Price rule defined at either Site or SiteGroup level.
    # @return [String]
    attr_accessor :price_type

    # Site-Group ID
    # E.g.: 100007
    # @return [Integer]
    attr_accessor :site_group_id

    # Site-Group name
    # @return [String]
    attr_accessor :site_group_name

    # Site Code
    # @return [Integer]
    attr_accessor :site_code

    # Site ID
    # @return [Integer]
    attr_accessor :site_id

    # Site Name
    # @return [String]
    attr_accessor :site_name

    # Fuel Network ID
    # @return [Integer]
    attr_accessor :fuel_network_id

    # Network Name
    # @return [String]
    attr_accessor :network_name

    # PriceRuleDelcoId
    # @return [Integer]
    attr_accessor :price_rule_delco_id

    # Company Name of the price rule DelCo. 
    # E.g.: 
    # •	Pilipinas Shell Petroleum Corp
    # •	Shell U.K. Oil Products Limited
    # •	G & V SERVICE STATIONS NV
    # @return [String]
    attr_accessor :price_rule_delco_name

    # PriceRuleCountry
    # E.g.: United Kingdom
    # @return [String]
    attr_accessor :price_rule_country

    # ISO Code of PriceRuleCountry
    # E.g.: UK, NL, etc.,
    # @return [String]
    attr_accessor :price_rule_country_code

    # PriceRuleBasisId
    # @return [Integer]
    attr_accessor :price_rule_basis_id

    # Discount value
    # @return [Float]
    attr_accessor :discount_value

    # Price per unit after discount
    # @return [Float]
    attr_accessor :price_per_unit_after_discount

    # VAT Percentage
    # @return [Float]
    attr_accessor :vat_percentage

    # PriceRuleCategoryId
    # @return [Integer]
    attr_accessor :price_rule_category_id

    # PriceRuleCategoryId
    # @return [Array[Tier]]
    attr_accessor :tiers

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['date'] = 'Date'
      @_hash['day'] = 'Day'
      @_hash['type'] = 'Type'
      @_hash['price_list_id'] = 'PriceListId'
      @_hash['price_list_description'] = 'PriceListDescription'
      @_hash['price_rule_id'] = 'PriceRuleId'
      @_hash['price_rule_name'] = 'PriceRuleName'
      @_hash['del_co_id'] = 'DelCoId'
      @_hash['country_code'] = 'CountryCode'
      @_hash['country'] = 'Country'
      @_hash['product_group_id'] = 'ProductGroupId'
      @_hash['product_group_name'] = 'ProductGroupName'
      @_hash['product_code'] = 'ProductCode'
      @_hash['product_id'] = 'ProductId'
      @_hash['product_name'] = 'ProductName'
      @_hash['price_per_unit'] = 'PricePerUnit'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['currency_symbol'] = 'CurrencySymbol'
      @_hash['price_type'] = 'PriceType'
      @_hash['site_group_id'] = 'SiteGroupId'
      @_hash['site_group_name'] = 'SiteGroupName'
      @_hash['site_code'] = 'SiteCode'
      @_hash['site_id'] = 'SiteId'
      @_hash['site_name'] = 'SiteName'
      @_hash['fuel_network_id'] = 'FuelNetworkId'
      @_hash['network_name'] = 'NetworkName'
      @_hash['price_rule_delco_id'] = 'PriceRuleDelcoId'
      @_hash['price_rule_delco_name'] = 'PriceRuleDelcoName'
      @_hash['price_rule_country'] = 'PriceRuleCountry'
      @_hash['price_rule_country_code'] = 'PriceRuleCountryCode'
      @_hash['price_rule_basis_id'] = 'PriceRuleBasisId'
      @_hash['discount_value'] = 'DiscountValue'
      @_hash['price_per_unit_after_discount'] = 'PricePerUnitAfterDiscount'
      @_hash['vat_percentage'] = 'VATPercentage'
      @_hash['price_rule_category_id'] = 'PriceRuleCategoryId'
      @_hash['tiers'] = 'Tiers'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        date
        day
        type
        price_list_id
        price_list_description
        price_rule_id
        price_rule_name
        del_co_id
        country_code
        country
        product_group_id
        product_group_name
        product_code
        product_id
        product_name
        price_per_unit
        currency_code
        currency_symbol
        price_type
        site_group_id
        site_group_name
        site_code
        site_id
        site_name
        fuel_network_id
        network_name
        price_rule_delco_id
        price_rule_delco_name
        price_rule_country
        price_rule_country_code
        price_rule_basis_id
        discount_value
        price_per_unit_after_discount
        vat_percentage
        price_rule_category_id
        tiers
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        date
        day
        type
        price_list_id
        price_list_description
        price_rule_id
        price_rule_name
        del_co_id
        country_code
        country
        product_group_id
        product_group_name
        product_code
        product_id
        product_name
        price_per_unit
        currency_code
        currency_symbol
        price_type
        site_group_id
        site_group_name
        site_code
        site_id
        site_name
        fuel_network_id
        network_name
        price_rule_delco_id
        price_rule_delco_name
        price_rule_country
        price_rule_country_code
        price_rule_basis_id
        discount_value
        price_per_unit_after_discount
        vat_percentage
        price_rule_category_id
      ]
    end

    def initialize(date = SKIP,
                   day = SKIP,
                   type = SKIP,
                   price_list_id = SKIP,
                   price_list_description = SKIP,
                   price_rule_id = SKIP,
                   price_rule_name = SKIP,
                   del_co_id = SKIP,
                   country_code = SKIP,
                   country = SKIP,
                   product_group_id = SKIP,
                   product_group_name = SKIP,
                   product_code = SKIP,
                   product_id = SKIP,
                   product_name = SKIP,
                   price_per_unit = SKIP,
                   currency_code = SKIP,
                   currency_symbol = SKIP,
                   price_type = SKIP,
                   site_group_id = SKIP,
                   site_group_name = SKIP,
                   site_code = SKIP,
                   site_id = SKIP,
                   site_name = SKIP,
                   fuel_network_id = SKIP,
                   network_name = SKIP,
                   price_rule_delco_id = SKIP,
                   price_rule_delco_name = SKIP,
                   price_rule_country = SKIP,
                   price_rule_country_code = SKIP,
                   price_rule_basis_id = SKIP,
                   discount_value = SKIP,
                   price_per_unit_after_discount = SKIP,
                   vat_percentage = SKIP,
                   price_rule_category_id = SKIP,
                   tiers = SKIP)
      @date = date unless date == SKIP
      @day = day unless day == SKIP
      @type = type unless type == SKIP
      @price_list_id = price_list_id unless price_list_id == SKIP
      @price_list_description = price_list_description unless price_list_description == SKIP
      @price_rule_id = price_rule_id unless price_rule_id == SKIP
      @price_rule_name = price_rule_name unless price_rule_name == SKIP
      @del_co_id = del_co_id unless del_co_id == SKIP
      @country_code = country_code unless country_code == SKIP
      @country = country unless country == SKIP
      @product_group_id = product_group_id unless product_group_id == SKIP
      @product_group_name = product_group_name unless product_group_name == SKIP
      @product_code = product_code unless product_code == SKIP
      @product_id = product_id unless product_id == SKIP
      @product_name = product_name unless product_name == SKIP
      @price_per_unit = price_per_unit unless price_per_unit == SKIP
      @currency_code = currency_code unless currency_code == SKIP
      @currency_symbol = currency_symbol unless currency_symbol == SKIP
      @price_type = price_type unless price_type == SKIP
      @site_group_id = site_group_id unless site_group_id == SKIP
      @site_group_name = site_group_name unless site_group_name == SKIP
      @site_code = site_code unless site_code == SKIP
      @site_id = site_id unless site_id == SKIP
      @site_name = site_name unless site_name == SKIP
      @fuel_network_id = fuel_network_id unless fuel_network_id == SKIP
      @network_name = network_name unless network_name == SKIP
      @price_rule_delco_id = price_rule_delco_id unless price_rule_delco_id == SKIP
      @price_rule_delco_name = price_rule_delco_name unless price_rule_delco_name == SKIP
      @price_rule_country = price_rule_country unless price_rule_country == SKIP
      @price_rule_country_code = price_rule_country_code unless price_rule_country_code == SKIP
      @price_rule_basis_id = price_rule_basis_id unless price_rule_basis_id == SKIP
      @discount_value = discount_value unless discount_value == SKIP
      unless price_per_unit_after_discount == SKIP
        @price_per_unit_after_discount =
          price_per_unit_after_discount
      end
      @vat_percentage = vat_percentage unless vat_percentage == SKIP
      @price_rule_category_id = price_rule_category_id unless price_rule_category_id == SKIP
      @tiers = tiers unless tiers == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      date = hash.key?('Date') ? hash['Date'] : SKIP
      day = hash.key?('Day') ? hash['Day'] : SKIP
      type = hash.key?('Type') ? hash['Type'] : SKIP
      price_list_id = hash.key?('PriceListId') ? hash['PriceListId'] : SKIP
      price_list_description =
        hash.key?('PriceListDescription') ? hash['PriceListDescription'] : SKIP
      price_rule_id = hash.key?('PriceRuleId') ? hash['PriceRuleId'] : SKIP
      price_rule_name =
        hash.key?('PriceRuleName') ? hash['PriceRuleName'] : SKIP
      del_co_id = hash.key?('DelCoId') ? hash['DelCoId'] : SKIP
      country_code = hash.key?('CountryCode') ? hash['CountryCode'] : SKIP
      country = hash.key?('Country') ? hash['Country'] : SKIP
      product_group_id =
        hash.key?('ProductGroupId') ? hash['ProductGroupId'] : SKIP
      product_group_name =
        hash.key?('ProductGroupName') ? hash['ProductGroupName'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      product_id = hash.key?('ProductId') ? hash['ProductId'] : SKIP
      product_name = hash.key?('ProductName') ? hash['ProductName'] : SKIP
      price_per_unit = hash.key?('PricePerUnit') ? hash['PricePerUnit'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      currency_symbol =
        hash.key?('CurrencySymbol') ? hash['CurrencySymbol'] : SKIP
      price_type = hash.key?('PriceType') ? hash['PriceType'] : SKIP
      site_group_id = hash.key?('SiteGroupId') ? hash['SiteGroupId'] : SKIP
      site_group_name =
        hash.key?('SiteGroupName') ? hash['SiteGroupName'] : SKIP
      site_code = hash.key?('SiteCode') ? hash['SiteCode'] : SKIP
      site_id = hash.key?('SiteId') ? hash['SiteId'] : SKIP
      site_name = hash.key?('SiteName') ? hash['SiteName'] : SKIP
      fuel_network_id =
        hash.key?('FuelNetworkId') ? hash['FuelNetworkId'] : SKIP
      network_name = hash.key?('NetworkName') ? hash['NetworkName'] : SKIP
      price_rule_delco_id =
        hash.key?('PriceRuleDelcoId') ? hash['PriceRuleDelcoId'] : SKIP
      price_rule_delco_name =
        hash.key?('PriceRuleDelcoName') ? hash['PriceRuleDelcoName'] : SKIP
      price_rule_country =
        hash.key?('PriceRuleCountry') ? hash['PriceRuleCountry'] : SKIP
      price_rule_country_code =
        hash.key?('PriceRuleCountryCode') ? hash['PriceRuleCountryCode'] : SKIP
      price_rule_basis_id =
        hash.key?('PriceRuleBasisId') ? hash['PriceRuleBasisId'] : SKIP
      discount_value = hash.key?('DiscountValue') ? hash['DiscountValue'] : SKIP
      price_per_unit_after_discount =
        hash.key?('PricePerUnitAfterDiscount') ? hash['PricePerUnitAfterDiscount'] : SKIP
      vat_percentage = hash.key?('VATPercentage') ? hash['VATPercentage'] : SKIP
      price_rule_category_id =
        hash.key?('PriceRuleCategoryId') ? hash['PriceRuleCategoryId'] : SKIP
      # Parameter is an array, so we need to iterate through it
      tiers = nil
      unless hash['Tiers'].nil?
        tiers = []
        hash['Tiers'].each do |structure|
          tiers << (Tier.from_hash(structure) if structure)
        end
      end

      tiers = SKIP unless hash.key?('Tiers')

      # Create object from extracted values.
      PriceList.new(date,
                    day,
                    type,
                    price_list_id,
                    price_list_description,
                    price_rule_id,
                    price_rule_name,
                    del_co_id,
                    country_code,
                    country,
                    product_group_id,
                    product_group_name,
                    product_code,
                    product_id,
                    product_name,
                    price_per_unit,
                    currency_code,
                    currency_symbol,
                    price_type,
                    site_group_id,
                    site_group_name,
                    site_code,
                    site_id,
                    site_name,
                    fuel_network_id,
                    network_name,
                    price_rule_delco_id,
                    price_rule_delco_name,
                    price_rule_country,
                    price_rule_country_code,
                    price_rule_basis_id,
                    discount_value,
                    price_per_unit_after_discount,
                    vat_percentage,
                    price_rule_category_id,
                    tiers)
    end
  end
end
