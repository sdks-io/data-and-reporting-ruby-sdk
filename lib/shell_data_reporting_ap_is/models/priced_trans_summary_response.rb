# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PricedTransSummaryResponse Model.
  class PricedTransSummaryResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[PricedTransSummaryResponseTransactionsSummaryItems]]
    attr_accessor :transactions_summary

    # TODO: Write general description for this method
    # @return [ErrorStatus]
    attr_accessor :error

    # API Request Id
    # @return [String]
    attr_accessor :request_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['transactions_summary'] = 'TransactionsSummary'
      @_hash['error'] = 'Error'
      @_hash['request_id'] = 'RequestId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        transactions_summary
        error
        request_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(transactions_summary = SKIP,
                   error = SKIP,
                   request_id = SKIP)
      @transactions_summary = transactions_summary unless transactions_summary == SKIP
      @error = error unless error == SKIP
      @request_id = request_id unless request_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      transactions_summary = nil
      unless hash['TransactionsSummary'].nil?
        transactions_summary = []
        hash['TransactionsSummary'].each do |structure|
          transactions_summary << (PricedTransSummaryResponseTransactionsSummaryItems.from_hash(structure) if structure)
        end
      end

      transactions_summary = SKIP unless hash.key?('TransactionsSummary')
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP

      # Create object from extracted values.
      PricedTransSummaryResponse.new(transactions_summary,
                                     error,
                                     request_id)
    end
  end
end
