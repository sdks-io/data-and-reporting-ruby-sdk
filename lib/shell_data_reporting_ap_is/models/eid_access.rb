# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # EIDAccess Model.
  class EIDAccess < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting company id.
    # @return [String]
    attr_accessor :col_co_id

    # Collecting company Code
    # @return [Integer]
    attr_accessor :col_co_code

    # Identifier for the EID account group configured for the user.
    # @return [String]
    attr_accessor :account_group_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['account_group_id'] = 'AccountGroupId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_id
        col_co_code
        account_group_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        col_co_code
        account_group_id
      ]
    end

    def initialize(col_co_id = SKIP,
                   col_co_code = SKIP,
                   account_group_id = SKIP)
      @col_co_id = col_co_id unless col_co_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @account_group_id = account_group_id unless account_group_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      account_group_id =
        hash.key?('AccountGroupId') ? hash['AccountGroupId'] : SKIP

      # Create object from extracted values.
      EIDAccess.new(col_co_id,
                    col_co_code,
                    account_group_id)
    end
  end
end
