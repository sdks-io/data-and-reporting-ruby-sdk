# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PriceTransactionRequest Model.
  class PriceTransactionRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting Company Id of the selected payer. 
    # Optional if ColCoCode is passed else Mandatory.
    # Example:
    # 1 for Philippines
    # 5 for UK
    # @return [Integer]
    attr_accessor :col_co_id

    # Collecting Company Code  of the selected payer. 
    # Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia,
    # Ukraine etc. It is optional for other countries if ColCoID is provided.
    # Example:
    # 86 for Philippines
    # 5 for UK
    # @return [Integer]
    attr_accessor :col_co_code

    # Payer Id  of the selected payer.
    # Optional if PayerNumber is passed else Mandatory
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number (Ex: GB000000123) of the selected payer.
    # Optional if PayerId is passed else Mandatory
    # Example: GB000000123
    # @return [String]
    attr_accessor :payer_number

    # Payer Number (Ex: GB000000123) of the selected payer.
    # Optional if PayerId is passed else Mandatory
    # Example: GB000000123
    # @return [Accounts]
    attr_accessor :accounts

    # Card Id (i.e. Unique Card Id in GFN)
    # Optional
    # When both Card Id and Card PAN are not present on request, the response
    # will have transactions of all cards under the selected payer or account
    # @return [Integer]
    attr_accessor :card_id

    # Full Card PAN
    # Optional
    # When both Card Id and Card PAN are not present on request, the response
    # will have transactions of all cards under the selected payer or account.
    # @return [String]
    attr_accessor :card_pan

    # Driver Name (of Card record)
    # Optional
    # Minimum of 4 characters should be provided else not considered
    # Transactions of the card having the entered value at any part of the
    # Driver Name will be returned
    # @return [String]
    attr_accessor :driver_name

    # Vehicle Registration (of Card record)
    # Optional
    # Minimum of 4 characters should be provided else not considered
    # Transactions of the card having the entered value at any part of the VRN
    # will be returned
    # @return [String]
    attr_accessor :vehicle_registration_number

    # Invoice status of the transactions.
    # Mandatory
    # Possible options:
    # I - Invoiced
    # U – Un-Invoiced
    # A – All
    # @return [String]
    attr_accessor :invoice_status

    # Product Id
    # Example: 
    # 21	Unleaded - High octane
    # 22	Unleaded - Medium octane
    # 23	Unleaded - Low octane
    # 24	Unleaded Environmental
    # @return [Integer]
    attr_accessor :product_id

    # Product Code – Global as per GFN configuration
    # Optional
    # Max Length: 8
    # Example: 
    # 10	TMF Charges
    # 11	Tunnel/Bridges
    # 12	Motorway toll
    # 13	Ferries
    # @return [String]
    attr_accessor :product_code

    # ISO Country Code (ex: UK, FR)
    # Note: If IncludeFees is true then this filter will be ignored
    # @return [String]
    attr_accessor :purchased_in_country

    # Card Group Id in GFN
    # @return [Integer]
    attr_accessor :card_group_id

    # Allowed Sorting Options:
    # 1.	TransactionDateAscending
    # 2.	TransactionDateDescending
    # 3.	GrossAmountDescending
    # 4.	GrossAmountAscending
    # 5.	DriverNameAscending (If Driver Name is null then VRN value will be
    # considered)
    # 6.	DriverNameDescending (If Driver Name is null then VRN value will be
    # considered)
    # 7.	VRNAscending (If VRN is null then Driver Name value will be considered)
    # 8.	VRNDescending (If VRN is null then Driver Name value will be
    # considered)
    # 9.	NetAmountAscending
    # 10.	NetAmountDescensding
    # Example value to be passed: “1,3”
    # @return [String]
    attr_accessor :sort_order

    # Transactions from Date/Time. 
    # Optional – When provided, it should be with in last 24 months. 
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :from_date

    # Transactions to Date/Time.
    # Optional- Refer introduction section of this operation for the priority
    # and sequence of different date and invoice number filters that are
    # conditionally applied.
    # Note:
    # 1) When the value is blank and FromDate is provided on the input, all
    # transactions took place 210(Configurable) days after the given FromDate is
    # returned. 
    # 2) Difference between FromDate and ToDate cannot be more than 210
    # (Configurable) days.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :to_date

    # Transactions Period. 
    # Possible values are:
    # 1.	Last 7 Days
    # 2.	Last 30 Days
    # 3.	Last 90 Days
    # Optional - Refer introduction section of this operation for the priority
    # and sequence of different date and invoice number filters that are
    # conditionally applied.
    # @return [Integer]
    attr_accessor :period

    # Site Code as configured in GFN
    # Example:
    # 050001 -	CHARNOCK RICHARD NTHBOUND MWSA 0755
    # 050002 -	CHARNOCK RICHARD STHBOUND MWSA 0755
    # 050005 -	HARTSHEAD MOOR EASTBOUND MWSA 0761.
    # 050006 -	HARTSHEAD MOOR WESTBOUND MWSA.
    # Note: If IncludeFees is true then this filter will be ignored
    # @return [String]
    attr_accessor :site_code

    # Site Group Id in GFN
    # Optional
    # Example: 202
    # Note: If IncludeFees is true then this filter will be ignored
    # @return [Integer]
    attr_accessor :site_group_id

    # Transaction Posting Date/time in the Cards Platform - From Date/time.
    # Note:
    # 1) When the value of both PostingDateFrom and PostingDateTo are present in
    # the request then the value of PostingDateFrom must be less than
    # PostingDateTo.
    # 2) If IncludeFees is true then this filter will be ignored
    # Format: yyyyMMdd HH:mm:ss
    # @return [String]
    attr_accessor :posting_date_from

    # Transaction Posting Date/time in the Cards Platform – To Date/time.
    # Note: 
    # 1) If IncludeFees is true then this filter will be ignored.
    # 2) When the value of both PostingDateFrom and PostingDateTo are present in
    # the request then the value of PostingDateFrom must be less than
    # PostingDateTo.
    # Format: yyyyMMdd HH:mm:ss
    # @return [String]
    attr_accessor :posting_date_to

    # Unique SalesItemId (Either Billed on Unbilled)
    # Optional
    # Note: If IncludeFees is true then this filter will be ignored
    # @return [String]
    attr_accessor :sales_item_id

    # Unique Transaction Id
    # Optional
    # Note: If IncludeFees is true then this filter will be ignored
    # @return [String]
    attr_accessor :transaction_id

    # Invoice Date.
    # Optional
    # Note: 
    # 1) If value is not blank then the system will ignore the InvoiceStatus
    # parameter and it will return all the billed transactions for the given
    # invoice date.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :invoice_date

    # Invoice Number.
    # Optional
    # Note: 
    # 1) If value is not blank then the system will ignore the InvoiceStatus
    # parameter and it will return all the billed transactions for the given
    # invoice date.
    # @return [String]
    attr_accessor :invoice_number

    # True/False
    # Optional
    # Default value: True. 
    # When passed as ‘True’ the transactions records with report date not equal
    # to 9999-12-30 will be returned.
    # When passed as ‘False’ the above condition will not be checked.
    # @return [TrueClass | FalseClass]
    attr_accessor :valid_invoice_date_only

    # Start date for transaction search by invoice date.
    # Optional
    # Note: 
    # 1) Value should be with in last 24 months (if provided).
    # 2) Maximum of 90(Configurable) day’s duration allowed per search.
    # 3) When provided, InvoiceFromDate has to be less than or equal to
    # InvoiceToDate.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :invoice_from_date

    # End date for transaction search by invoice date.
    # Optional
    # Note: 
    # 1) When InvoiceFromDate is provided and InvoiceToDate is null, then
    # InvoiceToDate will be calculated as (InvoiceFromDate + 90 days) or
    # (CurrentDate) whichever is lesser.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :invoice_to_date

    # True/False
    # Optional
    # Default value: False. 
    # When passed as ‘True’ Only returned records with Fuel transactions.
    # When passed as ‘False’ the above condition will not be checked.
    # @return [TrueClass | FalseClass]
    attr_accessor :fuel_only

    # True/False
    # Optional
    # Default value: False
    # When passed as ‘True’ then  ignore few filters, all sales items along with
    # fees included on the same response
    # @return [TrueClass | FalseClass]
    attr_accessor :include_fees

    # True/False
    # Optional
    # Default value – False.
    # When set to True, the property names in the output will be replaced by
    # Field IDs.
    # This will reduce the output payload size significantly for large data sets
    # and help faster transmission of data over networks.
    # @return [TrueClass | FalseClass]
    attr_accessor :use_field_id

    # Current Page Number
    # @return [Integer]
    attr_accessor :current_page

    # Page Size – Number of records to show on a page
    # Optional
    # Default value 50
    # @return [Integer]
    attr_accessor :page_size

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['accounts'] = 'Accounts'
      @_hash['card_id'] = 'CardId'
      @_hash['card_pan'] = 'CardPAN'
      @_hash['driver_name'] = 'DriverName'
      @_hash['vehicle_registration_number'] = 'VehicleRegistrationNumber'
      @_hash['invoice_status'] = 'InvoiceStatus'
      @_hash['product_id'] = 'ProductId'
      @_hash['product_code'] = 'ProductCode'
      @_hash['purchased_in_country'] = 'PurchasedInCountry'
      @_hash['card_group_id'] = 'CardGroupId'
      @_hash['sort_order'] = 'SortOrder'
      @_hash['from_date'] = 'FromDate'
      @_hash['to_date'] = 'ToDate'
      @_hash['period'] = 'Period'
      @_hash['site_code'] = 'SiteCode'
      @_hash['site_group_id'] = 'SiteGroupId'
      @_hash['posting_date_from'] = 'PostingDateFrom'
      @_hash['posting_date_to'] = 'PostingDateTo'
      @_hash['sales_item_id'] = 'SalesItemId'
      @_hash['transaction_id'] = 'TransactionId'
      @_hash['invoice_date'] = 'InvoiceDate'
      @_hash['invoice_number'] = 'InvoiceNumber'
      @_hash['valid_invoice_date_only'] = 'ValidInvoiceDateOnly'
      @_hash['invoice_from_date'] = 'InvoiceFromDate'
      @_hash['invoice_to_date'] = 'InvoiceToDate'
      @_hash['fuel_only'] = 'FuelOnly'
      @_hash['include_fees'] = 'IncludeFees'
      @_hash['use_field_id'] = 'UseFieldId'
      @_hash['current_page'] = 'CurrentPage'
      @_hash['page_size'] = 'PageSize'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_id
        col_co_code
        payer_id
        payer_number
        accounts
        card_id
        card_pan
        driver_name
        vehicle_registration_number
        invoice_status
        product_id
        product_code
        purchased_in_country
        card_group_id
        sort_order
        from_date
        to_date
        period
        site_code
        site_group_id
        posting_date_from
        posting_date_to
        sales_item_id
        transaction_id
        invoice_date
        invoice_number
        valid_invoice_date_only
        invoice_from_date
        invoice_to_date
        fuel_only
        include_fees
        use_field_id
        current_page
        page_size
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        col_co_code
        payer_id
        payer_number
        card_id
        card_pan
        driver_name
        vehicle_registration_number
        invoice_status
        product_id
        product_code
        purchased_in_country
        card_group_id
        sort_order
        from_date
        to_date
        period
        site_code
        site_group_id
        posting_date_from
        posting_date_to
        sales_item_id
        transaction_id
        invoice_date
        invoice_number
        valid_invoice_date_only
        invoice_from_date
        invoice_to_date
        fuel_only
        include_fees
        use_field_id
        current_page
      ]
    end

    def initialize(col_co_id = SKIP,
                   col_co_code = SKIP,
                   payer_id = SKIP,
                   payer_number = SKIP,
                   accounts = SKIP,
                   card_id = SKIP,
                   card_pan = SKIP,
                   driver_name = SKIP,
                   vehicle_registration_number = SKIP,
                   invoice_status = SKIP,
                   product_id = SKIP,
                   product_code = SKIP,
                   purchased_in_country = SKIP,
                   card_group_id = SKIP,
                   sort_order = SKIP,
                   from_date = SKIP,
                   to_date = SKIP,
                   period = SKIP,
                   site_code = SKIP,
                   site_group_id = SKIP,
                   posting_date_from = SKIP,
                   posting_date_to = SKIP,
                   sales_item_id = SKIP,
                   transaction_id = SKIP,
                   invoice_date = SKIP,
                   invoice_number = SKIP,
                   valid_invoice_date_only = SKIP,
                   invoice_from_date = SKIP,
                   invoice_to_date = SKIP,
                   fuel_only = SKIP,
                   include_fees = SKIP,
                   use_field_id = SKIP,
                   current_page = SKIP,
                   page_size = SKIP)
      @col_co_id = col_co_id unless col_co_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @accounts = accounts unless accounts == SKIP
      @card_id = card_id unless card_id == SKIP
      @card_pan = card_pan unless card_pan == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      unless vehicle_registration_number == SKIP
        @vehicle_registration_number =
          vehicle_registration_number
      end
      @invoice_status = invoice_status unless invoice_status == SKIP
      @product_id = product_id unless product_id == SKIP
      @product_code = product_code unless product_code == SKIP
      @purchased_in_country = purchased_in_country unless purchased_in_country == SKIP
      @card_group_id = card_group_id unless card_group_id == SKIP
      @sort_order = sort_order unless sort_order == SKIP
      @from_date = from_date unless from_date == SKIP
      @to_date = to_date unless to_date == SKIP
      @period = period unless period == SKIP
      @site_code = site_code unless site_code == SKIP
      @site_group_id = site_group_id unless site_group_id == SKIP
      @posting_date_from = posting_date_from unless posting_date_from == SKIP
      @posting_date_to = posting_date_to unless posting_date_to == SKIP
      @sales_item_id = sales_item_id unless sales_item_id == SKIP
      @transaction_id = transaction_id unless transaction_id == SKIP
      @invoice_date = invoice_date unless invoice_date == SKIP
      @invoice_number = invoice_number unless invoice_number == SKIP
      @valid_invoice_date_only = valid_invoice_date_only unless valid_invoice_date_only == SKIP
      @invoice_from_date = invoice_from_date unless invoice_from_date == SKIP
      @invoice_to_date = invoice_to_date unless invoice_to_date == SKIP
      @fuel_only = fuel_only unless fuel_only == SKIP
      @include_fees = include_fees unless include_fees == SKIP
      @use_field_id = use_field_id unless use_field_id == SKIP
      @current_page = current_page unless current_page == SKIP
      @page_size = page_size unless page_size == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      accounts = Accounts.from_hash(hash['Accounts']) if hash['Accounts']
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      card_pan = hash.key?('CardPAN') ? hash['CardPAN'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      vehicle_registration_number =
        hash.key?('VehicleRegistrationNumber') ? hash['VehicleRegistrationNumber'] : SKIP
      invoice_status = hash.key?('InvoiceStatus') ? hash['InvoiceStatus'] : SKIP
      product_id = hash.key?('ProductId') ? hash['ProductId'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      purchased_in_country =
        hash.key?('PurchasedInCountry') ? hash['PurchasedInCountry'] : SKIP
      card_group_id = hash.key?('CardGroupId') ? hash['CardGroupId'] : SKIP
      sort_order = hash.key?('SortOrder') ? hash['SortOrder'] : SKIP
      from_date = hash.key?('FromDate') ? hash['FromDate'] : SKIP
      to_date = hash.key?('ToDate') ? hash['ToDate'] : SKIP
      period = hash.key?('Period') ? hash['Period'] : SKIP
      site_code = hash.key?('SiteCode') ? hash['SiteCode'] : SKIP
      site_group_id = hash.key?('SiteGroupId') ? hash['SiteGroupId'] : SKIP
      posting_date_from =
        hash.key?('PostingDateFrom') ? hash['PostingDateFrom'] : SKIP
      posting_date_to =
        hash.key?('PostingDateTo') ? hash['PostingDateTo'] : SKIP
      sales_item_id = hash.key?('SalesItemId') ? hash['SalesItemId'] : SKIP
      transaction_id = hash.key?('TransactionId') ? hash['TransactionId'] : SKIP
      invoice_date = hash.key?('InvoiceDate') ? hash['InvoiceDate'] : SKIP
      invoice_number = hash.key?('InvoiceNumber') ? hash['InvoiceNumber'] : SKIP
      valid_invoice_date_only =
        hash.key?('ValidInvoiceDateOnly') ? hash['ValidInvoiceDateOnly'] : SKIP
      invoice_from_date =
        hash.key?('InvoiceFromDate') ? hash['InvoiceFromDate'] : SKIP
      invoice_to_date =
        hash.key?('InvoiceToDate') ? hash['InvoiceToDate'] : SKIP
      fuel_only = hash.key?('FuelOnly') ? hash['FuelOnly'] : SKIP
      include_fees = hash.key?('IncludeFees') ? hash['IncludeFees'] : SKIP
      use_field_id = hash.key?('UseFieldId') ? hash['UseFieldId'] : SKIP
      current_page = hash.key?('CurrentPage') ? hash['CurrentPage'] : SKIP
      page_size = hash.key?('PageSize') ? hash['PageSize'] : SKIP

      # Create object from extracted values.
      PriceTransactionRequest.new(col_co_id,
                                  col_co_code,
                                  payer_id,
                                  payer_number,
                                  accounts,
                                  card_id,
                                  card_pan,
                                  driver_name,
                                  vehicle_registration_number,
                                  invoice_status,
                                  product_id,
                                  product_code,
                                  purchased_in_country,
                                  card_group_id,
                                  sort_order,
                                  from_date,
                                  to_date,
                                  period,
                                  site_code,
                                  site_group_id,
                                  posting_date_from,
                                  posting_date_to,
                                  sales_item_id,
                                  transaction_id,
                                  invoice_date,
                                  invoice_number,
                                  valid_invoice_date_only,
                                  invoice_from_date,
                                  invoice_to_date,
                                  fuel_only,
                                  include_fees,
                                  use_field_id,
                                  current_page,
                                  page_size)
    end
  end
end
