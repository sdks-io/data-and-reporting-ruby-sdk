# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PricingCurrentVolume Model.
  class PricingCurrentVolume < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Bonus or association bonus configuration identifier  that is associated to
    # the payer.
    # @return [Integer]
    attr_accessor :fee_rule_id

    # Bonus or association bonus configuration description that is associated to
    # the payer
    # @return [String]
    attr_accessor :fee_rule_description

    # Pricing current period Pricing Price Rule ID that is associated to the
    # payer.
    # @return [Integer]
    attr_accessor :price_rule_id

    # Pricing current period pricing rule description that is associated to the
    # payer
    # @return [String]
    attr_accessor :price_rule_description

    # Total volume consumption for the current period.
    # @return [Float]
    attr_accessor :total_volume

    # Next Fee Rule Creation Date for that is associated to the payer.
    # Format: YYYYMMDD
    # @return [String]
    attr_accessor :next_fee_creation_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['fee_rule_id'] = 'FeeRuleId'
      @_hash['fee_rule_description'] = 'FeeRuleDescription'
      @_hash['price_rule_id'] = 'PriceRuleID'
      @_hash['price_rule_description'] = 'PriceRuleDescription'
      @_hash['total_volume'] = 'TotalVolume'
      @_hash['next_fee_creation_date'] = 'NextFeeCreationDate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        fee_rule_id
        fee_rule_description
        price_rule_id
        price_rule_description
        total_volume
        next_fee_creation_date
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        fee_rule_id
        fee_rule_description
        price_rule_id
        price_rule_description
        total_volume
        next_fee_creation_date
      ]
    end

    def initialize(fee_rule_id = SKIP,
                   fee_rule_description = SKIP,
                   price_rule_id = SKIP,
                   price_rule_description = SKIP,
                   total_volume = SKIP,
                   next_fee_creation_date = SKIP)
      @fee_rule_id = fee_rule_id unless fee_rule_id == SKIP
      @fee_rule_description = fee_rule_description unless fee_rule_description == SKIP
      @price_rule_id = price_rule_id unless price_rule_id == SKIP
      @price_rule_description = price_rule_description unless price_rule_description == SKIP
      @total_volume = total_volume unless total_volume == SKIP
      @next_fee_creation_date = next_fee_creation_date unless next_fee_creation_date == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      fee_rule_id = hash.key?('FeeRuleId') ? hash['FeeRuleId'] : SKIP
      fee_rule_description =
        hash.key?('FeeRuleDescription') ? hash['FeeRuleDescription'] : SKIP
      price_rule_id = hash.key?('PriceRuleID') ? hash['PriceRuleID'] : SKIP
      price_rule_description =
        hash.key?('PriceRuleDescription') ? hash['PriceRuleDescription'] : SKIP
      total_volume = hash.key?('TotalVolume') ? hash['TotalVolume'] : SKIP
      next_fee_creation_date =
        hash.key?('NextFeeCreationDate') ? hash['NextFeeCreationDate'] : SKIP

      # Create object from extracted values.
      PricingCurrentVolume.new(fee_rule_id,
                               fee_rule_description,
                               price_rule_id,
                               price_rule_description,
                               total_volume,
                               next_fee_creation_date)
    end
  end
end
