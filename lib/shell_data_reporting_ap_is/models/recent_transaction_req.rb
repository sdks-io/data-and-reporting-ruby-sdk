# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # RecentTransactionReq Model.
  class RecentTransactionReq < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Three character Collecting Company Code (Shell Code) of the selected payer
    # @return [Integer]
    attr_accessor :col_co_code

    # Unique Identifier for the customer at payment point.
    # @return [String]
    attr_accessor :payer_number

    # Customer account number.
    # @return [String]
    attr_accessor :account_number

    # Global product code
    # @return [String]
    attr_accessor :product_code

    # Delco country
    # @return [String]
    attr_accessor :purchased_in_country

    # Card identifier number masked
    # @return [String]
    attr_accessor :card_pan

    # Start date and time of transactions
    # @return [String]
    attr_accessor :from_date_time

    # End date and time of transactions. Mandatory if FromDateTime is provided.
    # @return [String]
    attr_accessor :to_date_time

    # Status of transaction. DO NOT pass the value if includeDeclines is passed
    # @return [String]
    attr_accessor :transaction_status

    # When passed as ‘true’ Only returned records with Fuel transactions.(All
    # Fuels).When passed as ‘false’ the above condition will not be checked.
    # (Both All Fuels and Non-Fuel)
    # @return [String]
    attr_accessor :fuel_only

    # Product group name
    # @return [String]
    attr_accessor :product_group_name

    # Vehicle registration number embossed on the card
    # @return [String]
    attr_accessor :vehicle_registration_number

    # Flag to enable to get declined records
    # @return [TrueClass | FalseClass]
    attr_accessor :include_declines

    # Card issuer name
    # @return [String]
    attr_accessor :card_issuer_name

    # Column list to be part of response, it can be 'All' to return all possible
    # column. E.g. 'All'
    # To get specific columns pass multiple columns name separated by comma
    # along with 'PayerNumber'. E.g. "PayerNumber,ProductCode"
    # @return [String]
    attr_accessor :column_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['product_code'] = 'ProductCode'
      @_hash['purchased_in_country'] = 'PurchasedInCountry'
      @_hash['card_pan'] = 'CardPAN'
      @_hash['from_date_time'] = 'FromDateTime'
      @_hash['to_date_time'] = 'ToDateTime'
      @_hash['transaction_status'] = 'TransactionStatus'
      @_hash['fuel_only'] = 'FuelOnly'
      @_hash['product_group_name'] = 'ProductGroupName'
      @_hash['vehicle_registration_number'] = 'VehicleRegistrationNumber'
      @_hash['include_declines'] = 'IncludeDeclines'
      @_hash['card_issuer_name'] = 'CardIssuerName'
      @_hash['column_list'] = 'ColumnList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_number
        product_code
        purchased_in_country
        card_pan
        from_date_time
        to_date_time
        transaction_status
        fuel_only
        product_group_name
        vehicle_registration_number
        include_declines
        card_issuer_name
        column_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_code
        payer_number
        account_number
        product_code
        purchased_in_country
        card_pan
        from_date_time
        to_date_time
        transaction_status
        fuel_only
        product_group_name
        vehicle_registration_number
        include_declines
        card_issuer_name
      ]
    end

    def initialize(col_co_code = nil, payer_number = nil, account_number = SKIP,
                   product_code = SKIP, purchased_in_country = SKIP,
                   card_pan = SKIP, from_date_time = SKIP, to_date_time = SKIP,
                   transaction_status = SKIP, fuel_only = SKIP,
                   product_group_name = SKIP,
                   vehicle_registration_number = SKIP, include_declines = SKIP,
                   card_issuer_name = SKIP, column_list = SKIP)
      @col_co_code = col_co_code
      @payer_number = payer_number
      @account_number = account_number unless account_number == SKIP
      @product_code = product_code unless product_code == SKIP
      @purchased_in_country = purchased_in_country unless purchased_in_country == SKIP
      @card_pan = card_pan unless card_pan == SKIP
      @from_date_time = from_date_time unless from_date_time == SKIP
      @to_date_time = to_date_time unless to_date_time == SKIP
      @transaction_status = transaction_status unless transaction_status == SKIP
      @fuel_only = fuel_only unless fuel_only == SKIP
      @product_group_name = product_group_name unless product_group_name == SKIP
      unless vehicle_registration_number == SKIP
        @vehicle_registration_number =
          vehicle_registration_number
      end
      @include_declines = include_declines unless include_declines == SKIP
      @card_issuer_name = card_issuer_name unless card_issuer_name == SKIP
      @column_list = column_list unless column_list == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : nil
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : nil
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      purchased_in_country =
        hash.key?('PurchasedInCountry') ? hash['PurchasedInCountry'] : SKIP
      card_pan = hash.key?('CardPAN') ? hash['CardPAN'] : SKIP
      from_date_time = hash.key?('FromDateTime') ? hash['FromDateTime'] : SKIP
      to_date_time = hash.key?('ToDateTime') ? hash['ToDateTime'] : SKIP
      transaction_status =
        hash.key?('TransactionStatus') ? hash['TransactionStatus'] : SKIP
      fuel_only = hash.key?('FuelOnly') ? hash['FuelOnly'] : SKIP
      product_group_name =
        hash.key?('ProductGroupName') ? hash['ProductGroupName'] : SKIP
      vehicle_registration_number =
        hash.key?('VehicleRegistrationNumber') ? hash['VehicleRegistrationNumber'] : SKIP
      include_declines =
        hash.key?('IncludeDeclines') ? hash['IncludeDeclines'] : SKIP
      card_issuer_name =
        hash.key?('CardIssuerName') ? hash['CardIssuerName'] : SKIP
      column_list = hash.key?('ColumnList') ? hash['ColumnList'] : SKIP

      # Create object from extracted values.
      RecentTransactionReq.new(col_co_code,
                               payer_number,
                               account_number,
                               product_code,
                               purchased_in_country,
                               card_pan,
                               from_date_time,
                               to_date_time,
                               transaction_status,
                               fuel_only,
                               product_group_name,
                               vehicle_registration_number,
                               include_declines,
                               card_issuer_name,
                               column_list)
    end
  end
end
