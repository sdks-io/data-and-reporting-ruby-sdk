# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FeeSummaryResponse Model.
  class FeeSummaryResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[FeeItemSummaryAllOf0]]
    attr_accessor :fee_items_summary

    # A unique request id in GUID format. The value is written to the Shell API
    # Platform audit log for end to end traceability of a request. If a value is
    # not provided by an API client, then a GUID is automatically populated by
    # the Shell API Platform and returned in the API response.
    # @return [String]
    attr_accessor :request_id

    # A unique request id in GUID format. The value is written to the Shell API
    # Platform audit log for end to end traceability of a request. If a value is
    # not provided by an API client, then a GUID is automatically populated by
    # the Shell API Platform and returned in the API response.
    # @return [ErrorStatus]
    attr_accessor :error

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['fee_items_summary'] = 'FeeItemsSummary'
      @_hash['request_id'] = 'RequestId'
      @_hash['error'] = 'Error'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        fee_items_summary
        request_id
        error
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(fee_items_summary = SKIP, request_id = SKIP, error = SKIP)
      @fee_items_summary = fee_items_summary unless fee_items_summary == SKIP
      @request_id = request_id unless request_id == SKIP
      @error = error unless error == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      fee_items_summary = nil
      unless hash['FeeItemsSummary'].nil?
        fee_items_summary = []
        hash['FeeItemsSummary'].each do |structure|
          fee_items_summary << (FeeItemSummaryAllOf0.from_hash(structure) if structure)
        end
      end

      fee_items_summary = SKIP unless hash.key?('FeeItemsSummary')
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']

      # Create object from extracted values.
      FeeSummaryResponse.new(fee_items_summary,
                             request_id,
                             error)
    end
  end
end
