# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PricedTransactionResponseTransactionsItems Model.
  class PricedTransactionResponseTransactionsItems < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TransactionType is the type of transaction.
    # Example: SalesItem /FeeItem
    # @return [String]
    attr_accessor :type

    # Unique Card Id
    # @return [Integer]
    attr_accessor :card_id

    # Card PAN
    # @return [String]
    attr_accessor :card_pan

    # Card Expiry Date
    # @return [String]
    attr_accessor :card_expiry

    # Local Transaction Date  of where the transaction took place
    # @return [String]
    attr_accessor :transaction_date

    # Local Transaction Time of where the transaction took place
    # @return [String]
    attr_accessor :transaction_time

    # UTC Offset extracted from Sales Date time. 
    # Note: This may not be accurate for all TPN transactions
    # Format: +/-HH:mm:ss (24 hours format)
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :utc_offset

    # Fleet Id Input as entered by the drivers at the time of transaction
    # Example: XYZ1234
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :fleet_id_input

    # Odometer Input as entered by the drivers at the time of transaction
    # Example: 12345
    # Note: - The value could be null/blank for fees item.
    # @return [Integer]
    attr_accessor :odometer_input

    # Driver Name embossed on the card
    # Example:  ANDREW GILBERRY
    # @return [String]
    attr_accessor :driver_name

    # Vehicle Registration Number embossed on the card
    # Example: MV65YLH
    # @return [String]
    attr_accessor :vehicle_registration

    # ISO currency code 
    # Example: GBP
    # @return [String]
    attr_accessor :invoice_currency_code

    # Currency symbol of the Invoice Currency Code 
    # Example: £, $
    # @return [String]
    attr_accessor :invoice_currency_symbol

    # ISO currency code
    # @return [String]
    attr_accessor :transaction_currency_code

    # Currency symbol of the Transaction Currency Code
    # Example: £, $
    # @return [String]
    attr_accessor :transaction_currency_symbol

    # Net Amount
    # @return [Float]
    attr_accessor :transaction_net_amount

    # Tax Amount
    # @return [Float]
    attr_accessor :transaction_tax

    # Gross Amount
    # @return [Float]
    attr_accessor :transaction_gross_amount

    # Invoiced Net Amount 
    # Note: For a fee item, this parameter will be populated with fee
    # InvoiceNetAmount.
    # @return [Float]
    attr_accessor :invoice_net_amount

    # Invoiced Tax Amount
    # @return [Float]
    attr_accessor :invoice_tax

    # Invoice Gross Amount
    # Note: For a fee item, this parameter will be populated with fee
    # InvoiceGrossAmount.
    # @return [Float]
    attr_accessor :invoice_gross_amount

    # Country of Purchase
    # @return [String]
    attr_accessor :purchased_in_country

    # Account Id 
    # Example: 29484
    # @return [Integer]
    attr_accessor :account_id

    # Account Number
    # @return [String]
    attr_accessor :account_number

    # Account Name
    # @return [String]
    attr_accessor :account_name

    # Account Short Name
    # @return [String]
    attr_accessor :account_short_name

    # Quantity/Volume
    # @return [Integer]
    attr_accessor :quantity

    # True if the product on transaction is listed as a fuel product else return
    # false
    # @return [TrueClass | FalseClass]
    attr_accessor :fuel_product

    # Product Unit Price in transaction currency
    # @return [Float]
    attr_accessor :unit_price_in_transaction_currency

    # Product Unit Price in invoice currency
    # @return [Float]
    attr_accessor :unit_price_in_invoice_currency

    # Unit Discount in transaction currency
    # @return [Float]
    attr_accessor :unit_discount_transaction_currency

    # Unit Discount in invoice currency
    # Note: - The value could be null/blank for fees item.
    # @return [Float]
    attr_accessor :unit_discount_invoice_currency

    # True when the transaction is already invoice, else return False
    # @return [TrueClass | FalseClass]
    attr_accessor :is_invoiced

    # Invoice Number if invoiced
    # S04500493
    # @return [String]
    attr_accessor :invoice_number

    # Invoice Date 
    # Format: yyyyMMdd HH:mm:ss
    # @return [String]
    attr_accessor :invoice_date

    # Site Code
    # Example:
    # 050001 -    CHARNOCK RICHARD NTHBOUND MWSA 0755
    # 050002 -    CHARNOCK RICHARD STHBOUND MWSA 0755
    # @return [String]
    attr_accessor :site_code

    # Site Name
    # Example:
    # 050001 -    CHARNOCK RICHARD NTHBOUND MWSA 0755
    # 050002 -    CHARNOCK RICHARD STHBOUND MWSA 0755
    # @return [String]
    attr_accessor :site_name

    # Site Country
    # Example: France, Germany
    # Note: - The value could be null/blank for fees item.
    # Geography Location entity for Site Location
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :site_country

    # Geography Location entity for Site Location
    # Note: - The value could be null/blank for fees item
    # @return [Array[Object]]
    attr_accessor :location

    # Card Group Name
    # @return [String]
    attr_accessor :card_group_name

    # Receipt Number
    # @return [String]
    attr_accessor :receipt_number

    # Product Code
    # 10    TMF Charges
    # 11    Tunnel/Bridges
    # 12    Motorway toll
    # 13    Ferries
    # @return [String]
    attr_accessor :product_code

    # Product Name
    # Unleaded - High octane
    # Unleaded - Medium octane
    # Unleaded - Low octane
    # Unleaded Environmental
    # @return [String]
    attr_accessor :product_name

    # Product Group Id
    # Example: 
    # 1    Parent Product Group
    # 2    All Fuels
    # 3    Motor gasoline
    # 4    2 stroke
    # 5    Autogas
    # 6    CNG
    # @return [Integer]
    attr_accessor :product_group_id

    # Product Group Name
    # Example: 
    # 1    Parent Product Group
    # 2    All Fuels
    # 3    Motor gasoline
    # 4    2 stroke
    # 5    Autogas
    # 6    CNG
    # 7    Automotive Gas Oil
    # @return [String]
    attr_accessor :product_group_name

    # DelCo Exchange Rate (Site exchange rate)
    # @return [Float]
    attr_accessor :del_co_exchange_rate

    # ColCo Exchange Rate (Customer exchange rate)
    # @return [Float]
    attr_accessor :col_co_exchange_rate

    # True when transaction occurred at a Shell site else return False
    # Note: - The value could be null/blank for fees item.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_shell_site

    # Network as configured in GFN (Shell PH, ESSO, etc.,)
    # 100013    STEINDORFER
    # 100015    S.A. BELGIAN SHELL N.V.
    # 100016    ESSO BE
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :network

    # Site Group Id
    # Example: 202
    # Note: - The value could be null/blank for fees item.
    # @return [Integer]
    attr_accessor :site_group_id

    # Site Group Name
    # Example: CZ 9100 ECONOMY NETWORK
    # @return [String]
    attr_accessor :site_group_name

    # Transaction Posting Date
    # Format: yyyyMMdd HHmmss
    # @return [String]
    attr_accessor :posting_date

    # First digits of the Card PAN 
    # 7002 = Fleet  
    # 7077 = CRT
    # @return [String]
    attr_accessor :issuer_code

    # ISO code of the country where the transaction took place
    # Example: “NL”
    # @return [String]
    attr_accessor :purchased_in_country_code

    # ISO code of the  Customer Country
    # @return [String]
    attr_accessor :customer_country_code

    # Name of the Customer Country
    # @return [String]
    attr_accessor :customer_country

    # Release code, 7th Digit of the Card PAN
    # @return [String]
    attr_accessor :release_code

    # Card group ID
    # @return [String]
    attr_accessor :card_group_id

    # 3 digits, Card sequence number and Check digit
    # @return [String]
    attr_accessor :card_sequence_number

    # Check digit, Last number of the card pan
    # @return [String]
    attr_accessor :check_digit

    # FleetId/CRN description in Card Platform configured at the account level
    # @return [String]
    attr_accessor :fleet_id_description

    # VAT Percentage
    # 0.20 for 20%
    # @return [Float]
    attr_accessor :vat_rate

    # VAT Category Id-Description
    # 1-Zero Rated
    # 2-A1 PH-O 12% Sales Domestic
    # 3-VAT exempt
    # @return [String]
    attr_accessor :vat_category

    # VAT Country
    # @return [String]
    attr_accessor :vat_country

    # Effective Discount (excluding VAT, in transaction currency) 4 digits
    # Example: 0.0000
    # Note: - The value could be null/blank for fees item.
    # @return [Float]
    attr_accessor :effective_discount_in_trx_currency

    # Transaction Type
    # Example: Purchase when Card is Present else Blank
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :transaction_type

    # Pin Indicator (Indicates whether PIN used or not used at the time of
    # transaction)
    # Example: “PIN Used'” or “No PIN” or “Unknown” 
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :pin_indicator

    # Is VAT Applicable for this transaction
    # @return [String]
    attr_accessor :vat_applicable

    # Net Invoice Indicator, Will the customer receive an invoice without VAT?
    # Example: “Y” or “N”
    # @return [String]
    attr_accessor :net_invoice_indicator

    # Customer currency code
    # @return [String]
    attr_accessor :customer_currency_code

    # Customer currency Symbol
    # @return [String]
    attr_accessor :customer_currency_symbol

    # Effective Unit Discount (excluding VAT in Customer currency)
    # Note: - The value could be null/blank for fees item.
    # @return [Float]
    attr_accessor :effective_unit_discount_in_customer_currency

    # Effective Discount (excluding VAT in Customer currency)
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :effective_discount_in_customer_currency

    # VAT on Net Amount (in Customer currency)
    # @return [Float]
    attr_accessor :va_ton_net_amount_in_customer_currency

    # Discount Type
    # Example: 1-None
    # 2-Pence per unit
    # 3-Percentage
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :discount_type

    # Transaction status "U" or "I"
    # “U” stands for Uninvoiced
    # “I” stands for Invoiced
    # @return [String]
    attr_accessor :transaction_status

    # Unique Sales Item Identifier
    # Example: 18315958002
    # Note: For a fee item, this parameter will be populated with SalesItemId.
    # @return [Integer]
    attr_accessor :sales_item_id

    # Payer Group applicable for the Large Customer NL+8 digit code
    # @return [String]
    attr_accessor :payer_group

    # Payer Group Name
    # @return [String]
    attr_accessor :payer_group_name

    # Refund Flag “N” for Not Refunded and “Y” for Refunded.
    # @return [String]
    attr_accessor :refund_flag

    # Shows Sales Item Id of the original item that was refunded
    # @return [String]
    attr_accessor :original_sales_item_id

    # Delco Name
    # @return [String]
    attr_accessor :delco_name

    # Delco Code
    # @return [String]
    attr_accessor :delco_code

    # Payer number (Country code+8 digits)
    # @return [String]
    attr_accessor :payer_number

    # Payer name
    # Example: V.M. LE COMTE
    # @return [String]
    attr_accessor :payer_name

    # Year/Month of the Card Expiry captured on the transaction
    # @return [String]
    attr_accessor :card_expiry_period

    # Authorisation code of the transaction
    # Example: 011256
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :authorisation_code

    # Unique id of the transaction that may include one or more salesitems
    # @return [String]
    attr_accessor :transaction_id

    # Transaction line item number
    # @return [String]
    attr_accessor :transaction_line

    # Is the Sales Item allowed for clearing? i.e. not written off
    # Example: “Y” or “N”
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :allow_clearing

    # CRM Case number if the sales item is in dispute
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :crm_number

    # Sales Item Dispute Status if disputed
    # 0    No Dispute
    # 1    In Dispute
    # 2    Re-Instated
    # 3    Adjusted
    # 4    Written Off by Colco
    # 5    Written Off by Delco
    # 6    Charged Back to Site
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :dispute_status

    # Unit discount in customer currency.
    # Example: 28.279000
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :rebate_rate

    # Exchange rate from transaction currency to customer currency.
    # Example: 1
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :del_co_to_col_co_exchange_rate

    # Net euro amount.
    # Example: 37.93
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :net_euro_amount

    # Euro rebate amount.
    # Example: 0
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :euro_rebate_amount

    # Euro VAT amount.
    # Example: 7.96
    # Note: - The value could be null/blank for fees item
    # @return [Float]
    attr_accessor :euro_vat_amount

    # Parent customer number
    # @return [String]
    attr_accessor :parent_customer_number

    # Parent customer name.
    # @return [String]
    attr_accessor :parent_customer_name

    # Parent customer id.
    # @return [Integer]
    attr_accessor :parent_customer_id

    # Incoming Site Number
    # Example: 100021
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :incoming_site_number

    # Incoming Site Description
    # Example: HN3 INTI_02-82.02
    # Note: - The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :incoming_site_description

    # Incoming Currency Code
    # Example: GBP
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :incoming_currency_code

    # Incoming Product Code
    # Example: 30
    # @return [String]
    attr_accessor :incoming_product_code

    # Credit Debit Code
    # Example: “D” or “C”
    # The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :credit_debit_code

    # Correction Flag
    # Example: “Y” or “N”
    # The value could be null/blank for fees item.
    # @return [String]
    attr_accessor :correction_flag

    # Additional1
    # @return [String]
    attr_accessor :additional1

    # Additional2
    # @return [String]
    attr_accessor :additional2

    # Additional3
    # @return [String]
    attr_accessor :additional3

    # Additional4
    # @return [String]
    attr_accessor :additional4

    # Rebate on Net Amount In Customer Currency
    # Example: -0.735000000000
    # Note: - The value could be null/blank for fees item.
    # @return [Float]
    attr_accessor :rebateon_net_amount_in_customer_currency

    # Rebate on Net Amount In Transaction Currency
    # Example: -0.735000000000
    # Note: - The value could be null/blank for fees item.
    # @return [Float]
    attr_accessor :rebateon_net_amount_in_transaction_currency

    # Network Code
    # Example: AVEE PTUAZONW CUBFAO COSFS
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :network_code

    # Transaction Identifier
    # @return [String]
    attr_accessor :trn_identifier

    # Card Type
    # @return [String]
    attr_accessor :card_type

    # Delco List Price Unit Net
    # Example: 30.500000
    # @return [Float]
    attr_accessor :delco_list_price_unit_net

    # Retail Net Price (or pump net price) per Unit in transaction currency
    # Example: 1.921000
    # @return [Float]
    attr_accessor :delco_retail_price_unit_net

    # Retail gross price (or pump gross price) per unit in transaction currency
    # @return [Float]
    attr_accessor :delco_retail_price_unit_gross

    # Retail net price (or net pump price) in transaction currency
    # @return [Float]
    attr_accessor :delco_retail_value_total_net

    # Retail gross price (or gross pump price) in transaction currency
    # @return [Float]
    attr_accessor :delco_retail_value_total_gross

    # Retail gross price (or pump gross price) per unit in customer currency
    # @return [Float]
    attr_accessor :customer_retail_price_unit_gross

    # Retail gross price (or gross pump price) in customer currency
    # @return [Float]
    attr_accessor :customer_retail_value_total_gross

    # Retail gross price (or gross pump price) in customer currency
    # Retail net price (or net pump price) in customer currency
    # @return [Float]
    attr_accessor :customer_retail_value_total_net

    # Transaction Type Description
    # Note: - The value could be null/blank for fees item
    # @return [String]
    attr_accessor :transaction_type_description

    # Transaction Type Description
    # Note: - The value could be null/blank for fees item
    # @return [ErrorStatus]
    attr_accessor :error

    # API Request Id
    # @return [String]
    attr_accessor :request_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['type'] = 'Type'
      @_hash['card_id'] = 'CardId'
      @_hash['card_pan'] = 'CardPAN'
      @_hash['card_expiry'] = 'CardExpiry'
      @_hash['transaction_date'] = 'TransactionDate'
      @_hash['transaction_time'] = 'TransactionTime'
      @_hash['utc_offset'] = 'UTCOffset'
      @_hash['fleet_id_input'] = 'FleetIdInput'
      @_hash['odometer_input'] = 'OdometerInput'
      @_hash['driver_name'] = 'DriverName'
      @_hash['vehicle_registration'] = 'VehicleRegistration'
      @_hash['invoice_currency_code'] = 'InvoiceCurrencyCode'
      @_hash['invoice_currency_symbol'] = 'InvoiceCurrencySymbol'
      @_hash['transaction_currency_code'] = 'TransactionCurrencyCode'
      @_hash['transaction_currency_symbol'] = 'TransactionCurrencySymbol'
      @_hash['transaction_net_amount'] = 'TransactionNetAmount'
      @_hash['transaction_tax'] = 'TransactionTax'
      @_hash['transaction_gross_amount'] = 'TransactionGrossAmount'
      @_hash['invoice_net_amount'] = 'InvoiceNetAmount'
      @_hash['invoice_tax'] = 'InvoiceTax'
      @_hash['invoice_gross_amount'] = 'InvoiceGrossAmount'
      @_hash['purchased_in_country'] = 'PurchasedInCountry'
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['account_name'] = 'AccountName'
      @_hash['account_short_name'] = 'AccountShortName'
      @_hash['quantity'] = 'Quantity'
      @_hash['fuel_product'] = 'FuelProduct'
      @_hash['unit_price_in_transaction_currency'] =
        'UnitPriceInTransactionCurrency'
      @_hash['unit_price_in_invoice_currency'] = 'UnitPriceInInvoiceCurrency'
      @_hash['unit_discount_transaction_currency'] =
        'UnitDiscountTransactionCurrency'
      @_hash['unit_discount_invoice_currency'] = 'UnitDiscountInvoiceCurrency'
      @_hash['is_invoiced'] = 'IsInvoiced'
      @_hash['invoice_number'] = 'InvoiceNumber'
      @_hash['invoice_date'] = 'InvoiceDate'
      @_hash['site_code'] = 'SiteCode'
      @_hash['site_name'] = 'SiteName'
      @_hash['site_country'] = 'SiteCountry'
      @_hash['location'] = 'Location'
      @_hash['card_group_name'] = 'CardGroupName'
      @_hash['receipt_number'] = 'ReceiptNumber'
      @_hash['product_code'] = 'ProductCode'
      @_hash['product_name'] = 'ProductName'
      @_hash['product_group_id'] = 'ProductGroupId'
      @_hash['product_group_name'] = 'ProductGroupName'
      @_hash['del_co_exchange_rate'] = 'DelCoExchangeRate'
      @_hash['col_co_exchange_rate'] = 'ColCoExchangeRate'
      @_hash['is_shell_site'] = 'IsShellSite'
      @_hash['network'] = 'Network'
      @_hash['site_group_id'] = 'SiteGroupId'
      @_hash['site_group_name'] = 'SiteGroupName'
      @_hash['posting_date'] = 'PostingDate'
      @_hash['issuer_code'] = 'IssuerCode'
      @_hash['purchased_in_country_code'] = 'PurchasedInCountryCode'
      @_hash['customer_country_code'] = 'CustomerCountryCode'
      @_hash['customer_country'] = 'CustomerCountry'
      @_hash['release_code'] = 'ReleaseCode'
      @_hash['card_group_id'] = 'CardGroupId'
      @_hash['card_sequence_number'] = 'CardSequenceNumber'
      @_hash['check_digit'] = 'CheckDigit'
      @_hash['fleet_id_description'] = 'FleetIDDescription'
      @_hash['vat_rate'] = 'VATRate'
      @_hash['vat_category'] = 'VATCategory'
      @_hash['vat_country'] = 'VATCountry'
      @_hash['effective_discount_in_trx_currency'] =
        'EffectiveDiscountInTrxCurrency'
      @_hash['transaction_type'] = 'TransactionType'
      @_hash['pin_indicator'] = 'PINIndicator'
      @_hash['vat_applicable'] = 'VATApplicable'
      @_hash['net_invoice_indicator'] = 'NetInvoiceIndicator'
      @_hash['customer_currency_code'] = 'CustomerCurrencyCode'
      @_hash['customer_currency_symbol'] = 'CustomerCurrencySymbol'
      @_hash['effective_unit_discount_in_customer_currency'] =
        'EffectiveUnitDiscountInCustomerCurrency'
      @_hash['effective_discount_in_customer_currency'] =
        'EffectiveDiscountInCustomerCurrency'
      @_hash['va_ton_net_amount_in_customer_currency'] =
        'VATonNetAmountInCustomerCurrency'
      @_hash['discount_type'] = 'DiscountType'
      @_hash['transaction_status'] = 'TransactionStatus'
      @_hash['sales_item_id'] = 'SalesItemId'
      @_hash['payer_group'] = 'PayerGroup'
      @_hash['payer_group_name'] = 'PayerGroupName'
      @_hash['refund_flag'] = 'RefundFlag'
      @_hash['original_sales_item_id'] = 'OriginalSalesItemId'
      @_hash['delco_name'] = 'DelcoName'
      @_hash['delco_code'] = 'DelcoCode'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payer_name'] = 'PayerName'
      @_hash['card_expiry_period'] = 'CardExpiryPeriod'
      @_hash['authorisation_code'] = 'AuthorisationCode'
      @_hash['transaction_id'] = 'TransactionId'
      @_hash['transaction_line'] = 'TransactionLine'
      @_hash['allow_clearing'] = 'AllowClearing'
      @_hash['crm_number'] = 'CRMNumber'
      @_hash['dispute_status'] = 'DisputeStatus'
      @_hash['rebate_rate'] = 'RebateRate'
      @_hash['del_co_to_col_co_exchange_rate'] = 'DelCoToColCoExchangeRate'
      @_hash['net_euro_amount'] = 'NetEuroAmount'
      @_hash['euro_rebate_amount'] = 'EuroRebateAmount'
      @_hash['euro_vat_amount'] = 'EuroVATAmount'
      @_hash['parent_customer_number'] = 'ParentCustomerNumber'
      @_hash['parent_customer_name'] = 'ParentCustomerName'
      @_hash['parent_customer_id'] = 'ParentCustomerId'
      @_hash['incoming_site_number'] = 'IncomingSiteNumber'
      @_hash['incoming_site_description'] = 'IncomingSiteDescription'
      @_hash['incoming_currency_code'] = 'IncomingCurrencyCode'
      @_hash['incoming_product_code'] = 'IncomingProductCode'
      @_hash['credit_debit_code'] = 'CreditDebitCode'
      @_hash['correction_flag'] = 'CorrectionFlag'
      @_hash['additional1'] = 'Additional1'
      @_hash['additional2'] = 'Additional2'
      @_hash['additional3'] = 'Additional3'
      @_hash['additional4'] = 'Additional4'
      @_hash['rebateon_net_amount_in_customer_currency'] =
        'RebateonNetAmountInCustomerCurrency'
      @_hash['rebateon_net_amount_in_transaction_currency'] =
        'RebateonNetAmountInTransactionCurrency'
      @_hash['network_code'] = 'NetworkCode'
      @_hash['trn_identifier'] = 'TrnIdentifier'
      @_hash['card_type'] = 'CardType'
      @_hash['delco_list_price_unit_net'] = 'DelcoListPriceUnitNet'
      @_hash['delco_retail_price_unit_net'] = 'DelcoRetailPriceUnitNet'
      @_hash['delco_retail_price_unit_gross'] = 'DelcoRetailPriceUnitGross'
      @_hash['delco_retail_value_total_net'] = 'DelcoRetailValueTotalNet'
      @_hash['delco_retail_value_total_gross'] = 'DelcoRetailValueTotalGross'
      @_hash['customer_retail_price_unit_gross'] =
        'CustomerRetailPriceUnitGross'
      @_hash['customer_retail_value_total_gross'] =
        'CustomerRetailValueTotalGross'
      @_hash['customer_retail_value_total_net'] =
        'CustomerRetailValueTotalNet'
      @_hash['transaction_type_description'] = 'TransactionTypeDescription'
      @_hash['error'] = 'Error'
      @_hash['request_id'] = 'RequestId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        type
        card_id
        card_pan
        card_expiry
        transaction_date
        transaction_time
        utc_offset
        fleet_id_input
        odometer_input
        driver_name
        vehicle_registration
        invoice_currency_code
        invoice_currency_symbol
        transaction_currency_code
        transaction_currency_symbol
        transaction_net_amount
        transaction_tax
        transaction_gross_amount
        invoice_net_amount
        invoice_tax
        invoice_gross_amount
        purchased_in_country
        account_id
        account_number
        account_name
        account_short_name
        quantity
        fuel_product
        unit_price_in_transaction_currency
        unit_price_in_invoice_currency
        unit_discount_transaction_currency
        unit_discount_invoice_currency
        is_invoiced
        invoice_number
        invoice_date
        site_code
        site_name
        site_country
        location
        card_group_name
        receipt_number
        product_code
        product_name
        product_group_id
        product_group_name
        del_co_exchange_rate
        col_co_exchange_rate
        is_shell_site
        network
        site_group_id
        site_group_name
        posting_date
        issuer_code
        purchased_in_country_code
        customer_country_code
        customer_country
        release_code
        card_group_id
        card_sequence_number
        check_digit
        fleet_id_description
        vat_rate
        vat_category
        vat_country
        effective_discount_in_trx_currency
        transaction_type
        pin_indicator
        vat_applicable
        net_invoice_indicator
        customer_currency_code
        customer_currency_symbol
        effective_unit_discount_in_customer_currency
        effective_discount_in_customer_currency
        va_ton_net_amount_in_customer_currency
        discount_type
        transaction_status
        sales_item_id
        payer_group
        payer_group_name
        refund_flag
        original_sales_item_id
        delco_name
        delco_code
        payer_number
        payer_name
        card_expiry_period
        authorisation_code
        transaction_id
        transaction_line
        allow_clearing
        crm_number
        dispute_status
        rebate_rate
        del_co_to_col_co_exchange_rate
        net_euro_amount
        euro_rebate_amount
        euro_vat_amount
        parent_customer_number
        parent_customer_name
        parent_customer_id
        incoming_site_number
        incoming_site_description
        incoming_currency_code
        incoming_product_code
        credit_debit_code
        correction_flag
        additional1
        additional2
        additional3
        additional4
        rebateon_net_amount_in_customer_currency
        rebateon_net_amount_in_transaction_currency
        network_code
        trn_identifier
        card_type
        delco_list_price_unit_net
        delco_retail_price_unit_net
        delco_retail_price_unit_gross
        delco_retail_value_total_net
        delco_retail_value_total_gross
        customer_retail_price_unit_gross
        customer_retail_value_total_gross
        customer_retail_value_total_net
        transaction_type_description
        error
        request_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        type
        card_id
        card_pan
        card_expiry
        transaction_date
        transaction_time
        utc_offset
        fleet_id_input
        odometer_input
        driver_name
        vehicle_registration
        invoice_currency_code
        invoice_currency_symbol
        transaction_currency_code
        transaction_currency_symbol
        transaction_net_amount
        transaction_tax
        transaction_gross_amount
        invoice_net_amount
        invoice_tax
        invoice_gross_amount
        purchased_in_country
        account_id
        account_number
        account_name
        account_short_name
        quantity
        fuel_product
        unit_price_in_transaction_currency
        unit_price_in_invoice_currency
        unit_discount_transaction_currency
        unit_discount_invoice_currency
        is_invoiced
        invoice_number
        invoice_date
        site_code
        site_name
        site_country
        card_group_name
        receipt_number
        product_code
        product_name
        product_group_id
        product_group_name
        del_co_exchange_rate
        col_co_exchange_rate
        is_shell_site
        network
        site_group_id
        site_group_name
        posting_date
        issuer_code
        purchased_in_country_code
        customer_country_code
        customer_country
        release_code
        card_group_id
        card_sequence_number
        check_digit
        fleet_id_description
        vat_rate
        vat_category
        vat_country
        effective_discount_in_trx_currency
        transaction_type
        pin_indicator
        vat_applicable
        net_invoice_indicator
        customer_currency_code
        customer_currency_symbol
        effective_unit_discount_in_customer_currency
        effective_discount_in_customer_currency
        va_ton_net_amount_in_customer_currency
        discount_type
        transaction_status
        sales_item_id
        payer_group
        payer_group_name
        refund_flag
        original_sales_item_id
        delco_name
        delco_code
        payer_number
        payer_name
        card_expiry_period
        authorisation_code
        transaction_id
        transaction_line
        allow_clearing
        crm_number
        dispute_status
        rebate_rate
        del_co_to_col_co_exchange_rate
        net_euro_amount
        euro_rebate_amount
        euro_vat_amount
        parent_customer_number
        parent_customer_name
        parent_customer_id
        incoming_site_number
        incoming_site_description
        incoming_currency_code
        incoming_product_code
        credit_debit_code
        correction_flag
        additional1
        additional2
        additional3
        additional4
        rebateon_net_amount_in_customer_currency
        rebateon_net_amount_in_transaction_currency
        network_code
        trn_identifier
        card_type
        delco_list_price_unit_net
        delco_retail_price_unit_net
        delco_retail_price_unit_gross
        delco_retail_value_total_net
        delco_retail_value_total_gross
        customer_retail_price_unit_gross
        customer_retail_value_total_gross
        customer_retail_value_total_net
        transaction_type_description
      ]
    end

    def initialize(type = SKIP, card_id = SKIP, card_pan = SKIP,
                   card_expiry = SKIP, transaction_date = SKIP,
                   transaction_time = SKIP, utc_offset = SKIP,
                   fleet_id_input = SKIP, odometer_input = SKIP,
                   driver_name = SKIP, vehicle_registration = SKIP,
                   invoice_currency_code = SKIP, invoice_currency_symbol = SKIP,
                   transaction_currency_code = SKIP,
                   transaction_currency_symbol = SKIP,
                   transaction_net_amount = SKIP, transaction_tax = SKIP,
                   transaction_gross_amount = SKIP, invoice_net_amount = SKIP,
                   invoice_tax = SKIP, invoice_gross_amount = SKIP,
                   purchased_in_country = SKIP, account_id = SKIP,
                   account_number = SKIP, account_name = SKIP,
                   account_short_name = SKIP, quantity = SKIP,
                   fuel_product = SKIP,
                   unit_price_in_transaction_currency = SKIP,
                   unit_price_in_invoice_currency = SKIP,
                   unit_discount_transaction_currency = SKIP,
                   unit_discount_invoice_currency = SKIP, is_invoiced = SKIP,
                   invoice_number = SKIP, invoice_date = SKIP, site_code = SKIP,
                   site_name = SKIP, site_country = SKIP, location = SKIP,
                   card_group_name = SKIP, receipt_number = SKIP,
                   product_code = SKIP, product_name = SKIP,
                   product_group_id = SKIP, product_group_name = SKIP,
                   del_co_exchange_rate = SKIP, col_co_exchange_rate = SKIP,
                   is_shell_site = SKIP, network = SKIP, site_group_id = SKIP,
                   site_group_name = SKIP, posting_date = SKIP,
                   issuer_code = SKIP, purchased_in_country_code = SKIP,
                   customer_country_code = SKIP, customer_country = SKIP,
                   release_code = SKIP, card_group_id = SKIP,
                   card_sequence_number = SKIP, check_digit = SKIP,
                   fleet_id_description = SKIP, vat_rate = SKIP,
                   vat_category = SKIP, vat_country = SKIP,
                   effective_discount_in_trx_currency = SKIP,
                   transaction_type = SKIP, pin_indicator = SKIP,
                   vat_applicable = SKIP, net_invoice_indicator = SKIP,
                   customer_currency_code = SKIP,
                   customer_currency_symbol = SKIP,
                   effective_unit_discount_in_customer_currency = SKIP,
                   effective_discount_in_customer_currency = SKIP,
                   va_ton_net_amount_in_customer_currency = SKIP,
                   discount_type = SKIP, transaction_status = SKIP,
                   sales_item_id = SKIP, payer_group = SKIP,
                   payer_group_name = SKIP, refund_flag = SKIP,
                   original_sales_item_id = SKIP, delco_name = SKIP,
                   delco_code = SKIP, payer_number = SKIP, payer_name = SKIP,
                   card_expiry_period = SKIP, authorisation_code = SKIP,
                   transaction_id = SKIP, transaction_line = SKIP,
                   allow_clearing = SKIP, crm_number = SKIP,
                   dispute_status = SKIP, rebate_rate = SKIP,
                   del_co_to_col_co_exchange_rate = SKIP,
                   net_euro_amount = SKIP, euro_rebate_amount = SKIP,
                   euro_vat_amount = SKIP, parent_customer_number = SKIP,
                   parent_customer_name = SKIP, parent_customer_id = SKIP,
                   incoming_site_number = SKIP,
                   incoming_site_description = SKIP,
                   incoming_currency_code = SKIP, incoming_product_code = SKIP,
                   credit_debit_code = SKIP, correction_flag = SKIP,
                   additional1 = SKIP, additional2 = SKIP, additional3 = SKIP,
                   additional4 = SKIP,
                   rebateon_net_amount_in_customer_currency = SKIP,
                   rebateon_net_amount_in_transaction_currency = SKIP,
                   network_code = SKIP, trn_identifier = SKIP, card_type = SKIP,
                   delco_list_price_unit_net = SKIP,
                   delco_retail_price_unit_net = SKIP,
                   delco_retail_price_unit_gross = SKIP,
                   delco_retail_value_total_net = SKIP,
                   delco_retail_value_total_gross = SKIP,
                   customer_retail_price_unit_gross = SKIP,
                   customer_retail_value_total_gross = SKIP,
                   customer_retail_value_total_net = SKIP,
                   transaction_type_description = SKIP, error = SKIP,
                   request_id = SKIP)
      @type = type unless type == SKIP
      @card_id = card_id unless card_id == SKIP
      @card_pan = card_pan unless card_pan == SKIP
      @card_expiry = card_expiry unless card_expiry == SKIP
      @transaction_date = transaction_date unless transaction_date == SKIP
      @transaction_time = transaction_time unless transaction_time == SKIP
      @utc_offset = utc_offset unless utc_offset == SKIP
      @fleet_id_input = fleet_id_input unless fleet_id_input == SKIP
      @odometer_input = odometer_input unless odometer_input == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      @vehicle_registration = vehicle_registration unless vehicle_registration == SKIP
      @invoice_currency_code = invoice_currency_code unless invoice_currency_code == SKIP
      @invoice_currency_symbol = invoice_currency_symbol unless invoice_currency_symbol == SKIP
      unless transaction_currency_code == SKIP
        @transaction_currency_code =
          transaction_currency_code
      end
      unless transaction_currency_symbol == SKIP
        @transaction_currency_symbol =
          transaction_currency_symbol
      end
      @transaction_net_amount = transaction_net_amount unless transaction_net_amount == SKIP
      @transaction_tax = transaction_tax unless transaction_tax == SKIP
      @transaction_gross_amount = transaction_gross_amount unless transaction_gross_amount == SKIP
      @invoice_net_amount = invoice_net_amount unless invoice_net_amount == SKIP
      @invoice_tax = invoice_tax unless invoice_tax == SKIP
      @invoice_gross_amount = invoice_gross_amount unless invoice_gross_amount == SKIP
      @purchased_in_country = purchased_in_country unless purchased_in_country == SKIP
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_name = account_name unless account_name == SKIP
      @account_short_name = account_short_name unless account_short_name == SKIP
      @quantity = quantity unless quantity == SKIP
      @fuel_product = fuel_product unless fuel_product == SKIP
      unless unit_price_in_transaction_currency == SKIP
        @unit_price_in_transaction_currency =
          unit_price_in_transaction_currency
      end
      unless unit_price_in_invoice_currency == SKIP
        @unit_price_in_invoice_currency =
          unit_price_in_invoice_currency
      end
      unless unit_discount_transaction_currency == SKIP
        @unit_discount_transaction_currency =
          unit_discount_transaction_currency
      end
      unless unit_discount_invoice_currency == SKIP
        @unit_discount_invoice_currency =
          unit_discount_invoice_currency
      end
      @is_invoiced = is_invoiced unless is_invoiced == SKIP
      @invoice_number = invoice_number unless invoice_number == SKIP
      @invoice_date = invoice_date unless invoice_date == SKIP
      @site_code = site_code unless site_code == SKIP
      @site_name = site_name unless site_name == SKIP
      @site_country = site_country unless site_country == SKIP
      @location = location unless location == SKIP
      @card_group_name = card_group_name unless card_group_name == SKIP
      @receipt_number = receipt_number unless receipt_number == SKIP
      @product_code = product_code unless product_code == SKIP
      @product_name = product_name unless product_name == SKIP
      @product_group_id = product_group_id unless product_group_id == SKIP
      @product_group_name = product_group_name unless product_group_name == SKIP
      @del_co_exchange_rate = del_co_exchange_rate unless del_co_exchange_rate == SKIP
      @col_co_exchange_rate = col_co_exchange_rate unless col_co_exchange_rate == SKIP
      @is_shell_site = is_shell_site unless is_shell_site == SKIP
      @network = network unless network == SKIP
      @site_group_id = site_group_id unless site_group_id == SKIP
      @site_group_name = site_group_name unless site_group_name == SKIP
      @posting_date = posting_date unless posting_date == SKIP
      @issuer_code = issuer_code unless issuer_code == SKIP
      unless purchased_in_country_code == SKIP
        @purchased_in_country_code =
          purchased_in_country_code
      end
      @customer_country_code = customer_country_code unless customer_country_code == SKIP
      @customer_country = customer_country unless customer_country == SKIP
      @release_code = release_code unless release_code == SKIP
      @card_group_id = card_group_id unless card_group_id == SKIP
      @card_sequence_number = card_sequence_number unless card_sequence_number == SKIP
      @check_digit = check_digit unless check_digit == SKIP
      @fleet_id_description = fleet_id_description unless fleet_id_description == SKIP
      @vat_rate = vat_rate unless vat_rate == SKIP
      @vat_category = vat_category unless vat_category == SKIP
      @vat_country = vat_country unless vat_country == SKIP
      unless effective_discount_in_trx_currency == SKIP
        @effective_discount_in_trx_currency =
          effective_discount_in_trx_currency
      end
      @transaction_type = transaction_type unless transaction_type == SKIP
      @pin_indicator = pin_indicator unless pin_indicator == SKIP
      @vat_applicable = vat_applicable unless vat_applicable == SKIP
      @net_invoice_indicator = net_invoice_indicator unless net_invoice_indicator == SKIP
      @customer_currency_code = customer_currency_code unless customer_currency_code == SKIP
      @customer_currency_symbol = customer_currency_symbol unless customer_currency_symbol == SKIP
      unless effective_unit_discount_in_customer_currency == SKIP
        @effective_unit_discount_in_customer_currency =
          effective_unit_discount_in_customer_currency
      end
      unless effective_discount_in_customer_currency == SKIP
        @effective_discount_in_customer_currency =
          effective_discount_in_customer_currency
      end
      unless va_ton_net_amount_in_customer_currency == SKIP
        @va_ton_net_amount_in_customer_currency =
          va_ton_net_amount_in_customer_currency
      end
      @discount_type = discount_type unless discount_type == SKIP
      @transaction_status = transaction_status unless transaction_status == SKIP
      @sales_item_id = sales_item_id unless sales_item_id == SKIP
      @payer_group = payer_group unless payer_group == SKIP
      @payer_group_name = payer_group_name unless payer_group_name == SKIP
      @refund_flag = refund_flag unless refund_flag == SKIP
      @original_sales_item_id = original_sales_item_id unless original_sales_item_id == SKIP
      @delco_name = delco_name unless delco_name == SKIP
      @delco_code = delco_code unless delco_code == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payer_name = payer_name unless payer_name == SKIP
      @card_expiry_period = card_expiry_period unless card_expiry_period == SKIP
      @authorisation_code = authorisation_code unless authorisation_code == SKIP
      @transaction_id = transaction_id unless transaction_id == SKIP
      @transaction_line = transaction_line unless transaction_line == SKIP
      @allow_clearing = allow_clearing unless allow_clearing == SKIP
      @crm_number = crm_number unless crm_number == SKIP
      @dispute_status = dispute_status unless dispute_status == SKIP
      @rebate_rate = rebate_rate unless rebate_rate == SKIP
      unless del_co_to_col_co_exchange_rate == SKIP
        @del_co_to_col_co_exchange_rate =
          del_co_to_col_co_exchange_rate
      end
      @net_euro_amount = net_euro_amount unless net_euro_amount == SKIP
      @euro_rebate_amount = euro_rebate_amount unless euro_rebate_amount == SKIP
      @euro_vat_amount = euro_vat_amount unless euro_vat_amount == SKIP
      @parent_customer_number = parent_customer_number unless parent_customer_number == SKIP
      @parent_customer_name = parent_customer_name unless parent_customer_name == SKIP
      @parent_customer_id = parent_customer_id unless parent_customer_id == SKIP
      @incoming_site_number = incoming_site_number unless incoming_site_number == SKIP
      unless incoming_site_description == SKIP
        @incoming_site_description =
          incoming_site_description
      end
      @incoming_currency_code = incoming_currency_code unless incoming_currency_code == SKIP
      @incoming_product_code = incoming_product_code unless incoming_product_code == SKIP
      @credit_debit_code = credit_debit_code unless credit_debit_code == SKIP
      @correction_flag = correction_flag unless correction_flag == SKIP
      @additional1 = additional1 unless additional1 == SKIP
      @additional2 = additional2 unless additional2 == SKIP
      @additional3 = additional3 unless additional3 == SKIP
      @additional4 = additional4 unless additional4 == SKIP
      unless rebateon_net_amount_in_customer_currency == SKIP
        @rebateon_net_amount_in_customer_currency =
          rebateon_net_amount_in_customer_currency
      end
      unless rebateon_net_amount_in_transaction_currency == SKIP
        @rebateon_net_amount_in_transaction_currency =
          rebateon_net_amount_in_transaction_currency
      end
      @network_code = network_code unless network_code == SKIP
      @trn_identifier = trn_identifier unless trn_identifier == SKIP
      @card_type = card_type unless card_type == SKIP
      unless delco_list_price_unit_net == SKIP
        @delco_list_price_unit_net =
          delco_list_price_unit_net
      end
      unless delco_retail_price_unit_net == SKIP
        @delco_retail_price_unit_net =
          delco_retail_price_unit_net
      end
      unless delco_retail_price_unit_gross == SKIP
        @delco_retail_price_unit_gross =
          delco_retail_price_unit_gross
      end
      unless delco_retail_value_total_net == SKIP
        @delco_retail_value_total_net =
          delco_retail_value_total_net
      end
      unless delco_retail_value_total_gross == SKIP
        @delco_retail_value_total_gross =
          delco_retail_value_total_gross
      end
      unless customer_retail_price_unit_gross == SKIP
        @customer_retail_price_unit_gross =
          customer_retail_price_unit_gross
      end
      unless customer_retail_value_total_gross == SKIP
        @customer_retail_value_total_gross =
          customer_retail_value_total_gross
      end
      unless customer_retail_value_total_net == SKIP
        @customer_retail_value_total_net =
          customer_retail_value_total_net
      end
      unless transaction_type_description == SKIP
        @transaction_type_description =
          transaction_type_description
      end
      @error = error unless error == SKIP
      @request_id = request_id unless request_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      type = hash.key?('Type') ? hash['Type'] : SKIP
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      card_pan = hash.key?('CardPAN') ? hash['CardPAN'] : SKIP
      card_expiry = hash.key?('CardExpiry') ? hash['CardExpiry'] : SKIP
      transaction_date =
        hash.key?('TransactionDate') ? hash['TransactionDate'] : SKIP
      transaction_time =
        hash.key?('TransactionTime') ? hash['TransactionTime'] : SKIP
      utc_offset = hash.key?('UTCOffset') ? hash['UTCOffset'] : SKIP
      fleet_id_input = hash.key?('FleetIdInput') ? hash['FleetIdInput'] : SKIP
      odometer_input = hash.key?('OdometerInput') ? hash['OdometerInput'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      vehicle_registration =
        hash.key?('VehicleRegistration') ? hash['VehicleRegistration'] : SKIP
      invoice_currency_code =
        hash.key?('InvoiceCurrencyCode') ? hash['InvoiceCurrencyCode'] : SKIP
      invoice_currency_symbol =
        hash.key?('InvoiceCurrencySymbol') ? hash['InvoiceCurrencySymbol'] : SKIP
      transaction_currency_code =
        hash.key?('TransactionCurrencyCode') ? hash['TransactionCurrencyCode'] : SKIP
      transaction_currency_symbol =
        hash.key?('TransactionCurrencySymbol') ? hash['TransactionCurrencySymbol'] : SKIP
      transaction_net_amount =
        hash.key?('TransactionNetAmount') ? hash['TransactionNetAmount'] : SKIP
      transaction_tax =
        hash.key?('TransactionTax') ? hash['TransactionTax'] : SKIP
      transaction_gross_amount =
        hash.key?('TransactionGrossAmount') ? hash['TransactionGrossAmount'] : SKIP
      invoice_net_amount =
        hash.key?('InvoiceNetAmount') ? hash['InvoiceNetAmount'] : SKIP
      invoice_tax = hash.key?('InvoiceTax') ? hash['InvoiceTax'] : SKIP
      invoice_gross_amount =
        hash.key?('InvoiceGrossAmount') ? hash['InvoiceGrossAmount'] : SKIP
      purchased_in_country =
        hash.key?('PurchasedInCountry') ? hash['PurchasedInCountry'] : SKIP
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      account_name = hash.key?('AccountName') ? hash['AccountName'] : SKIP
      account_short_name =
        hash.key?('AccountShortName') ? hash['AccountShortName'] : SKIP
      quantity = hash.key?('Quantity') ? hash['Quantity'] : SKIP
      fuel_product = hash.key?('FuelProduct') ? hash['FuelProduct'] : SKIP
      unit_price_in_transaction_currency =
        hash.key?('UnitPriceInTransactionCurrency') ? hash['UnitPriceInTransactionCurrency'] : SKIP
      unit_price_in_invoice_currency =
        hash.key?('UnitPriceInInvoiceCurrency') ? hash['UnitPriceInInvoiceCurrency'] : SKIP
      unit_discount_transaction_currency =
        hash.key?('UnitDiscountTransactionCurrency') ? hash['UnitDiscountTransactionCurrency'] : SKIP
      unit_discount_invoice_currency =
        hash.key?('UnitDiscountInvoiceCurrency') ? hash['UnitDiscountInvoiceCurrency'] : SKIP
      is_invoiced = hash.key?('IsInvoiced') ? hash['IsInvoiced'] : SKIP
      invoice_number = hash.key?('InvoiceNumber') ? hash['InvoiceNumber'] : SKIP
      invoice_date = hash.key?('InvoiceDate') ? hash['InvoiceDate'] : SKIP
      site_code = hash.key?('SiteCode') ? hash['SiteCode'] : SKIP
      site_name = hash.key?('SiteName') ? hash['SiteName'] : SKIP
      site_country = hash.key?('SiteCountry') ? hash['SiteCountry'] : SKIP
      location = hash.key?('Location') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:PricedTransactionResponseTransactionsItemsLocation), hash['Location']
      ) : SKIP
      card_group_name =
        hash.key?('CardGroupName') ? hash['CardGroupName'] : SKIP
      receipt_number = hash.key?('ReceiptNumber') ? hash['ReceiptNumber'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      product_name = hash.key?('ProductName') ? hash['ProductName'] : SKIP
      product_group_id =
        hash.key?('ProductGroupId') ? hash['ProductGroupId'] : SKIP
      product_group_name =
        hash.key?('ProductGroupName') ? hash['ProductGroupName'] : SKIP
      del_co_exchange_rate =
        hash.key?('DelCoExchangeRate') ? hash['DelCoExchangeRate'] : SKIP
      col_co_exchange_rate =
        hash.key?('ColCoExchangeRate') ? hash['ColCoExchangeRate'] : SKIP
      is_shell_site = hash.key?('IsShellSite') ? hash['IsShellSite'] : SKIP
      network = hash.key?('Network') ? hash['Network'] : SKIP
      site_group_id = hash.key?('SiteGroupId') ? hash['SiteGroupId'] : SKIP
      site_group_name =
        hash.key?('SiteGroupName') ? hash['SiteGroupName'] : SKIP
      posting_date = hash.key?('PostingDate') ? hash['PostingDate'] : SKIP
      issuer_code = hash.key?('IssuerCode') ? hash['IssuerCode'] : SKIP
      purchased_in_country_code =
        hash.key?('PurchasedInCountryCode') ? hash['PurchasedInCountryCode'] : SKIP
      customer_country_code =
        hash.key?('CustomerCountryCode') ? hash['CustomerCountryCode'] : SKIP
      customer_country =
        hash.key?('CustomerCountry') ? hash['CustomerCountry'] : SKIP
      release_code = hash.key?('ReleaseCode') ? hash['ReleaseCode'] : SKIP
      card_group_id = hash.key?('CardGroupId') ? hash['CardGroupId'] : SKIP
      card_sequence_number =
        hash.key?('CardSequenceNumber') ? hash['CardSequenceNumber'] : SKIP
      check_digit = hash.key?('CheckDigit') ? hash['CheckDigit'] : SKIP
      fleet_id_description =
        hash.key?('FleetIDDescription') ? hash['FleetIDDescription'] : SKIP
      vat_rate = hash.key?('VATRate') ? hash['VATRate'] : SKIP
      vat_category = hash.key?('VATCategory') ? hash['VATCategory'] : SKIP
      vat_country = hash.key?('VATCountry') ? hash['VATCountry'] : SKIP
      effective_discount_in_trx_currency =
        hash.key?('EffectiveDiscountInTrxCurrency') ? hash['EffectiveDiscountInTrxCurrency'] : SKIP
      transaction_type =
        hash.key?('TransactionType') ? hash['TransactionType'] : SKIP
      pin_indicator = hash.key?('PINIndicator') ? hash['PINIndicator'] : SKIP
      vat_applicable = hash.key?('VATApplicable') ? hash['VATApplicable'] : SKIP
      net_invoice_indicator =
        hash.key?('NetInvoiceIndicator') ? hash['NetInvoiceIndicator'] : SKIP
      customer_currency_code =
        hash.key?('CustomerCurrencyCode') ? hash['CustomerCurrencyCode'] : SKIP
      customer_currency_symbol =
        hash.key?('CustomerCurrencySymbol') ? hash['CustomerCurrencySymbol'] : SKIP
      effective_unit_discount_in_customer_currency =
        hash.key?('EffectiveUnitDiscountInCustomerCurrency') ? hash['EffectiveUnitDiscountInCustomerCurrency'] : SKIP
      effective_discount_in_customer_currency =
        hash.key?('EffectiveDiscountInCustomerCurrency') ? hash['EffectiveDiscountInCustomerCurrency'] : SKIP
      va_ton_net_amount_in_customer_currency =
        hash.key?('VATonNetAmountInCustomerCurrency') ? hash['VATonNetAmountInCustomerCurrency'] : SKIP
      discount_type = hash.key?('DiscountType') ? hash['DiscountType'] : SKIP
      transaction_status =
        hash.key?('TransactionStatus') ? hash['TransactionStatus'] : SKIP
      sales_item_id = hash.key?('SalesItemId') ? hash['SalesItemId'] : SKIP
      payer_group = hash.key?('PayerGroup') ? hash['PayerGroup'] : SKIP
      payer_group_name =
        hash.key?('PayerGroupName') ? hash['PayerGroupName'] : SKIP
      refund_flag = hash.key?('RefundFlag') ? hash['RefundFlag'] : SKIP
      original_sales_item_id =
        hash.key?('OriginalSalesItemId') ? hash['OriginalSalesItemId'] : SKIP
      delco_name = hash.key?('DelcoName') ? hash['DelcoName'] : SKIP
      delco_code = hash.key?('DelcoCode') ? hash['DelcoCode'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payer_name = hash.key?('PayerName') ? hash['PayerName'] : SKIP
      card_expiry_period =
        hash.key?('CardExpiryPeriod') ? hash['CardExpiryPeriod'] : SKIP
      authorisation_code =
        hash.key?('AuthorisationCode') ? hash['AuthorisationCode'] : SKIP
      transaction_id = hash.key?('TransactionId') ? hash['TransactionId'] : SKIP
      transaction_line =
        hash.key?('TransactionLine') ? hash['TransactionLine'] : SKIP
      allow_clearing = hash.key?('AllowClearing') ? hash['AllowClearing'] : SKIP
      crm_number = hash.key?('CRMNumber') ? hash['CRMNumber'] : SKIP
      dispute_status = hash.key?('DisputeStatus') ? hash['DisputeStatus'] : SKIP
      rebate_rate = hash.key?('RebateRate') ? hash['RebateRate'] : SKIP
      del_co_to_col_co_exchange_rate =
        hash.key?('DelCoToColCoExchangeRate') ? hash['DelCoToColCoExchangeRate'] : SKIP
      net_euro_amount =
        hash.key?('NetEuroAmount') ? hash['NetEuroAmount'] : SKIP
      euro_rebate_amount =
        hash.key?('EuroRebateAmount') ? hash['EuroRebateAmount'] : SKIP
      euro_vat_amount =
        hash.key?('EuroVATAmount') ? hash['EuroVATAmount'] : SKIP
      parent_customer_number =
        hash.key?('ParentCustomerNumber') ? hash['ParentCustomerNumber'] : SKIP
      parent_customer_name =
        hash.key?('ParentCustomerName') ? hash['ParentCustomerName'] : SKIP
      parent_customer_id =
        hash.key?('ParentCustomerId') ? hash['ParentCustomerId'] : SKIP
      incoming_site_number =
        hash.key?('IncomingSiteNumber') ? hash['IncomingSiteNumber'] : SKIP
      incoming_site_description =
        hash.key?('IncomingSiteDescription') ? hash['IncomingSiteDescription'] : SKIP
      incoming_currency_code =
        hash.key?('IncomingCurrencyCode') ? hash['IncomingCurrencyCode'] : SKIP
      incoming_product_code =
        hash.key?('IncomingProductCode') ? hash['IncomingProductCode'] : SKIP
      credit_debit_code =
        hash.key?('CreditDebitCode') ? hash['CreditDebitCode'] : SKIP
      correction_flag =
        hash.key?('CorrectionFlag') ? hash['CorrectionFlag'] : SKIP
      additional1 = hash.key?('Additional1') ? hash['Additional1'] : SKIP
      additional2 = hash.key?('Additional2') ? hash['Additional2'] : SKIP
      additional3 = hash.key?('Additional3') ? hash['Additional3'] : SKIP
      additional4 = hash.key?('Additional4') ? hash['Additional4'] : SKIP
      rebateon_net_amount_in_customer_currency =
        hash.key?('RebateonNetAmountInCustomerCurrency') ? hash['RebateonNetAmountInCustomerCurrency'] : SKIP
      rebateon_net_amount_in_transaction_currency =
        hash.key?('RebateonNetAmountInTransactionCurrency') ? hash['RebateonNetAmountInTransactionCurrency'] : SKIP
      network_code = hash.key?('NetworkCode') ? hash['NetworkCode'] : SKIP
      trn_identifier = hash.key?('TrnIdentifier') ? hash['TrnIdentifier'] : SKIP
      card_type = hash.key?('CardType') ? hash['CardType'] : SKIP
      delco_list_price_unit_net =
        hash.key?('DelcoListPriceUnitNet') ? hash['DelcoListPriceUnitNet'] : SKIP
      delco_retail_price_unit_net =
        hash.key?('DelcoRetailPriceUnitNet') ? hash['DelcoRetailPriceUnitNet'] : SKIP
      delco_retail_price_unit_gross =
        hash.key?('DelcoRetailPriceUnitGross') ? hash['DelcoRetailPriceUnitGross'] : SKIP
      delco_retail_value_total_net =
        hash.key?('DelcoRetailValueTotalNet') ? hash['DelcoRetailValueTotalNet'] : SKIP
      delco_retail_value_total_gross =
        hash.key?('DelcoRetailValueTotalGross') ? hash['DelcoRetailValueTotalGross'] : SKIP
      customer_retail_price_unit_gross =
        hash.key?('CustomerRetailPriceUnitGross') ? hash['CustomerRetailPriceUnitGross'] : SKIP
      customer_retail_value_total_gross =
        hash.key?('CustomerRetailValueTotalGross') ? hash['CustomerRetailValueTotalGross'] : SKIP
      customer_retail_value_total_net =
        hash.key?('CustomerRetailValueTotalNet') ? hash['CustomerRetailValueTotalNet'] : SKIP
      transaction_type_description =
        hash.key?('TransactionTypeDescription') ? hash['TransactionTypeDescription'] : SKIP
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP

      # Create object from extracted values.
      PricedTransactionResponseTransactionsItems.new(type,
                                                     card_id,
                                                     card_pan,
                                                     card_expiry,
                                                     transaction_date,
                                                     transaction_time,
                                                     utc_offset,
                                                     fleet_id_input,
                                                     odometer_input,
                                                     driver_name,
                                                     vehicle_registration,
                                                     invoice_currency_code,
                                                     invoice_currency_symbol,
                                                     transaction_currency_code,
                                                     transaction_currency_symbol,
                                                     transaction_net_amount,
                                                     transaction_tax,
                                                     transaction_gross_amount,
                                                     invoice_net_amount,
                                                     invoice_tax,
                                                     invoice_gross_amount,
                                                     purchased_in_country,
                                                     account_id,
                                                     account_number,
                                                     account_name,
                                                     account_short_name,
                                                     quantity,
                                                     fuel_product,
                                                     unit_price_in_transaction_currency,
                                                     unit_price_in_invoice_currency,
                                                     unit_discount_transaction_currency,
                                                     unit_discount_invoice_currency,
                                                     is_invoiced,
                                                     invoice_number,
                                                     invoice_date,
                                                     site_code,
                                                     site_name,
                                                     site_country,
                                                     location,
                                                     card_group_name,
                                                     receipt_number,
                                                     product_code,
                                                     product_name,
                                                     product_group_id,
                                                     product_group_name,
                                                     del_co_exchange_rate,
                                                     col_co_exchange_rate,
                                                     is_shell_site,
                                                     network,
                                                     site_group_id,
                                                     site_group_name,
                                                     posting_date,
                                                     issuer_code,
                                                     purchased_in_country_code,
                                                     customer_country_code,
                                                     customer_country,
                                                     release_code,
                                                     card_group_id,
                                                     card_sequence_number,
                                                     check_digit,
                                                     fleet_id_description,
                                                     vat_rate,
                                                     vat_category,
                                                     vat_country,
                                                     effective_discount_in_trx_currency,
                                                     transaction_type,
                                                     pin_indicator,
                                                     vat_applicable,
                                                     net_invoice_indicator,
                                                     customer_currency_code,
                                                     customer_currency_symbol,
                                                     effective_unit_discount_in_customer_currency,
                                                     effective_discount_in_customer_currency,
                                                     va_ton_net_amount_in_customer_currency,
                                                     discount_type,
                                                     transaction_status,
                                                     sales_item_id,
                                                     payer_group,
                                                     payer_group_name,
                                                     refund_flag,
                                                     original_sales_item_id,
                                                     delco_name,
                                                     delco_code,
                                                     payer_number,
                                                     payer_name,
                                                     card_expiry_period,
                                                     authorisation_code,
                                                     transaction_id,
                                                     transaction_line,
                                                     allow_clearing,
                                                     crm_number,
                                                     dispute_status,
                                                     rebate_rate,
                                                     del_co_to_col_co_exchange_rate,
                                                     net_euro_amount,
                                                     euro_rebate_amount,
                                                     euro_vat_amount,
                                                     parent_customer_number,
                                                     parent_customer_name,
                                                     parent_customer_id,
                                                     incoming_site_number,
                                                     incoming_site_description,
                                                     incoming_currency_code,
                                                     incoming_product_code,
                                                     credit_debit_code,
                                                     correction_flag,
                                                     additional1,
                                                     additional2,
                                                     additional3,
                                                     additional4,
                                                     rebateon_net_amount_in_customer_currency,
                                                     rebateon_net_amount_in_transaction_currency,
                                                     network_code,
                                                     trn_identifier,
                                                     card_type,
                                                     delco_list_price_unit_net,
                                                     delco_retail_price_unit_net,
                                                     delco_retail_price_unit_gross,
                                                     delco_retail_value_total_net,
                                                     delco_retail_value_total_gross,
                                                     customer_retail_price_unit_gross,
                                                     customer_retail_value_total_gross,
                                                     customer_retail_value_total_net,
                                                     transaction_type_description,
                                                     error,
                                                     request_id)
    end

    # Validates an instance of the object from a given value.
    # @param [PricedTransactionResponseTransactionsItems | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end
  end
end
