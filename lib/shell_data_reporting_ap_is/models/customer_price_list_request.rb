# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # CustomerPriceListRequest Model.
  class CustomerPriceListRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :col_co_id

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :col_co_code

    # Payer Id of the selected payer.
    # Optional if PayerNumber is passed else Mandatory
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number of the selected payer.
    # Optional if PayerId is passed else Mandatory
    # @return [String]
    attr_accessor :payer_number

    # Account Id of the customer.
    # Optional
    # @return [Integer]
    attr_accessor :account_id

    # Account Number of the customer.
    # Optional
    # @return [String]
    attr_accessor :account_number

    # Whether customer specific price lists and customer specific discount
    # values set on pump prices are to be returned or not.
    # @return [Integer]
    attr_accessor :customer_specific_list

    # Specifies the type of price lists to be included in the response.
    # Optional – default value is zero.
    # Allowed values:
    # 0 – All
    # 1 – National Only
    # 2 – International Only
    # @return [Integer]
    attr_accessor :price_list_type

    # Delivering Company ID
    # Optional.
    # @return [Integer]
    attr_accessor :del_co_id

    # Start date to fetch the price lists, discount values on pump prices and
    # VAT rates.
    # Mandatory 
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :from_date

    # End date to fetch the price lists, discount values on pump prices and VAT
    # rates.
    # Mandatory and greater than or equal to FromDate.
    # Maximum of 30 (configurable) day’s duration is allowed between ‘From’ and
    # ‘To’ dates.
    # Format: yyyyMMdd
    # @return [String]
    attr_accessor :to_date

    # True / False.
    # A flag to request the discount information set on pump prices for the
    # customer to be included in the response.
    # Optional
    # Default value: False
    # @return [TrueClass | FalseClass]
    attr_accessor :include_pump_price_discounts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['customer_specific_list'] = 'CustomerSpecificList'
      @_hash['price_list_type'] = 'PriceListType'
      @_hash['del_co_id'] = 'DelCoId'
      @_hash['from_date'] = 'FromDate'
      @_hash['to_date'] = 'ToDate'
      @_hash['include_pump_price_discounts'] = 'IncludePumpPriceDiscounts'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_id
        col_co_code
        payer_id
        payer_number
        account_id
        account_number
        customer_specific_list
        price_list_type
        del_co_id
        include_pump_price_discounts
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        col_co_code
        payer_id
        payer_number
        account_id
        account_number
        customer_specific_list
        price_list_type
        del_co_id
        from_date
        to_date
        include_pump_price_discounts
      ]
    end

    def initialize(from_date = nil, to_date = nil, col_co_id = SKIP,
                   col_co_code = SKIP, payer_id = SKIP, payer_number = SKIP,
                   account_id = SKIP, account_number = SKIP,
                   customer_specific_list = SKIP, price_list_type = SKIP,
                   del_co_id = SKIP, include_pump_price_discounts = SKIP)
      @col_co_id = col_co_id unless col_co_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @customer_specific_list = customer_specific_list unless customer_specific_list == SKIP
      @price_list_type = price_list_type unless price_list_type == SKIP
      @del_co_id = del_co_id unless del_co_id == SKIP
      @from_date = from_date
      @to_date = to_date
      unless include_pump_price_discounts == SKIP
        @include_pump_price_discounts =
          include_pump_price_discounts
      end
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      from_date = hash.key?('FromDate') ? hash['FromDate'] : nil
      to_date = hash.key?('ToDate') ? hash['ToDate'] : nil
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      customer_specific_list =
        hash.key?('CustomerSpecificList') ? hash['CustomerSpecificList'] : SKIP
      price_list_type =
        hash.key?('PriceListType') ? hash['PriceListType'] : SKIP
      del_co_id = hash.key?('DelCoId') ? hash['DelCoId'] : SKIP
      include_pump_price_discounts =
        hash.key?('IncludePumpPriceDiscounts') ? hash['IncludePumpPriceDiscounts'] : SKIP

      # Create object from extracted values.
      CustomerPriceListRequest.new(from_date,
                                   to_date,
                                   col_co_id,
                                   col_co_code,
                                   payer_id,
                                   payer_number,
                                   account_id,
                                   account_number,
                                   customer_specific_list,
                                   price_list_type,
                                   del_co_id,
                                   include_pump_price_discounts)
    end
  end
end
