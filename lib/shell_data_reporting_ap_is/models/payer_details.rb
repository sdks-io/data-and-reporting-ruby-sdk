# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PayerDetails Model.
  class PayerDetails < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting company id of the customer.
    # @return [Integer]
    attr_accessor :col_co_id

    # Collecting company code of the customer.
    # @return [Integer]
    attr_accessor :col_co_code

    # ISO code of the customer country.
    # @return [String]
    attr_accessor :country_code

    # Country of the customer
    # @return [String]
    attr_accessor :country

    # Payer id of the customer
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number of the customer
    # @return [String]
    attr_accessor :payer_number

    # Full Name of the Payer
    # @return [String]
    attr_accessor :payer_full_name

    # Short name of the payer
    # @return [String]
    attr_accessor :payer_short_name

    # Payer Group Id
    # @return [Integer]
    attr_accessor :payer_group_id

    # Invoiced amount and due for payment from the last SOA.
    # @return [Float]
    attr_accessor :amount_due

    # Invoiced amount and overdue for payment from the last SOA.
    # @return [Float]
    attr_accessor :amount_overdue

    # Invoiced amount and not overdue for payment from the last SOA.
    # @return [Float]
    attr_accessor :amount_not_overdue

    # Current outstanding balance amount from the last SOA.
    # @return [Float]
    attr_accessor :outstanding_balance

    # Unallocated payment.
    # When negative, indicates overdue amount from the last SOA.
    # @return [Float]
    attr_accessor :unallocated_payment

    # Currency ISO code
    # @return [String]
    attr_accessor :soa_currency_code

    # Currency symbol
    # @return [String]
    attr_accessor :soa_currency_symbol

    # Currency ISO code
    # @return [String]
    attr_accessor :soa_credit_limit_currency_code

    # Currency symbol
    # @return [String]
    attr_accessor :soa_credit_limit_currency_symbol

    # Currency ISO code
    # @return [String]
    attr_accessor :last_payment_currency_code

    # currency symbol
    # @return [String]
    attr_accessor :last_payment_currency_symbol

    # Latest payment amount for the requested payer.
    # @return [Float]
    attr_accessor :last_payment_amount

    # Latest payment date for the requested payer.
    # @return [String]
    attr_accessor :last_payment_date

    # Last payment amount in statement of account for the requested payer.
    # @return [Float]
    attr_accessor :soa_last_payment_amount

    # Last payment date in statement of account for the requested payer.
    # @return [String]
    attr_accessor :soa_last_payment_date

    # Currency ISO code
    # @return [String]
    attr_accessor :currency_code

    # Currency Symbol
    # @return [String]
    attr_accessor :currency_symbol

    # The 2-character ISO Code for the customer and card owning country.
    # @return [String]
    attr_accessor :col_co_country_code

    # Currency ISO code of the local country.
    # @return [String]
    attr_accessor :local_currency_code

    # Currency Symbol of the local country
    # @return [String]
    attr_accessor :local_currency_symbol

    # Exchange rate from OU base currency to local currency.
    # @return [Float]
    attr_accessor :local_currency_exchange_rate

    # Exchange rate from SoA credit limit currency to local currency
    # @return [Float]
    attr_accessor :local_currency_exchange_rate_so_a

    # Billing/Invoice frequency Identifier. Indicates the frequency in which the
    # transactions will be considered for invoicing in a bulling run
    # E.g.: 1, 2, 3, etc.
    # @return [Integer]
    attr_accessor :billing_frequency_type_id

    # Billing/Invoice frequency. The frequency in which the transactions will be
    # considered for invoicing in a bulling run
    # E.g.: 
    # 1    Daily (all days)
    # 2    Daily (only working days)
    # 3    Weekly - Monday
    # 4    Weekly – Tuesday
    # Etc.
    # @return [String]
    attr_accessor :billing_frequency_type

    # Frequency at which the billing process is triggered.
    # E.g.: 1, 2, 3, etc.
    # @return [Integer]
    attr_accessor :billing_run_frequency_type_id

    # Frequency at which the billing process is triggered.E.g.: 
    # 1    Daily (all days)
    # 2    Daily (only working days)
    # 3    Weekly - Monday
    # 4    Weekly – Tuesday
    # Etc.
    # @return [String]
    attr_accessor :billing_run_frequnecy

    # The first day in a month when the billing should run in case of multiple
    # billing runs configured with in a single month.
    # @return [Integer]
    attr_accessor :day1_run

    # The second day in a month when the billing should run in case of multiple
    # billing runs configured with in a single month.
    # @return [Integer]
    attr_accessor :day2_run

    # The third day in a month when the billing should run in case of multiple
    # billing runs configured with in a single month.
    # @return [Integer]
    attr_accessor :day3_run

    # The fourth day in a month when the billing should run in case of multiple
    # billing runs configured with in a single month.
    # @return [Integer]
    attr_accessor :day4_run

    # The fourth day in a month when the billing should run in case of multiple
    # billing runs configured with in a single month.
    # @return [Array[InvoiceDistributionMethod]]
    attr_accessor :invoice_distribution_methods

    # Invoice output type (Id-Description)
    # E.g.:
    # 1-PDF
    # 6-Print
    # @return [String]
    attr_accessor :output_type

    # The Account ID of the account on which the invoice is generated.
    # @return [Integer]
    attr_accessor :invoice_account_id

    # The Account Number of the account on which the invoice is generated.
    # @return [String]
    attr_accessor :invoice_account_number

    # The Account Short Name of the account on which the invoice is generated.
    # @return [String]
    attr_accessor :invoice_account_short_name

    # Best of Indicator of the Pricing customer/account configured.
    # @return [TrueClass | FalseClass]
    attr_accessor :best_of_indicator

    # Whether the account is international.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_international

    # Total number of accounts under the payer.
    # @return [Integer]
    attr_accessor :total_accounts

    # Total number of active accounts under the payer.
    # @return [Integer]
    attr_accessor :total_active_accounts

    # Total number of cards under the payer.
    # @return [Integer]
    attr_accessor :total_cards

    # Total number of active cards under the payer.
    # @return [Integer]
    attr_accessor :total_active_cards

    # Total number of cards under the payer that are permanently blocked
    # @return [Integer]
    attr_accessor :total_blocked_cards

    # Total number of cards under the payer that are cancelled
    # @return [Integer]
    attr_accessor :total_cancelled_cards

    # Total number of expired cards under the payer.
    # @return [Integer]
    attr_accessor :total_expired_cards

    # Total number of Renewal Pending cards under the payer.
    # @return [Integer]
    attr_accessor :total_renewal_pending_cards

    # Total number of cards under the payer with status as “Replaced
    # @return [Integer]
    attr_accessor :total_replaced_cards

    # Total number of cards under the payer that are temporarily blocked by
    # customer.
    # @return [Integer]
    attr_accessor :total_temporary_block_cards_by_customer

    # Total number of cards under the payer that are temporarily blocked by
    # Shell.
    # @return [Integer]
    attr_accessor :total_temporary_block_cards_by_shell

    # Total number of cards in “New” status
    # @return [Integer]
    attr_accessor :total_new_cards

    # Total number of cards in Fraud status
    # @return [Integer]
    attr_accessor :total_fraud_cards

    # Total number of accounts in Blocked status
    # @return [Integer]
    attr_accessor :total_blocked_accounts

    # Total number of accounts in Cancel status
    # @return [Integer]
    attr_accessor :total_cancelled_accounts

    # Trading name for the Payer
    # @return [String]
    attr_accessor :payer_trading_name

    # Payer current status id and description
    # e.g. (Id – Description):
    # 1-Active
    # 2-Requested from UTA 
    # 3-Awaiting embossing 
    # 4-Manufactured
    # 5-Awaiting despatch
    # @return [String]
    attr_accessor :status

    # Payer Billing Language id and description
    # @return [String]
    attr_accessor :billing_language

    # Legal entity id and description of the Payer
    # @return [String]
    attr_accessor :legal_entity

    # Payer/Company Established Date.
    # @return [String]
    attr_accessor :date_established

    # Payer/Company Classification id and description
    # @return [String]
    attr_accessor :customer_classification

    # Payer/Company Industry class id and description
    # @return [String]
    attr_accessor :industry_class

    # Marketing Segmentation id and description
    # @return [String]
    attr_accessor :marketing_segmentation

    # Payer/Company Line of Business Id and Description
    # @return [String]
    attr_accessor :line_of_business

    # Is Credit Limit printed on the statement of account: True/False
    # If True Credit Limit is printed on invoice/SOA
    # @return [TrueClass | FalseClass]
    attr_accessor :print_credit_limit

    # Card Group Type configured for Payer
    # e.g. (Id – Description):
    # 1-Horizontal only
    # 2-Vertical only
    # 3-Both
    # @return [String]
    attr_accessor :card_group_type

    # If set to True cards will be automatically renewed on expiry
    # @return [TrueClass | FalseClass]
    attr_accessor :renew_cards

    # If set to True then Self Select PIN is allowed for Payer
    # @return [TrueClass | FalseClass]
    attr_accessor :allow_select_pin

    # If set to True then Fleet PIN is applied for the cards directly under
    # payer
    # @return [TrueClass | FalseClass]
    attr_accessor :use_fleet_pin

    # Payer/Company VAT registration number.
    # @return [String]
    attr_accessor :vat_reg_number

    # Payer/Company VAT registration number 2.
    # @return [String]
    attr_accessor :vat_reg_number2

    # Payer/Company Registration number
    # @return [String]
    attr_accessor :registration_number

    # Payer/Company Registration number2
    # @return [String]
    attr_accessor :registration_number2

    # Sales Ledger Balance (Billed)
    # @return [Float]
    attr_accessor :sales_ledger_balance

    # Exposure after guarantee
    # @return [Float]
    attr_accessor :exposure

    # Total outstanding debt (including billed and unbilled sales and fee items)
    # @return [Float]
    attr_accessor :outstanding_debt

    # The available credit for the payer.
    # This is the credit limit minus the outstanding debt.
    # @return [Float]
    attr_accessor :available_credit

    # Band Id and Description of the Payer in Card Platform.
    # e.g. (Id – Description):
    # 1-Platinum
    # 2-Gold
    # 3-Silver
    # 4-Bronze
    # @return [String]
    attr_accessor :band

    # Global Customer reference id configured in card platform for Payer (Same
    # as Payer Group)
    # @return [String]
    attr_accessor :global_customer_reference_id

    # Payment Credit limit of Payer.
    # @return [Float]
    attr_accessor :credit_limit

    # Credit limit in Customer currency.
    # Note: For currency details refer the parameters CurrencyCode &
    # CurrencySymbol in the PayerDetail response.
    # @return [Float]
    attr_accessor :credit_limit_in_customer_currency

    # Customer Billing currency ISO code.
    # @return [String]
    attr_accessor :billing_currency_code

    # Customer Billing currency Symbol.
    # @return [String]
    attr_accessor :billing_currency_symbol

    # Payment method Id and Description as configured for Payer in Card Platform
    # @return [String]
    attr_accessor :payment_method

    # Payment terms Id and Description as configured for Payer in Card Platform
    # @return [String]
    attr_accessor :payment_terms

    # Temporary Credit limit increase value
    # @return [Float]
    attr_accessor :temporary_credit_limit_increase

    # Temporary Credit limit increase value
    # @return [Float]
    attr_accessor :temporary_credit_limit_increase_in_customer_currency

    # Temporary Credit limit expiry date
    # @return [String]
    attr_accessor :temporary_credit_limit_expiry_date

    # Temporary Credit limit expiry date
    # @return [Array[BankAccount]]
    attr_accessor :payer_bank_account

    # Temporary Credit limit expiry date
    # @return [Address]
    attr_accessor :card_delivery_address

    # Temporary Credit limit expiry date
    # @return [Address]
    attr_accessor :correspondance_address

    # Temporary Credit limit expiry date
    # @return [Address]
    attr_accessor :billing_address

    # True, if the payer is setup for volume-based pricing and is active on the
    # current date, else false.
    # This field is returned only when IncludeBonusParameters is set to True in
    # the request. Else set to null.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_active_vol_based_pricing

    # True, if the payer is setup for volume-based bonus and is active on the
    # current date, else false.
    # This field is returned only when IncludeBonusParameters is set to True in
    # the request. Else set to null.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_active_vol_based_bonus

    # True, if the payer is setup for volume-based association bonus and is
    # active on the current date, else false.
    # This field is returned only when IncludeBonusParameters is set to True in
    # the request. Else set to null.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_active_vol_based_association_bonus

    # True, if the payer is setup for volume-based association bonus and is
    # active on the current date, else false.
    # This field is returned only when IncludeBonusParameters is set to True in
    # the request. Else set to null.
    # @return [FinanceCurrency2]
    attr_accessor :finance_currency

    # Customer id in e-TM system
    # This field will have value only when ReturnTollsCustomerId is set to true
    # in the request else set to null or empty.
    # @return [String]
    attr_accessor :tolls_customer_id

    # String    Colco country type id in e-TM system
    # This field will have value only when ReturnTollsCustomerId is set to true
    # in the request else set to null or empty.
    # @return [String]
    attr_accessor :tolls_colco_country_type_id

    # String    Colco country type id in e-TM system
    # This field will have value only when ReturnTollsCustomerId is set to true
    # in the request else set to null or empty.
    # @return [Array[CustomerContract]]
    attr_accessor :contracts

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['country_code'] = 'CountryCode'
      @_hash['country'] = 'Country'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payer_full_name'] = 'PayerFullName'
      @_hash['payer_short_name'] = 'PayerShortName'
      @_hash['payer_group_id'] = 'PayerGroupId'
      @_hash['amount_due'] = 'AmountDue'
      @_hash['amount_overdue'] = 'AmountOverdue'
      @_hash['amount_not_overdue'] = 'AmountNotOverdue'
      @_hash['outstanding_balance'] = 'OutstandingBalance'
      @_hash['unallocated_payment'] = 'UnallocatedPayment'
      @_hash['soa_currency_code'] = 'SOACurrencyCode'
      @_hash['soa_currency_symbol'] = 'SOACurrencySymbol'
      @_hash['soa_credit_limit_currency_code'] = 'SOACreditLimitCurrencyCode'
      @_hash['soa_credit_limit_currency_symbol'] =
        'SOACreditLimitCurrencySymbol'
      @_hash['last_payment_currency_code'] = 'LastPaymentCurrencyCode'
      @_hash['last_payment_currency_symbol'] = 'LastPaymentCurrencySymbol'
      @_hash['last_payment_amount'] = 'LastPaymentAmount'
      @_hash['last_payment_date'] = 'LastPaymentDate'
      @_hash['soa_last_payment_amount'] = 'SOALastPaymentAmount'
      @_hash['soa_last_payment_date'] = 'SOALastPaymentDate'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['currency_symbol'] = 'CurrencySymbol'
      @_hash['col_co_country_code'] = 'ColCoCountryCode'
      @_hash['local_currency_code'] = 'LocalCurrencyCode'
      @_hash['local_currency_symbol'] = 'LocalCurrencySymbol'
      @_hash['local_currency_exchange_rate'] = 'LocalCurrencyExchangeRate'
      @_hash['local_currency_exchange_rate_so_a'] =
        'LocalCurrencyExchangeRate_SoA'
      @_hash['billing_frequency_type_id'] = 'BillingFrequencyTypeId'
      @_hash['billing_frequency_type'] = 'BillingFrequencyType'
      @_hash['billing_run_frequency_type_id'] = 'BillingRunFrequencyTypeId'
      @_hash['billing_run_frequnecy'] = 'BillingRunFrequnecy'
      @_hash['day1_run'] = 'Day1Run'
      @_hash['day2_run'] = 'Day2Run'
      @_hash['day3_run'] = 'Day3Run'
      @_hash['day4_run'] = 'Day4Run'
      @_hash['invoice_distribution_methods'] = 'InvoiceDistributionMethods'
      @_hash['output_type'] = 'OutputType'
      @_hash['invoice_account_id'] = 'InvoiceAccountID'
      @_hash['invoice_account_number'] = 'InvoiceAccountNumber'
      @_hash['invoice_account_short_name'] = 'InvoiceAccountShortName'
      @_hash['best_of_indicator'] = 'BestOfIndicator'
      @_hash['is_international'] = 'IsInternational'
      @_hash['total_accounts'] = 'TotalAccounts'
      @_hash['total_active_accounts'] = 'TotalActiveAccounts'
      @_hash['total_cards'] = 'TotalCards'
      @_hash['total_active_cards'] = 'TotalActiveCards'
      @_hash['total_blocked_cards'] = 'TotalBlockedCards'
      @_hash['total_cancelled_cards'] = 'TotalCancelledCards'
      @_hash['total_expired_cards'] = 'TotalExpiredCards'
      @_hash['total_renewal_pending_cards'] = 'TotalRenewalPendingCards'
      @_hash['total_replaced_cards'] = 'TotalReplacedCards'
      @_hash['total_temporary_block_cards_by_customer'] =
        'TotalTemporaryBlockCardsByCustomer'
      @_hash['total_temporary_block_cards_by_shell'] =
        'TotalTemporaryBlockCardsByShell'
      @_hash['total_new_cards'] = 'TotalNewCards'
      @_hash['total_fraud_cards'] = 'TotalFraudCards'
      @_hash['total_blocked_accounts'] = 'TotalBlockedAccounts'
      @_hash['total_cancelled_accounts'] = 'TotalCancelledAccounts'
      @_hash['payer_trading_name'] = 'PayerTradingName'
      @_hash['status'] = 'Status'
      @_hash['billing_language'] = 'BillingLanguage'
      @_hash['legal_entity'] = 'LegalEntity'
      @_hash['date_established'] = 'DateEstablished'
      @_hash['customer_classification'] = 'CustomerClassification'
      @_hash['industry_class'] = 'IndustryClass'
      @_hash['marketing_segmentation'] = 'MarketingSegmentation'
      @_hash['line_of_business'] = 'LineOfBusiness'
      @_hash['print_credit_limit'] = 'PrintCreditLimit'
      @_hash['card_group_type'] = 'CardGroupType'
      @_hash['renew_cards'] = 'RenewCards'
      @_hash['allow_select_pin'] = 'AllowSelectPIN'
      @_hash['use_fleet_pin'] = 'UseFleetPIN'
      @_hash['vat_reg_number'] = 'VATRegNumber'
      @_hash['vat_reg_number2'] = 'VATRegNumber2'
      @_hash['registration_number'] = 'RegistrationNumber'
      @_hash['registration_number2'] = 'RegistrationNumber2'
      @_hash['sales_ledger_balance'] = 'SalesLedgerBalance'
      @_hash['exposure'] = 'Exposure'
      @_hash['outstanding_debt'] = 'OutstandingDebt'
      @_hash['available_credit'] = 'AvailableCredit'
      @_hash['band'] = 'Band'
      @_hash['global_customer_reference_id'] = 'GlobalCustomerReferenceId'
      @_hash['credit_limit'] = 'CreditLimit'
      @_hash['credit_limit_in_customer_currency'] =
        'CreditLimitInCustomerCurrency'
      @_hash['billing_currency_code'] = 'BillingCurrencyCode'
      @_hash['billing_currency_symbol'] = 'BillingCurrencySymbol'
      @_hash['payment_method'] = 'PaymentMethod'
      @_hash['payment_terms'] = 'PaymentTerms'
      @_hash['temporary_credit_limit_increase'] =
        'TemporaryCreditLimitIncrease'
      @_hash['temporary_credit_limit_increase_in_customer_currency'] =
        'TemporaryCreditLimitIncreaseInCustomerCurrency'
      @_hash['temporary_credit_limit_expiry_date'] =
        'TemporaryCreditLimitExpiryDate'
      @_hash['payer_bank_account'] = 'PayerBankAccount'
      @_hash['card_delivery_address'] = 'CardDeliveryAddress'
      @_hash['correspondance_address'] = 'CorrespondanceAddress'
      @_hash['billing_address'] = 'BillingAddress'
      @_hash['has_active_vol_based_pricing'] = 'HasActiveVolBasedPricing'
      @_hash['has_active_vol_based_bonus'] = 'HasActiveVolBasedBonus'
      @_hash['has_active_vol_based_association_bonus'] =
        'HasActiveVolBasedAssociationBonus'
      @_hash['finance_currency'] = 'FinanceCurrency'
      @_hash['tolls_customer_id'] = 'TollsCustomerId'
      @_hash['tolls_colco_country_type_id'] = 'TollsColcoCountryTypeId'
      @_hash['contracts'] = 'Contracts'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_id
        col_co_code
        country_code
        country
        payer_id
        payer_number
        payer_full_name
        payer_short_name
        payer_group_id
        amount_due
        amount_overdue
        amount_not_overdue
        outstanding_balance
        unallocated_payment
        soa_currency_code
        soa_currency_symbol
        soa_credit_limit_currency_code
        soa_credit_limit_currency_symbol
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_amount
        last_payment_date
        soa_last_payment_amount
        soa_last_payment_date
        currency_code
        currency_symbol
        col_co_country_code
        local_currency_code
        local_currency_symbol
        local_currency_exchange_rate
        local_currency_exchange_rate_so_a
        billing_frequency_type_id
        billing_frequency_type
        billing_run_frequency_type_id
        billing_run_frequnecy
        day1_run
        day2_run
        day3_run
        day4_run
        invoice_distribution_methods
        output_type
        invoice_account_id
        invoice_account_number
        invoice_account_short_name
        best_of_indicator
        is_international
        total_accounts
        total_active_accounts
        total_cards
        total_active_cards
        total_blocked_cards
        total_cancelled_cards
        total_expired_cards
        total_renewal_pending_cards
        total_replaced_cards
        total_temporary_block_cards_by_customer
        total_temporary_block_cards_by_shell
        total_new_cards
        total_fraud_cards
        total_blocked_accounts
        total_cancelled_accounts
        payer_trading_name
        status
        billing_language
        legal_entity
        date_established
        customer_classification
        industry_class
        marketing_segmentation
        line_of_business
        print_credit_limit
        card_group_type
        renew_cards
        allow_select_pin
        use_fleet_pin
        vat_reg_number
        vat_reg_number2
        registration_number
        registration_number2
        sales_ledger_balance
        exposure
        outstanding_debt
        available_credit
        band
        global_customer_reference_id
        credit_limit
        credit_limit_in_customer_currency
        billing_currency_code
        billing_currency_symbol
        payment_method
        payment_terms
        temporary_credit_limit_increase
        temporary_credit_limit_increase_in_customer_currency
        temporary_credit_limit_expiry_date
        payer_bank_account
        card_delivery_address
        correspondance_address
        billing_address
        has_active_vol_based_pricing
        has_active_vol_based_bonus
        has_active_vol_based_association_bonus
        finance_currency
        tolls_customer_id
        tolls_colco_country_type_id
        contracts
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        col_co_code
        country_code
        country
        payer_id
        payer_number
        payer_full_name
        payer_short_name
        payer_group_id
        amount_due
        amount_overdue
        amount_not_overdue
        outstanding_balance
        unallocated_payment
        soa_currency_code
        soa_currency_symbol
        soa_credit_limit_currency_code
        soa_credit_limit_currency_symbol
        last_payment_currency_code
        last_payment_currency_symbol
        last_payment_amount
        last_payment_date
        soa_last_payment_amount
        soa_last_payment_date
        currency_code
        currency_symbol
        col_co_country_code
        local_currency_code
        local_currency_symbol
        local_currency_exchange_rate
        local_currency_exchange_rate_so_a
        billing_frequency_type_id
        billing_frequency_type
        billing_run_frequency_type_id
        billing_run_frequnecy
        day1_run
        day2_run
        day3_run
        day4_run
        output_type
        invoice_account_id
        invoice_account_number
        invoice_account_short_name
        total_accounts
        total_active_accounts
        total_cards
        total_active_cards
        total_blocked_cards
        total_cancelled_cards
        total_expired_cards
        total_renewal_pending_cards
        total_replaced_cards
        total_temporary_block_cards_by_customer
        total_temporary_block_cards_by_shell
        total_new_cards
        total_fraud_cards
        total_blocked_accounts
        total_cancelled_accounts
        payer_trading_name
        billing_language
        legal_entity
        date_established
        customer_classification
        industry_class
        marketing_segmentation
        line_of_business
        card_group_type
        vat_reg_number
        registration_number
        registration_number2
        sales_ledger_balance
        exposure
        outstanding_debt
        available_credit
        band
        global_customer_reference_id
        credit_limit
        credit_limit_in_customer_currency
        billing_currency_code
        billing_currency_symbol
        payment_method
        payment_terms
        temporary_credit_limit_increase
        temporary_credit_limit_increase_in_customer_currency
        temporary_credit_limit_expiry_date
        tolls_customer_id
        tolls_colco_country_type_id
      ]
    end

    def initialize(col_co_id = SKIP, col_co_code = SKIP, country_code = SKIP,
                   country = SKIP, payer_id = SKIP, payer_number = SKIP,
                   payer_full_name = SKIP, payer_short_name = SKIP,
                   payer_group_id = SKIP, amount_due = SKIP,
                   amount_overdue = SKIP, amount_not_overdue = SKIP,
                   outstanding_balance = SKIP, unallocated_payment = SKIP,
                   soa_currency_code = SKIP, soa_currency_symbol = SKIP,
                   soa_credit_limit_currency_code = SKIP,
                   soa_credit_limit_currency_symbol = SKIP,
                   last_payment_currency_code = SKIP,
                   last_payment_currency_symbol = SKIP,
                   last_payment_amount = SKIP, last_payment_date = SKIP,
                   soa_last_payment_amount = SKIP, soa_last_payment_date = SKIP,
                   currency_code = SKIP, currency_symbol = SKIP,
                   col_co_country_code = SKIP, local_currency_code = SKIP,
                   local_currency_symbol = SKIP,
                   local_currency_exchange_rate = SKIP,
                   local_currency_exchange_rate_so_a = SKIP,
                   billing_frequency_type_id = SKIP,
                   billing_frequency_type = SKIP,
                   billing_run_frequency_type_id = SKIP,
                   billing_run_frequnecy = SKIP, day1_run = SKIP,
                   day2_run = SKIP, day3_run = SKIP, day4_run = SKIP,
                   invoice_distribution_methods = SKIP, output_type = SKIP,
                   invoice_account_id = SKIP, invoice_account_number = SKIP,
                   invoice_account_short_name = SKIP, best_of_indicator = false,
                   is_international = false, total_accounts = SKIP,
                   total_active_accounts = SKIP, total_cards = SKIP,
                   total_active_cards = SKIP, total_blocked_cards = SKIP,
                   total_cancelled_cards = SKIP, total_expired_cards = SKIP,
                   total_renewal_pending_cards = SKIP,
                   total_replaced_cards = SKIP,
                   total_temporary_block_cards_by_customer = SKIP,
                   total_temporary_block_cards_by_shell = SKIP,
                   total_new_cards = SKIP, total_fraud_cards = SKIP,
                   total_blocked_accounts = SKIP,
                   total_cancelled_accounts = SKIP, payer_trading_name = SKIP,
                   status = SKIP, billing_language = SKIP, legal_entity = SKIP,
                   date_established = SKIP, customer_classification = SKIP,
                   industry_class = SKIP, marketing_segmentation = SKIP,
                   line_of_business = SKIP, print_credit_limit = false,
                   card_group_type = SKIP, renew_cards = false,
                   allow_select_pin = false, use_fleet_pin = SKIP,
                   vat_reg_number = SKIP, vat_reg_number2 = SKIP,
                   registration_number = SKIP, registration_number2 = SKIP,
                   sales_ledger_balance = SKIP, exposure = SKIP,
                   outstanding_debt = SKIP, available_credit = SKIP,
                   band = SKIP, global_customer_reference_id = SKIP,
                   credit_limit = SKIP,
                   credit_limit_in_customer_currency = SKIP,
                   billing_currency_code = SKIP, billing_currency_symbol = SKIP,
                   payment_method = SKIP, payment_terms = SKIP,
                   temporary_credit_limit_increase = SKIP,
                   temporary_credit_limit_increase_in_customer_currency = SKIP,
                   temporary_credit_limit_expiry_date = SKIP,
                   payer_bank_account = SKIP, card_delivery_address = SKIP,
                   correspondance_address = SKIP, billing_address = SKIP,
                   has_active_vol_based_pricing = SKIP,
                   has_active_vol_based_bonus = SKIP,
                   has_active_vol_based_association_bonus = SKIP,
                   finance_currency = SKIP, tolls_customer_id = SKIP,
                   tolls_colco_country_type_id = SKIP, contracts = SKIP)
      @col_co_id = col_co_id unless col_co_id == SKIP
      @col_co_code = col_co_code unless col_co_code == SKIP
      @country_code = country_code unless country_code == SKIP
      @country = country unless country == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payer_full_name = payer_full_name unless payer_full_name == SKIP
      @payer_short_name = payer_short_name unless payer_short_name == SKIP
      @payer_group_id = payer_group_id unless payer_group_id == SKIP
      @amount_due = amount_due unless amount_due == SKIP
      @amount_overdue = amount_overdue unless amount_overdue == SKIP
      @amount_not_overdue = amount_not_overdue unless amount_not_overdue == SKIP
      @outstanding_balance = outstanding_balance unless outstanding_balance == SKIP
      @unallocated_payment = unallocated_payment unless unallocated_payment == SKIP
      @soa_currency_code = soa_currency_code unless soa_currency_code == SKIP
      @soa_currency_symbol = soa_currency_symbol unless soa_currency_symbol == SKIP
      unless soa_credit_limit_currency_code == SKIP
        @soa_credit_limit_currency_code =
          soa_credit_limit_currency_code
      end
      unless soa_credit_limit_currency_symbol == SKIP
        @soa_credit_limit_currency_symbol =
          soa_credit_limit_currency_symbol
      end
      unless last_payment_currency_code == SKIP
        @last_payment_currency_code =
          last_payment_currency_code
      end
      unless last_payment_currency_symbol == SKIP
        @last_payment_currency_symbol =
          last_payment_currency_symbol
      end
      @last_payment_amount = last_payment_amount unless last_payment_amount == SKIP
      @last_payment_date = last_payment_date unless last_payment_date == SKIP
      @soa_last_payment_amount = soa_last_payment_amount unless soa_last_payment_amount == SKIP
      @soa_last_payment_date = soa_last_payment_date unless soa_last_payment_date == SKIP
      @currency_code = currency_code unless currency_code == SKIP
      @currency_symbol = currency_symbol unless currency_symbol == SKIP
      @col_co_country_code = col_co_country_code unless col_co_country_code == SKIP
      @local_currency_code = local_currency_code unless local_currency_code == SKIP
      @local_currency_symbol = local_currency_symbol unless local_currency_symbol == SKIP
      unless local_currency_exchange_rate == SKIP
        @local_currency_exchange_rate =
          local_currency_exchange_rate
      end
      unless local_currency_exchange_rate_so_a == SKIP
        @local_currency_exchange_rate_so_a =
          local_currency_exchange_rate_so_a
      end
      unless billing_frequency_type_id == SKIP
        @billing_frequency_type_id =
          billing_frequency_type_id
      end
      @billing_frequency_type = billing_frequency_type unless billing_frequency_type == SKIP
      unless billing_run_frequency_type_id == SKIP
        @billing_run_frequency_type_id =
          billing_run_frequency_type_id
      end
      @billing_run_frequnecy = billing_run_frequnecy unless billing_run_frequnecy == SKIP
      @day1_run = day1_run unless day1_run == SKIP
      @day2_run = day2_run unless day2_run == SKIP
      @day3_run = day3_run unless day3_run == SKIP
      @day4_run = day4_run unless day4_run == SKIP
      unless invoice_distribution_methods == SKIP
        @invoice_distribution_methods =
          invoice_distribution_methods
      end
      @output_type = output_type unless output_type == SKIP
      @invoice_account_id = invoice_account_id unless invoice_account_id == SKIP
      @invoice_account_number = invoice_account_number unless invoice_account_number == SKIP
      unless invoice_account_short_name == SKIP
        @invoice_account_short_name =
          invoice_account_short_name
      end
      @best_of_indicator = best_of_indicator unless best_of_indicator == SKIP
      @is_international = is_international unless is_international == SKIP
      @total_accounts = total_accounts unless total_accounts == SKIP
      @total_active_accounts = total_active_accounts unless total_active_accounts == SKIP
      @total_cards = total_cards unless total_cards == SKIP
      @total_active_cards = total_active_cards unless total_active_cards == SKIP
      @total_blocked_cards = total_blocked_cards unless total_blocked_cards == SKIP
      @total_cancelled_cards = total_cancelled_cards unless total_cancelled_cards == SKIP
      @total_expired_cards = total_expired_cards unless total_expired_cards == SKIP
      unless total_renewal_pending_cards == SKIP
        @total_renewal_pending_cards =
          total_renewal_pending_cards
      end
      @total_replaced_cards = total_replaced_cards unless total_replaced_cards == SKIP
      unless total_temporary_block_cards_by_customer == SKIP
        @total_temporary_block_cards_by_customer =
          total_temporary_block_cards_by_customer
      end
      unless total_temporary_block_cards_by_shell == SKIP
        @total_temporary_block_cards_by_shell =
          total_temporary_block_cards_by_shell
      end
      @total_new_cards = total_new_cards unless total_new_cards == SKIP
      @total_fraud_cards = total_fraud_cards unless total_fraud_cards == SKIP
      @total_blocked_accounts = total_blocked_accounts unless total_blocked_accounts == SKIP
      @total_cancelled_accounts = total_cancelled_accounts unless total_cancelled_accounts == SKIP
      @payer_trading_name = payer_trading_name unless payer_trading_name == SKIP
      @status = status unless status == SKIP
      @billing_language = billing_language unless billing_language == SKIP
      @legal_entity = legal_entity unless legal_entity == SKIP
      @date_established = date_established unless date_established == SKIP
      @customer_classification = customer_classification unless customer_classification == SKIP
      @industry_class = industry_class unless industry_class == SKIP
      @marketing_segmentation = marketing_segmentation unless marketing_segmentation == SKIP
      @line_of_business = line_of_business unless line_of_business == SKIP
      @print_credit_limit = print_credit_limit unless print_credit_limit == SKIP
      @card_group_type = card_group_type unless card_group_type == SKIP
      @renew_cards = renew_cards unless renew_cards == SKIP
      @allow_select_pin = allow_select_pin unless allow_select_pin == SKIP
      @use_fleet_pin = use_fleet_pin unless use_fleet_pin == SKIP
      @vat_reg_number = vat_reg_number unless vat_reg_number == SKIP
      @vat_reg_number2 = vat_reg_number2 unless vat_reg_number2 == SKIP
      @registration_number = registration_number unless registration_number == SKIP
      @registration_number2 = registration_number2 unless registration_number2 == SKIP
      @sales_ledger_balance = sales_ledger_balance unless sales_ledger_balance == SKIP
      @exposure = exposure unless exposure == SKIP
      @outstanding_debt = outstanding_debt unless outstanding_debt == SKIP
      @available_credit = available_credit unless available_credit == SKIP
      @band = band unless band == SKIP
      unless global_customer_reference_id == SKIP
        @global_customer_reference_id =
          global_customer_reference_id
      end
      @credit_limit = credit_limit unless credit_limit == SKIP
      unless credit_limit_in_customer_currency == SKIP
        @credit_limit_in_customer_currency =
          credit_limit_in_customer_currency
      end
      @billing_currency_code = billing_currency_code unless billing_currency_code == SKIP
      @billing_currency_symbol = billing_currency_symbol unless billing_currency_symbol == SKIP
      @payment_method = payment_method unless payment_method == SKIP
      @payment_terms = payment_terms unless payment_terms == SKIP
      unless temporary_credit_limit_increase == SKIP
        @temporary_credit_limit_increase =
          temporary_credit_limit_increase
      end
      unless temporary_credit_limit_increase_in_customer_currency == SKIP
        @temporary_credit_limit_increase_in_customer_currency =
          temporary_credit_limit_increase_in_customer_currency
      end
      unless temporary_credit_limit_expiry_date == SKIP
        @temporary_credit_limit_expiry_date =
          temporary_credit_limit_expiry_date
      end
      @payer_bank_account = payer_bank_account unless payer_bank_account == SKIP
      @card_delivery_address = card_delivery_address unless card_delivery_address == SKIP
      @correspondance_address = correspondance_address unless correspondance_address == SKIP
      @billing_address = billing_address unless billing_address == SKIP
      unless has_active_vol_based_pricing == SKIP
        @has_active_vol_based_pricing =
          has_active_vol_based_pricing
      end
      unless has_active_vol_based_bonus == SKIP
        @has_active_vol_based_bonus =
          has_active_vol_based_bonus
      end
      unless has_active_vol_based_association_bonus == SKIP
        @has_active_vol_based_association_bonus =
          has_active_vol_based_association_bonus
      end
      @finance_currency = finance_currency unless finance_currency == SKIP
      @tolls_customer_id = tolls_customer_id unless tolls_customer_id == SKIP
      unless tolls_colco_country_type_id == SKIP
        @tolls_colco_country_type_id =
          tolls_colco_country_type_id
      end
      @contracts = contracts unless contracts == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      country_code = hash.key?('CountryCode') ? hash['CountryCode'] : SKIP
      country = hash.key?('Country') ? hash['Country'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payer_full_name =
        hash.key?('PayerFullName') ? hash['PayerFullName'] : SKIP
      payer_short_name =
        hash.key?('PayerShortName') ? hash['PayerShortName'] : SKIP
      payer_group_id = hash.key?('PayerGroupId') ? hash['PayerGroupId'] : SKIP
      amount_due = hash.key?('AmountDue') ? hash['AmountDue'] : SKIP
      amount_overdue = hash.key?('AmountOverdue') ? hash['AmountOverdue'] : SKIP
      amount_not_overdue =
        hash.key?('AmountNotOverdue') ? hash['AmountNotOverdue'] : SKIP
      outstanding_balance =
        hash.key?('OutstandingBalance') ? hash['OutstandingBalance'] : SKIP
      unallocated_payment =
        hash.key?('UnallocatedPayment') ? hash['UnallocatedPayment'] : SKIP
      soa_currency_code =
        hash.key?('SOACurrencyCode') ? hash['SOACurrencyCode'] : SKIP
      soa_currency_symbol =
        hash.key?('SOACurrencySymbol') ? hash['SOACurrencySymbol'] : SKIP
      soa_credit_limit_currency_code =
        hash.key?('SOACreditLimitCurrencyCode') ? hash['SOACreditLimitCurrencyCode'] : SKIP
      soa_credit_limit_currency_symbol =
        hash.key?('SOACreditLimitCurrencySymbol') ? hash['SOACreditLimitCurrencySymbol'] : SKIP
      last_payment_currency_code =
        hash.key?('LastPaymentCurrencyCode') ? hash['LastPaymentCurrencyCode'] : SKIP
      last_payment_currency_symbol =
        hash.key?('LastPaymentCurrencySymbol') ? hash['LastPaymentCurrencySymbol'] : SKIP
      last_payment_amount =
        hash.key?('LastPaymentAmount') ? hash['LastPaymentAmount'] : SKIP
      last_payment_date =
        hash.key?('LastPaymentDate') ? hash['LastPaymentDate'] : SKIP
      soa_last_payment_amount =
        hash.key?('SOALastPaymentAmount') ? hash['SOALastPaymentAmount'] : SKIP
      soa_last_payment_date =
        hash.key?('SOALastPaymentDate') ? hash['SOALastPaymentDate'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      currency_symbol =
        hash.key?('CurrencySymbol') ? hash['CurrencySymbol'] : SKIP
      col_co_country_code =
        hash.key?('ColCoCountryCode') ? hash['ColCoCountryCode'] : SKIP
      local_currency_code =
        hash.key?('LocalCurrencyCode') ? hash['LocalCurrencyCode'] : SKIP
      local_currency_symbol =
        hash.key?('LocalCurrencySymbol') ? hash['LocalCurrencySymbol'] : SKIP
      local_currency_exchange_rate =
        hash.key?('LocalCurrencyExchangeRate') ? hash['LocalCurrencyExchangeRate'] : SKIP
      local_currency_exchange_rate_so_a =
        hash.key?('LocalCurrencyExchangeRate_SoA') ? hash['LocalCurrencyExchangeRate_SoA'] : SKIP
      billing_frequency_type_id =
        hash.key?('BillingFrequencyTypeId') ? hash['BillingFrequencyTypeId'] : SKIP
      billing_frequency_type =
        hash.key?('BillingFrequencyType') ? hash['BillingFrequencyType'] : SKIP
      billing_run_frequency_type_id =
        hash.key?('BillingRunFrequencyTypeId') ? hash['BillingRunFrequencyTypeId'] : SKIP
      billing_run_frequnecy =
        hash.key?('BillingRunFrequnecy') ? hash['BillingRunFrequnecy'] : SKIP
      day1_run = hash.key?('Day1Run') ? hash['Day1Run'] : SKIP
      day2_run = hash.key?('Day2Run') ? hash['Day2Run'] : SKIP
      day3_run = hash.key?('Day3Run') ? hash['Day3Run'] : SKIP
      day4_run = hash.key?('Day4Run') ? hash['Day4Run'] : SKIP
      # Parameter is an array, so we need to iterate through it
      invoice_distribution_methods = nil
      unless hash['InvoiceDistributionMethods'].nil?
        invoice_distribution_methods = []
        hash['InvoiceDistributionMethods'].each do |structure|
          invoice_distribution_methods << (InvoiceDistributionMethod.from_hash(structure) if structure)
        end
      end

      invoice_distribution_methods = SKIP unless hash.key?('InvoiceDistributionMethods')
      output_type = hash.key?('OutputType') ? hash['OutputType'] : SKIP
      invoice_account_id =
        hash.key?('InvoiceAccountID') ? hash['InvoiceAccountID'] : SKIP
      invoice_account_number =
        hash.key?('InvoiceAccountNumber') ? hash['InvoiceAccountNumber'] : SKIP
      invoice_account_short_name =
        hash.key?('InvoiceAccountShortName') ? hash['InvoiceAccountShortName'] : SKIP
      best_of_indicator = hash['BestOfIndicator'] ||= false
      is_international = hash['IsInternational'] ||= false
      total_accounts = hash.key?('TotalAccounts') ? hash['TotalAccounts'] : SKIP
      total_active_accounts =
        hash.key?('TotalActiveAccounts') ? hash['TotalActiveAccounts'] : SKIP
      total_cards = hash.key?('TotalCards') ? hash['TotalCards'] : SKIP
      total_active_cards =
        hash.key?('TotalActiveCards') ? hash['TotalActiveCards'] : SKIP
      total_blocked_cards =
        hash.key?('TotalBlockedCards') ? hash['TotalBlockedCards'] : SKIP
      total_cancelled_cards =
        hash.key?('TotalCancelledCards') ? hash['TotalCancelledCards'] : SKIP
      total_expired_cards =
        hash.key?('TotalExpiredCards') ? hash['TotalExpiredCards'] : SKIP
      total_renewal_pending_cards =
        hash.key?('TotalRenewalPendingCards') ? hash['TotalRenewalPendingCards'] : SKIP
      total_replaced_cards =
        hash.key?('TotalReplacedCards') ? hash['TotalReplacedCards'] : SKIP
      total_temporary_block_cards_by_customer =
        hash.key?('TotalTemporaryBlockCardsByCustomer') ? hash['TotalTemporaryBlockCardsByCustomer'] : SKIP
      total_temporary_block_cards_by_shell =
        hash.key?('TotalTemporaryBlockCardsByShell') ? hash['TotalTemporaryBlockCardsByShell'] : SKIP
      total_new_cards =
        hash.key?('TotalNewCards') ? hash['TotalNewCards'] : SKIP
      total_fraud_cards =
        hash.key?('TotalFraudCards') ? hash['TotalFraudCards'] : SKIP
      total_blocked_accounts =
        hash.key?('TotalBlockedAccounts') ? hash['TotalBlockedAccounts'] : SKIP
      total_cancelled_accounts =
        hash.key?('TotalCancelledAccounts') ? hash['TotalCancelledAccounts'] : SKIP
      payer_trading_name =
        hash.key?('PayerTradingName') ? hash['PayerTradingName'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      billing_language =
        hash.key?('BillingLanguage') ? hash['BillingLanguage'] : SKIP
      legal_entity = hash.key?('LegalEntity') ? hash['LegalEntity'] : SKIP
      date_established =
        hash.key?('DateEstablished') ? hash['DateEstablished'] : SKIP
      customer_classification =
        hash.key?('CustomerClassification') ? hash['CustomerClassification'] : SKIP
      industry_class = hash.key?('IndustryClass') ? hash['IndustryClass'] : SKIP
      marketing_segmentation =
        hash.key?('MarketingSegmentation') ? hash['MarketingSegmentation'] : SKIP
      line_of_business =
        hash.key?('LineOfBusiness') ? hash['LineOfBusiness'] : SKIP
      print_credit_limit = hash['PrintCreditLimit'] ||= false
      card_group_type =
        hash.key?('CardGroupType') ? hash['CardGroupType'] : SKIP
      renew_cards = hash['RenewCards'] ||= false
      allow_select_pin = hash['AllowSelectPIN'] ||= false
      use_fleet_pin = hash.key?('UseFleetPIN') ? hash['UseFleetPIN'] : SKIP
      vat_reg_number = hash.key?('VATRegNumber') ? hash['VATRegNumber'] : SKIP
      vat_reg_number2 =
        hash.key?('VATRegNumber2') ? hash['VATRegNumber2'] : SKIP
      registration_number =
        hash.key?('RegistrationNumber') ? hash['RegistrationNumber'] : SKIP
      registration_number2 =
        hash.key?('RegistrationNumber2') ? hash['RegistrationNumber2'] : SKIP
      sales_ledger_balance =
        hash.key?('SalesLedgerBalance') ? hash['SalesLedgerBalance'] : SKIP
      exposure = hash.key?('Exposure') ? hash['Exposure'] : SKIP
      outstanding_debt =
        hash.key?('OutstandingDebt') ? hash['OutstandingDebt'] : SKIP
      available_credit =
        hash.key?('AvailableCredit') ? hash['AvailableCredit'] : SKIP
      band = hash.key?('Band') ? hash['Band'] : SKIP
      global_customer_reference_id =
        hash.key?('GlobalCustomerReferenceId') ? hash['GlobalCustomerReferenceId'] : SKIP
      credit_limit = hash.key?('CreditLimit') ? hash['CreditLimit'] : SKIP
      credit_limit_in_customer_currency =
        hash.key?('CreditLimitInCustomerCurrency') ? hash['CreditLimitInCustomerCurrency'] : SKIP
      billing_currency_code =
        hash.key?('BillingCurrencyCode') ? hash['BillingCurrencyCode'] : SKIP
      billing_currency_symbol =
        hash.key?('BillingCurrencySymbol') ? hash['BillingCurrencySymbol'] : SKIP
      payment_method = hash.key?('PaymentMethod') ? hash['PaymentMethod'] : SKIP
      payment_terms = hash.key?('PaymentTerms') ? hash['PaymentTerms'] : SKIP
      temporary_credit_limit_increase =
        hash.key?('TemporaryCreditLimitIncrease') ? hash['TemporaryCreditLimitIncrease'] : SKIP
      temporary_credit_limit_increase_in_customer_currency =
        hash.key?('TemporaryCreditLimitIncreaseInCustomerCurrency') ? hash['TemporaryCreditLimitIncreaseInCustomerCurrency'] : SKIP
      temporary_credit_limit_expiry_date =
        hash.key?('TemporaryCreditLimitExpiryDate') ? hash['TemporaryCreditLimitExpiryDate'] : SKIP
      # Parameter is an array, so we need to iterate through it
      payer_bank_account = nil
      unless hash['PayerBankAccount'].nil?
        payer_bank_account = []
        hash['PayerBankAccount'].each do |structure|
          payer_bank_account << (BankAccount.from_hash(structure) if structure)
        end
      end

      payer_bank_account = SKIP unless hash.key?('PayerBankAccount')
      card_delivery_address = Address.from_hash(hash['CardDeliveryAddress']) if
        hash['CardDeliveryAddress']
      correspondance_address = Address.from_hash(hash['CorrespondanceAddress']) if
        hash['CorrespondanceAddress']
      billing_address = Address.from_hash(hash['BillingAddress']) if hash['BillingAddress']
      has_active_vol_based_pricing =
        hash.key?('HasActiveVolBasedPricing') ? hash['HasActiveVolBasedPricing'] : SKIP
      has_active_vol_based_bonus =
        hash.key?('HasActiveVolBasedBonus') ? hash['HasActiveVolBasedBonus'] : SKIP
      has_active_vol_based_association_bonus =
        hash.key?('HasActiveVolBasedAssociationBonus') ? hash['HasActiveVolBasedAssociationBonus'] : SKIP
      finance_currency = FinanceCurrency2.from_hash(hash['FinanceCurrency']) if
        hash['FinanceCurrency']
      tolls_customer_id =
        hash.key?('TollsCustomerId') ? hash['TollsCustomerId'] : SKIP
      tolls_colco_country_type_id =
        hash.key?('TollsColcoCountryTypeId') ? hash['TollsColcoCountryTypeId'] : SKIP
      # Parameter is an array, so we need to iterate through it
      contracts = nil
      unless hash['Contracts'].nil?
        contracts = []
        hash['Contracts'].each do |structure|
          contracts << (CustomerContract.from_hash(structure) if structure)
        end
      end

      contracts = SKIP unless hash.key?('Contracts')

      # Create object from extracted values.
      PayerDetails.new(col_co_id,
                       col_co_code,
                       country_code,
                       country,
                       payer_id,
                       payer_number,
                       payer_full_name,
                       payer_short_name,
                       payer_group_id,
                       amount_due,
                       amount_overdue,
                       amount_not_overdue,
                       outstanding_balance,
                       unallocated_payment,
                       soa_currency_code,
                       soa_currency_symbol,
                       soa_credit_limit_currency_code,
                       soa_credit_limit_currency_symbol,
                       last_payment_currency_code,
                       last_payment_currency_symbol,
                       last_payment_amount,
                       last_payment_date,
                       soa_last_payment_amount,
                       soa_last_payment_date,
                       currency_code,
                       currency_symbol,
                       col_co_country_code,
                       local_currency_code,
                       local_currency_symbol,
                       local_currency_exchange_rate,
                       local_currency_exchange_rate_so_a,
                       billing_frequency_type_id,
                       billing_frequency_type,
                       billing_run_frequency_type_id,
                       billing_run_frequnecy,
                       day1_run,
                       day2_run,
                       day3_run,
                       day4_run,
                       invoice_distribution_methods,
                       output_type,
                       invoice_account_id,
                       invoice_account_number,
                       invoice_account_short_name,
                       best_of_indicator,
                       is_international,
                       total_accounts,
                       total_active_accounts,
                       total_cards,
                       total_active_cards,
                       total_blocked_cards,
                       total_cancelled_cards,
                       total_expired_cards,
                       total_renewal_pending_cards,
                       total_replaced_cards,
                       total_temporary_block_cards_by_customer,
                       total_temporary_block_cards_by_shell,
                       total_new_cards,
                       total_fraud_cards,
                       total_blocked_accounts,
                       total_cancelled_accounts,
                       payer_trading_name,
                       status,
                       billing_language,
                       legal_entity,
                       date_established,
                       customer_classification,
                       industry_class,
                       marketing_segmentation,
                       line_of_business,
                       print_credit_limit,
                       card_group_type,
                       renew_cards,
                       allow_select_pin,
                       use_fleet_pin,
                       vat_reg_number,
                       vat_reg_number2,
                       registration_number,
                       registration_number2,
                       sales_ledger_balance,
                       exposure,
                       outstanding_debt,
                       available_credit,
                       band,
                       global_customer_reference_id,
                       credit_limit,
                       credit_limit_in_customer_currency,
                       billing_currency_code,
                       billing_currency_symbol,
                       payment_method,
                       payment_terms,
                       temporary_credit_limit_increase,
                       temporary_credit_limit_increase_in_customer_currency,
                       temporary_credit_limit_expiry_date,
                       payer_bank_account,
                       card_delivery_address,
                       correspondance_address,
                       billing_address,
                       has_active_vol_based_pricing,
                       has_active_vol_based_bonus,
                       has_active_vol_based_association_bonus,
                       finance_currency,
                       tolls_customer_id,
                       tolls_colco_country_type_id,
                       contracts)
    end
  end
end
