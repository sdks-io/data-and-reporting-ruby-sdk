# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FuelConsumptionData Model.
  class FuelConsumptionData < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account Name
    # @return [String]
    attr_accessor :account_name

    # Account Number
    # @return [String]
    attr_accessor :account_number

    # Payment customer Name
    # @return [String]
    attr_accessor :payer_name

    # Payment customer number
    # @return [String]
    attr_accessor :payer_number

    # Card PAN
    # @return [String]
    attr_accessor :card_number

    # Card group ID
    # @return [Integer]
    attr_accessor :card_group_id

    # Card group name
    # @return [String]
    attr_accessor :card_group_name

    # Driver name
    # @return [String]
    attr_accessor :driver_name

    # Vehicle registration number
    # @return [String]
    attr_accessor :license_number

    # First transaction odometer reading
    # @return [Float]
    attr_accessor :initial_odometer

    # Last transaction odometer reading
    # @return [Float]
    attr_accessor :last_odometer

    # Distance in  KM or Miles based on Customer and Colco Settings
    # @return [Float]
    attr_accessor :distance

    # Total Fuel Consumption.
    # @return [Float]
    attr_accessor :fuel_consumption

    # Net Fuel Amount
    # @return [Float]
    attr_accessor :fuel_net_amount

    # Total Discount
    # @return [Float]
    attr_accessor :discount

    # Fuel Tax Amount
    # @return [Float]
    attr_accessor :fuel_tax

    # Total Fuel Volume in Litres
    # @return [Float]
    attr_accessor :fuel_volume

    # Gross Nonfuel Amount
    # @return [Float]
    attr_accessor :gross_non_fuel_expenses

    # Total Co2 produced
    # @return [Float]
    attr_accessor :co2_produced

    # Total Transaction Count
    # @return [Float]
    attr_accessor :transaction_count

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'AccountName'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['payer_name'] = 'PayerName'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['card_number'] = 'CardNumber'
      @_hash['card_group_id'] = 'CardGroupId'
      @_hash['card_group_name'] = 'CardGroupName'
      @_hash['driver_name'] = 'DriverName'
      @_hash['license_number'] = 'LicenseNumber'
      @_hash['initial_odometer'] = 'InitialOdometer'
      @_hash['last_odometer'] = 'LastOdometer'
      @_hash['distance'] = 'Distance'
      @_hash['fuel_consumption'] = 'FuelConsumption'
      @_hash['fuel_net_amount'] = 'FuelNetAmount'
      @_hash['discount'] = 'Discount'
      @_hash['fuel_tax'] = 'FuelTax'
      @_hash['fuel_volume'] = 'FuelVolume'
      @_hash['gross_non_fuel_expenses'] = 'GrossNonFuelExpenses'
      @_hash['co2_produced'] = 'CO2Produced'
      @_hash['transaction_count'] = 'TransactionCount'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        account_number
        payer_name
        payer_number
        card_number
        card_group_id
        card_group_name
        driver_name
        license_number
        initial_odometer
        last_odometer
        distance
        fuel_consumption
        fuel_net_amount
        discount
        fuel_tax
        fuel_volume
        gross_non_fuel_expenses
        co2_produced
        transaction_count
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        account_name
        account_number
        payer_name
        payer_number
        card_number
        card_group_id
        card_group_name
        driver_name
        license_number
        initial_odometer
        last_odometer
        distance
        fuel_consumption
        fuel_net_amount
        discount
        fuel_tax
        fuel_volume
        gross_non_fuel_expenses
        co2_produced
        transaction_count
      ]
    end

    def initialize(account_name = SKIP,
                   account_number = SKIP,
                   payer_name = SKIP,
                   payer_number = SKIP,
                   card_number = SKIP,
                   card_group_id = SKIP,
                   card_group_name = SKIP,
                   driver_name = SKIP,
                   license_number = SKIP,
                   initial_odometer = SKIP,
                   last_odometer = SKIP,
                   distance = SKIP,
                   fuel_consumption = SKIP,
                   fuel_net_amount = SKIP,
                   discount = SKIP,
                   fuel_tax = SKIP,
                   fuel_volume = SKIP,
                   gross_non_fuel_expenses = SKIP,
                   co2_produced = SKIP,
                   transaction_count = SKIP)
      @account_name = account_name unless account_name == SKIP
      @account_number = account_number unless account_number == SKIP
      @payer_name = payer_name unless payer_name == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @card_number = card_number unless card_number == SKIP
      @card_group_id = card_group_id unless card_group_id == SKIP
      @card_group_name = card_group_name unless card_group_name == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      @license_number = license_number unless license_number == SKIP
      @initial_odometer = initial_odometer unless initial_odometer == SKIP
      @last_odometer = last_odometer unless last_odometer == SKIP
      @distance = distance unless distance == SKIP
      @fuel_consumption = fuel_consumption unless fuel_consumption == SKIP
      @fuel_net_amount = fuel_net_amount unless fuel_net_amount == SKIP
      @discount = discount unless discount == SKIP
      @fuel_tax = fuel_tax unless fuel_tax == SKIP
      @fuel_volume = fuel_volume unless fuel_volume == SKIP
      @gross_non_fuel_expenses = gross_non_fuel_expenses unless gross_non_fuel_expenses == SKIP
      @co2_produced = co2_produced unless co2_produced == SKIP
      @transaction_count = transaction_count unless transaction_count == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('AccountName') ? hash['AccountName'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      payer_name = hash.key?('PayerName') ? hash['PayerName'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      card_number = hash.key?('CardNumber') ? hash['CardNumber'] : SKIP
      card_group_id = hash.key?('CardGroupId') ? hash['CardGroupId'] : SKIP
      card_group_name =
        hash.key?('CardGroupName') ? hash['CardGroupName'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      license_number = hash.key?('LicenseNumber') ? hash['LicenseNumber'] : SKIP
      initial_odometer =
        hash.key?('InitialOdometer') ? hash['InitialOdometer'] : SKIP
      last_odometer = hash.key?('LastOdometer') ? hash['LastOdometer'] : SKIP
      distance = hash.key?('Distance') ? hash['Distance'] : SKIP
      fuel_consumption =
        hash.key?('FuelConsumption') ? hash['FuelConsumption'] : SKIP
      fuel_net_amount =
        hash.key?('FuelNetAmount') ? hash['FuelNetAmount'] : SKIP
      discount = hash.key?('Discount') ? hash['Discount'] : SKIP
      fuel_tax = hash.key?('FuelTax') ? hash['FuelTax'] : SKIP
      fuel_volume = hash.key?('FuelVolume') ? hash['FuelVolume'] : SKIP
      gross_non_fuel_expenses =
        hash.key?('GrossNonFuelExpenses') ? hash['GrossNonFuelExpenses'] : SKIP
      co2_produced = hash.key?('CO2Produced') ? hash['CO2Produced'] : SKIP
      transaction_count =
        hash.key?('TransactionCount') ? hash['TransactionCount'] : SKIP

      # Create object from extracted values.
      FuelConsumptionData.new(account_name,
                              account_number,
                              payer_name,
                              payer_number,
                              card_number,
                              card_group_id,
                              card_group_name,
                              driver_name,
                              license_number,
                              initial_odometer,
                              last_odometer,
                              distance,
                              fuel_consumption,
                              fuel_net_amount,
                              discount,
                              fuel_tax,
                              fuel_volume,
                              gross_non_fuel_expenses,
                              co2_produced,
                              transaction_count)
    end
  end
end
