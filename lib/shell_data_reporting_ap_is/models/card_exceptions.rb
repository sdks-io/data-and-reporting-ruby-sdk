# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # CardExceptions Model.
  class CardExceptions < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account Id
    # @return [Integer]
    attr_accessor :account_id

    # Account Number
    # @return [String]
    attr_accessor :account_number

    # Account Short Name
    # @return [String]
    attr_accessor :account_short_name

    # Unique Card Id
    # @return [Integer]
    attr_accessor :card_id

    # ISO currency code
    # @return [String]
    attr_accessor :currency_code

    # Currency symbol of the Invoice Currency Code
    # @return [String]
    attr_accessor :currency_symbol

    # Summary Day: Populated when the Period is passed as ‘Day’.
    # @return [Integer]
    attr_accessor :day

    # Driver name
    # @return [String]
    attr_accessor :driver_name

    # Summary Month: Populated when the Value of Period is Passed as ‘Month’.
    # @return [Integer]
    attr_accessor :month

    # Card PAN
    # @return [String]
    attr_accessor :pan

    # Payment customer id of the customer
    # @return [Integer]
    attr_accessor :payer_id

    # Payment customer number
    # @return [String]
    attr_accessor :payer_number

    # Payer Short Name
    # @return [String]
    attr_accessor :payer_short_name

    # Total Amount (In Customer Currency) of Transactions met with the given
    # exceptions criteria.
    # @return [Float]
    attr_accessor :total_amount

    # Total Quantity of Transactions met with the given exceptions criteria.
    # @return [Integer]
    attr_accessor :total_quantity

    # Total number of Sales Items met with the given exception criteria.
    # @return [Integer]
    attr_accessor :total_sales_items

    # Total number of Transactions met with the given exception criteria.
    # @return [Integer]
    attr_accessor :total_transactions

    # Vehicle Registration Number
    # @return [String]
    attr_accessor :vrn

    # Summary Week Number with in the given date range. Populated when the Value
    # of Period is Passed as ‘Week’.
    # @return [Integer]
    attr_accessor :week

    # Summary Year: Populated when the Value of Period is Passed as ‘Month’.
    # @return [Integer]
    attr_accessor :year

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_id'] = 'AccountId'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['account_short_name'] = 'AccountShortName'
      @_hash['card_id'] = 'CardId'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['currency_symbol'] = 'CurrencySymbol'
      @_hash['day'] = 'Day'
      @_hash['driver_name'] = 'DriverName'
      @_hash['month'] = 'Month'
      @_hash['pan'] = 'PAN'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['payer_short_name'] = 'PayerShortName'
      @_hash['total_amount'] = 'TotalAmount'
      @_hash['total_quantity'] = 'TotalQuantity'
      @_hash['total_sales_items'] = 'TotalSalesItems'
      @_hash['total_transactions'] = 'TotalTransactions'
      @_hash['vrn'] = 'VRN'
      @_hash['week'] = 'Week'
      @_hash['year'] = 'Year'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_id
        account_number
        account_short_name
        card_id
        currency_code
        currency_symbol
        day
        driver_name
        month
        pan
        payer_id
        payer_number
        payer_short_name
        total_amount
        total_quantity
        total_sales_items
        total_transactions
        vrn
        week
        year
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        account_id
        account_number
        account_short_name
        card_id
        currency_code
        currency_symbol
        day
        driver_name
        month
        pan
        payer_id
        payer_number
        payer_short_name
        total_amount
        total_quantity
        total_sales_items
        total_transactions
        vrn
        week
        year
      ]
    end

    def initialize(account_id = SKIP, account_number = SKIP,
                   account_short_name = SKIP, card_id = SKIP,
                   currency_code = SKIP, currency_symbol = SKIP, day = SKIP,
                   driver_name = SKIP, month = SKIP, pan = SKIP,
                   payer_id = SKIP, payer_number = SKIP,
                   payer_short_name = SKIP, total_amount = SKIP,
                   total_quantity = SKIP, total_sales_items = SKIP,
                   total_transactions = SKIP, vrn = SKIP, week = SKIP,
                   year = SKIP)
      @account_id = account_id unless account_id == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_short_name = account_short_name unless account_short_name == SKIP
      @card_id = card_id unless card_id == SKIP
      @currency_code = currency_code unless currency_code == SKIP
      @currency_symbol = currency_symbol unless currency_symbol == SKIP
      @day = day unless day == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      @month = month unless month == SKIP
      @pan = pan unless pan == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @payer_short_name = payer_short_name unless payer_short_name == SKIP
      @total_amount = total_amount unless total_amount == SKIP
      @total_quantity = total_quantity unless total_quantity == SKIP
      @total_sales_items = total_sales_items unless total_sales_items == SKIP
      @total_transactions = total_transactions unless total_transactions == SKIP
      @vrn = vrn unless vrn == SKIP
      @week = week unless week == SKIP
      @year = year unless year == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_id = hash.key?('AccountId') ? hash['AccountId'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      account_short_name =
        hash.key?('AccountShortName') ? hash['AccountShortName'] : SKIP
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      currency_symbol =
        hash.key?('CurrencySymbol') ? hash['CurrencySymbol'] : SKIP
      day = hash.key?('Day') ? hash['Day'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      month = hash.key?('Month') ? hash['Month'] : SKIP
      pan = hash.key?('PAN') ? hash['PAN'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      payer_short_name =
        hash.key?('PayerShortName') ? hash['PayerShortName'] : SKIP
      total_amount = hash.key?('TotalAmount') ? hash['TotalAmount'] : SKIP
      total_quantity = hash.key?('TotalQuantity') ? hash['TotalQuantity'] : SKIP
      total_sales_items =
        hash.key?('TotalSalesItems') ? hash['TotalSalesItems'] : SKIP
      total_transactions =
        hash.key?('TotalTransactions') ? hash['TotalTransactions'] : SKIP
      vrn = hash.key?('VRN') ? hash['VRN'] : SKIP
      week = hash.key?('Week') ? hash['Week'] : SKIP
      year = hash.key?('Year') ? hash['Year'] : SKIP

      # Create object from extracted values.
      CardExceptions.new(account_id,
                         account_number,
                         account_short_name,
                         card_id,
                         currency_code,
                         currency_symbol,
                         day,
                         driver_name,
                         month,
                         pan,
                         payer_id,
                         payer_number,
                         payer_short_name,
                         total_amount,
                         total_quantity,
                         total_sales_items,
                         total_transactions,
                         vrn,
                         week,
                         year)
    end
  end
end
