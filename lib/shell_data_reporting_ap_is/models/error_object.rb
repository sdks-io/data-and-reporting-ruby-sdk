# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # ErrorObject Model.
  class ErrorObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique request identifier passed from end user. This identifier helps in
    # tracing a transaction
    # @return [String]
    attr_accessor :request_id

    # Indicates overall status of the request. Allowed values: SUCCES, FAILED,
    # PARTIAL_SUCCESS
    # @return [String]
    attr_accessor :status

    # Indicates overall status of the request. Allowed values: SUCCES, FAILED,
    # PARTIAL_SUCCESS
    # @return [Array[ErrorDetails]]
    attr_accessor :errors

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['request_id'] = 'RequestId'
      @_hash['status'] = 'Status'
      @_hash['errors'] = 'Errors'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        request_id
        status
        errors
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(request_id = SKIP, status = SKIP, errors = SKIP)
      @request_id = request_id unless request_id == SKIP
      @status = status unless status == SKIP
      @errors = errors unless errors == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP
      status = hash.key?('Status') ? hash['Status'] : SKIP
      # Parameter is an array, so we need to iterate through it
      errors = nil
      unless hash['Errors'].nil?
        errors = []
        hash['Errors'].each do |structure|
          errors << (ErrorDetails.from_hash(structure) if structure)
        end
      end

      errors = SKIP unless hash.key?('Errors')

      # Create object from extracted values.
      ErrorObject.new(request_id,
                      status,
                      errors)
    end
  end
end
