# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FleetmanagementV1UserLoggedinuserRequest Model.
  class FleetmanagementV1UserLoggedinuserRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # True/False. The output will include the payer group information only when
    # true is passed.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_payer_group

    # True/False. The output will include the EID (Electronic Invoice data)
    # information only when true is passed..
    # @return [TrueClass | FalseClass]
    attr_accessor :include_eid_details

    # Name of the API on which user access needs to be validated
    # Optional.
    # @return [String]
    attr_accessor :requested_api_name

    # Payer id of the customer.</br>
    # Optional.</br>
    # This input is a search criterion.</br>
    # Note: If PayerId or PayerNumber is provided in the input, the given payer
    # will be available in the output if the user has access to the given payer.
    # @return [Integer]
    attr_accessor :payer_id

    # PayerNumber of the customer.</br>
    # Optional</br>
    # This input is a search criterion.</br>
    # Note: If Payerid or PayerNumber is provided in the input, the given payer
    # will be available in the output if the user has access to the given payer.
    # @return [String]
    attr_accessor :payer_number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['include_payer_group'] = 'IncludePayerGroup'
      @_hash['include_eid_details'] = 'IncludeEIDDetails'
      @_hash['requested_api_name'] = 'RequestedAPIName'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        include_payer_group
        include_eid_details
        requested_api_name
        payer_id
        payer_number
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        requested_api_name
        payer_id
        payer_number
      ]
    end

    def initialize(include_payer_group = false, include_eid_details = false,
                   requested_api_name = SKIP, payer_id = SKIP,
                   payer_number = SKIP)
      @include_payer_group = include_payer_group unless include_payer_group == SKIP
      @include_eid_details = include_eid_details unless include_eid_details == SKIP
      @requested_api_name = requested_api_name unless requested_api_name == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      include_payer_group = hash['IncludePayerGroup'] ||= false
      include_eid_details = hash['IncludeEIDDetails'] ||= false
      requested_api_name =
        hash.key?('RequestedAPIName') ? hash['RequestedAPIName'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP

      # Create object from extracted values.
      FleetmanagementV1UserLoggedinuserRequest.new(include_payer_group,
                                                   include_eid_details,
                                                   requested_api_name,
                                                   payer_id,
                                                   payer_number)
    end
  end
end
