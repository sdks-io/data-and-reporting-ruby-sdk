# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FuelConsumptionResponse Model.
  class FuelConsumptionResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[FuelConsumptionData]]
    attr_accessor :fuel_consumption

    # TODO: Write general description for this method
    # @return [ErrorStatus]
    attr_accessor :error

    # API Request Id
    # @return [String]
    attr_accessor :request_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['fuel_consumption'] = 'FuelConsumption'
      @_hash['error'] = 'Error'
      @_hash['request_id'] = 'RequestId'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        fuel_consumption
        error
        request_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(fuel_consumption = SKIP, error = SKIP, request_id = SKIP)
      @fuel_consumption = fuel_consumption unless fuel_consumption == SKIP
      @error = error unless error == SKIP
      @request_id = request_id unless request_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      fuel_consumption = nil
      unless hash['FuelConsumption'].nil?
        fuel_consumption = []
        hash['FuelConsumption'].each do |structure|
          fuel_consumption << (FuelConsumptionData.from_hash(structure) if structure)
        end
      end

      fuel_consumption = SKIP unless hash.key?('FuelConsumption')
      error = ErrorStatus.from_hash(hash['Error']) if hash['Error']
      request_id = hash.key?('RequestId') ? hash['RequestId'] : SKIP

      # Create object from extracted values.
      FuelConsumptionResponse.new(fuel_consumption,
                                  error,
                                  request_id)
    end
  end
end
