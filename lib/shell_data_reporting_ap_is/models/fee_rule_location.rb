# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # FeeRuleLocation Model.
  class FeeRuleLocation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Delco Identifier.
    # @return [String]
    attr_accessor :delco_id

    # Country name.
    # @return [String]
    attr_accessor :country

    # ISO Code of country.
    # @return [String]
    attr_accessor :country_code

    # Fuel Network Identifier.
    # @return [Integer]
    attr_accessor :fuel_network_id

    # Network Name.
    # @return [String]
    attr_accessor :network_name

    # Site-Group ID
    # @return [Integer]
    attr_accessor :site_group_id

    # Site-Group name.
    # @return [String]
    attr_accessor :site_group_name

    # Site Code
    # @return [Integer]
    attr_accessor :site_code

    # Site Identifier
    # @return [Integer]
    attr_accessor :site_id

    # Site Name
    # @return [String]
    attr_accessor :site_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['delco_id'] = 'DelcoId'
      @_hash['country'] = 'Country'
      @_hash['country_code'] = 'CountryCode'
      @_hash['fuel_network_id'] = 'FuelNetworkId'
      @_hash['network_name'] = 'NetworkName'
      @_hash['site_group_id'] = 'SiteGroupId'
      @_hash['site_group_name'] = 'SiteGroupName'
      @_hash['site_code'] = 'SiteCode'
      @_hash['site_id'] = 'SiteId'
      @_hash['site_name'] = 'SiteName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        delco_id
        country
        country_code
        fuel_network_id
        network_name
        site_group_id
        site_group_name
        site_code
        site_id
        site_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        delco_id
        country
        country_code
        fuel_network_id
        network_name
        site_group_id
        site_group_name
        site_code
        site_id
        site_name
      ]
    end

    def initialize(delco_id = SKIP,
                   country = SKIP,
                   country_code = SKIP,
                   fuel_network_id = SKIP,
                   network_name = SKIP,
                   site_group_id = SKIP,
                   site_group_name = SKIP,
                   site_code = SKIP,
                   site_id = SKIP,
                   site_name = SKIP)
      @delco_id = delco_id unless delco_id == SKIP
      @country = country unless country == SKIP
      @country_code = country_code unless country_code == SKIP
      @fuel_network_id = fuel_network_id unless fuel_network_id == SKIP
      @network_name = network_name unless network_name == SKIP
      @site_group_id = site_group_id unless site_group_id == SKIP
      @site_group_name = site_group_name unless site_group_name == SKIP
      @site_code = site_code unless site_code == SKIP
      @site_id = site_id unless site_id == SKIP
      @site_name = site_name unless site_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      delco_id = hash.key?('DelcoId') ? hash['DelcoId'] : SKIP
      country = hash.key?('Country') ? hash['Country'] : SKIP
      country_code = hash.key?('CountryCode') ? hash['CountryCode'] : SKIP
      fuel_network_id =
        hash.key?('FuelNetworkId') ? hash['FuelNetworkId'] : SKIP
      network_name = hash.key?('NetworkName') ? hash['NetworkName'] : SKIP
      site_group_id = hash.key?('SiteGroupId') ? hash['SiteGroupId'] : SKIP
      site_group_name =
        hash.key?('SiteGroupName') ? hash['SiteGroupName'] : SKIP
      site_code = hash.key?('SiteCode') ? hash['SiteCode'] : SKIP
      site_id = hash.key?('SiteId') ? hash['SiteId'] : SKIP
      site_name = hash.key?('SiteName') ? hash['SiteName'] : SKIP

      # Create object from extracted values.
      FeeRuleLocation.new(delco_id,
                          country,
                          country_code,
                          fuel_network_id,
                          network_name,
                          site_group_id,
                          site_group_name,
                          site_code,
                          site_id,
                          site_name)
    end
  end
end
