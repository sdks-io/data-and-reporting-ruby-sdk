# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # CardUsageRestrictions Model.
  class CardUsageRestrictions < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Describes at which level the restriction is set at.
    # Possible values:
    # OU = Restriction set at ColCo card type 
    # Customer = Restriction set at customer card type
    # @return [String]
    attr_accessor :level

    # Maximum amount that can be spend on the card in a day.
    # @return [Float]
    attr_accessor :daily_spend_limit

    # Maximum amount that can be spend on the card in a week.
    # @return [Float]
    attr_accessor :weekly_spend_limit

    # Maximum amount that can be spend on the card in a month.
    # @return [Float]
    attr_accessor :monthly_spend_limit

    # Maximum amount that can be spend on the card in a year.
    # @return [Float]
    attr_accessor :annual_spend_limit

    # Maximum amount that can be spend on the card in the card’s life time.
    # @return [Float]
    attr_accessor :life_time_spend_limit

    # Maximum volume of fuel that can be bought on the card in a day.
    # @return [Float]
    attr_accessor :daily_volume_limit

    # Maximum volume of fuel that can be bought on the card in a week.
    # @return [Float]
    attr_accessor :weekly_volume_limit

    # Maximum volume of fuel that can be bought on the card in a month.
    # @return [Float]
    attr_accessor :monthly_volume_limit

    # Maximum volume of fuel that can be bought on the card in a year.
    # @return [Float]
    attr_accessor :annual_volume_limit

    # Maximum volume of fuel that can be bought on the card in the card’s life
    # time.
    # @return [Float]
    attr_accessor :life_time_volume_limit

    # Maximum amount that can be spend on the card in a transaction.
    # @return [Float]
    attr_accessor :transaction_spend_limit

    # Maximum volume of fuel that can be bought on the card in a transaction.
    # @return [Float]
    attr_accessor :transaction_volume_limit

    # Maximum number of transactions allowed on a card in a day.
    # @return [Float]
    attr_accessor :daily_transaction_count

    # Maximum number of transactions allowed on a card in a week.
    # @return [Float]
    attr_accessor :weekly_transaction_count

    # Maximum number of transactions allowed on a card in a month.
    # @return [Float]
    attr_accessor :monthly_transaction_count

    # Maximum number of transactions allowed on the card in a year.
    # @return [Float]
    attr_accessor :annual_transaction_count

    # Maximum number of transactions allowed on the card in the card’s life
    # time.
    # @return [Float]
    attr_accessor :life_time_transaction_count

    # IsVelocityCeiling flag 
    # Note: When "True", the velocity defaults configured in MS DB will be
    # considered as the Max Limits for velocity changes. When ‘false’ max
    # allowed limits will be 999999999999 for Type “Count” and 9999999999.99 for
    # Type ‘Value’.
    # @return [TrueClass | FalseClass]
    attr_accessor :is_velocity_ceiling

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['level'] = 'Level'
      @_hash['daily_spend_limit'] = 'DailySpendLimit'
      @_hash['weekly_spend_limit'] = 'WeeklySpendLimit'
      @_hash['monthly_spend_limit'] = 'MonthlySpendLimit'
      @_hash['annual_spend_limit'] = 'AnnualSpendLimit'
      @_hash['life_time_spend_limit'] = 'LifeTimeSpendLimit'
      @_hash['daily_volume_limit'] = 'DailyVolumeLimit'
      @_hash['weekly_volume_limit'] = 'WeeklyVolumeLimit'
      @_hash['monthly_volume_limit'] = 'MonthlyVolumeLimit'
      @_hash['annual_volume_limit'] = 'AnnualVolumeLimit'
      @_hash['life_time_volume_limit'] = 'LifeTimeVolumeLimit'
      @_hash['transaction_spend_limit'] = 'TransactionSpendLimit'
      @_hash['transaction_volume_limit'] = 'TransactionVolumeLimit'
      @_hash['daily_transaction_count'] = 'DailyTransactionCount'
      @_hash['weekly_transaction_count'] = 'WeeklyTransactionCount'
      @_hash['monthly_transaction_count'] = 'MonthlyTransactionCount'
      @_hash['annual_transaction_count'] = 'AnnualTransactionCount'
      @_hash['life_time_transaction_count'] = 'LifeTimeTransactionCount'
      @_hash['is_velocity_ceiling'] = 'IsVelocityCeiling'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        level
        daily_spend_limit
        weekly_spend_limit
        monthly_spend_limit
        annual_spend_limit
        life_time_spend_limit
        daily_volume_limit
        weekly_volume_limit
        monthly_volume_limit
        annual_volume_limit
        life_time_volume_limit
        transaction_spend_limit
        transaction_volume_limit
        daily_transaction_count
        weekly_transaction_count
        monthly_transaction_count
        annual_transaction_count
        life_time_transaction_count
        is_velocity_ceiling
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        level
        daily_spend_limit
        weekly_spend_limit
        monthly_spend_limit
        annual_spend_limit
        life_time_spend_limit
        daily_volume_limit
        weekly_volume_limit
        monthly_volume_limit
        annual_volume_limit
        life_time_volume_limit
        transaction_spend_limit
        transaction_volume_limit
        daily_transaction_count
        weekly_transaction_count
        monthly_transaction_count
        annual_transaction_count
        life_time_transaction_count
      ]
    end

    def initialize(level = SKIP,
                   daily_spend_limit = SKIP,
                   weekly_spend_limit = SKIP,
                   monthly_spend_limit = SKIP,
                   annual_spend_limit = SKIP,
                   life_time_spend_limit = SKIP,
                   daily_volume_limit = SKIP,
                   weekly_volume_limit = SKIP,
                   monthly_volume_limit = SKIP,
                   annual_volume_limit = 0,
                   life_time_volume_limit = SKIP,
                   transaction_spend_limit = SKIP,
                   transaction_volume_limit = SKIP,
                   daily_transaction_count = SKIP,
                   weekly_transaction_count = SKIP,
                   monthly_transaction_count = SKIP,
                   annual_transaction_count = SKIP,
                   life_time_transaction_count = SKIP,
                   is_velocity_ceiling = SKIP)
      @level = level unless level == SKIP
      @daily_spend_limit = daily_spend_limit unless daily_spend_limit == SKIP
      @weekly_spend_limit = weekly_spend_limit unless weekly_spend_limit == SKIP
      @monthly_spend_limit = monthly_spend_limit unless monthly_spend_limit == SKIP
      @annual_spend_limit = annual_spend_limit unless annual_spend_limit == SKIP
      @life_time_spend_limit = life_time_spend_limit unless life_time_spend_limit == SKIP
      @daily_volume_limit = daily_volume_limit unless daily_volume_limit == SKIP
      @weekly_volume_limit = weekly_volume_limit unless weekly_volume_limit == SKIP
      @monthly_volume_limit = monthly_volume_limit unless monthly_volume_limit == SKIP
      @annual_volume_limit = annual_volume_limit unless annual_volume_limit == SKIP
      @life_time_volume_limit = life_time_volume_limit unless life_time_volume_limit == SKIP
      @transaction_spend_limit = transaction_spend_limit unless transaction_spend_limit == SKIP
      @transaction_volume_limit = transaction_volume_limit unless transaction_volume_limit == SKIP
      @daily_transaction_count = daily_transaction_count unless daily_transaction_count == SKIP
      @weekly_transaction_count = weekly_transaction_count unless weekly_transaction_count == SKIP
      unless monthly_transaction_count == SKIP
        @monthly_transaction_count =
          monthly_transaction_count
      end
      @annual_transaction_count = annual_transaction_count unless annual_transaction_count == SKIP
      unless life_time_transaction_count == SKIP
        @life_time_transaction_count =
          life_time_transaction_count
      end
      @is_velocity_ceiling = is_velocity_ceiling unless is_velocity_ceiling == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      level = hash.key?('Level') ? hash['Level'] : SKIP
      daily_spend_limit =
        hash.key?('DailySpendLimit') ? hash['DailySpendLimit'] : SKIP
      weekly_spend_limit =
        hash.key?('WeeklySpendLimit') ? hash['WeeklySpendLimit'] : SKIP
      monthly_spend_limit =
        hash.key?('MonthlySpendLimit') ? hash['MonthlySpendLimit'] : SKIP
      annual_spend_limit =
        hash.key?('AnnualSpendLimit') ? hash['AnnualSpendLimit'] : SKIP
      life_time_spend_limit =
        hash.key?('LifeTimeSpendLimit') ? hash['LifeTimeSpendLimit'] : SKIP
      daily_volume_limit =
        hash.key?('DailyVolumeLimit') ? hash['DailyVolumeLimit'] : SKIP
      weekly_volume_limit =
        hash.key?('WeeklyVolumeLimit') ? hash['WeeklyVolumeLimit'] : SKIP
      monthly_volume_limit =
        hash.key?('MonthlyVolumeLimit') ? hash['MonthlyVolumeLimit'] : SKIP
      annual_volume_limit = hash['AnnualVolumeLimit'] ||= 0
      life_time_volume_limit =
        hash.key?('LifeTimeVolumeLimit') ? hash['LifeTimeVolumeLimit'] : SKIP
      transaction_spend_limit =
        hash.key?('TransactionSpendLimit') ? hash['TransactionSpendLimit'] : SKIP
      transaction_volume_limit =
        hash.key?('TransactionVolumeLimit') ? hash['TransactionVolumeLimit'] : SKIP
      daily_transaction_count =
        hash.key?('DailyTransactionCount') ? hash['DailyTransactionCount'] : SKIP
      weekly_transaction_count =
        hash.key?('WeeklyTransactionCount') ? hash['WeeklyTransactionCount'] : SKIP
      monthly_transaction_count =
        hash.key?('MonthlyTransactionCount') ? hash['MonthlyTransactionCount'] : SKIP
      annual_transaction_count =
        hash.key?('AnnualTransactionCount') ? hash['AnnualTransactionCount'] : SKIP
      life_time_transaction_count =
        hash.key?('LifeTimeTransactionCount') ? hash['LifeTimeTransactionCount'] : SKIP
      is_velocity_ceiling =
        hash.key?('IsVelocityCeiling') ? hash['IsVelocityCeiling'] : SKIP

      # Create object from extracted values.
      CardUsageRestrictions.new(level,
                                daily_spend_limit,
                                weekly_spend_limit,
                                monthly_spend_limit,
                                annual_spend_limit,
                                life_time_spend_limit,
                                daily_volume_limit,
                                weekly_volume_limit,
                                monthly_volume_limit,
                                annual_volume_limit,
                                life_time_volume_limit,
                                transaction_spend_limit,
                                transaction_volume_limit,
                                daily_transaction_count,
                                weekly_transaction_count,
                                monthly_transaction_count,
                                annual_transaction_count,
                                life_time_transaction_count,
                                is_velocity_ceiling)
    end
  end
end
