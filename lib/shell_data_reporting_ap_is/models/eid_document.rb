# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # EIDDocument Model.
  class EIDDocument < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Technical identifier for the EID file. Should not be stored in database as
    # it is not guaranteed to stay unchanged over time.
    # @return [Integer]
    attr_accessor :document_id

    # Account Group Id
    # @return [String]
    attr_accessor :account_group_id

    # Account group name
    # @return [String]
    attr_accessor :account_group_name

    # Document type.
    # Possible values:
    # •	NAT (National)
    # •	INT (International)
    # @return [String]
    attr_accessor :document_type

    # Document format (CHORUS, DIFI etc.)
    # @return [String]
    attr_accessor :document_format

    # Document date.
    # Example: 20170101
    # @return [String]
    attr_accessor :document_date

    # Number of invoices
    # @return [Integer]
    attr_accessor :number_of_invoices

    # Document size
    # @return [Integer]
    attr_accessor :file_size

    # Document status.
    # Possible values:
    # •	NEW
    # •	VIEWED
    # •	DOWNLOADED
    # •	RESTORED
    # @return [String]
    attr_accessor :document_status

    # Document file name.
    # @return [String]
    attr_accessor :document_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['document_id'] = 'DocumentId'
      @_hash['account_group_id'] = 'AccountGroupId'
      @_hash['account_group_name'] = 'AccountGroupName'
      @_hash['document_type'] = 'DocumentType'
      @_hash['document_format'] = 'DocumentFormat'
      @_hash['document_date'] = 'DocumentDate'
      @_hash['number_of_invoices'] = 'NumberOfInvoices'
      @_hash['file_size'] = 'FileSize'
      @_hash['document_status'] = 'DocumentStatus'
      @_hash['document_name'] = 'DocumentName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        document_id
        account_group_id
        account_group_name
        document_type
        document_format
        document_date
        number_of_invoices
        file_size
        document_status
        document_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        document_id
        account_group_id
        account_group_name
        document_type
        document_format
        document_date
        number_of_invoices
        file_size
        document_status
        document_name
      ]
    end

    def initialize(document_id = SKIP,
                   account_group_id = SKIP,
                   account_group_name = SKIP,
                   document_type = SKIP,
                   document_format = SKIP,
                   document_date = SKIP,
                   number_of_invoices = SKIP,
                   file_size = SKIP,
                   document_status = SKIP,
                   document_name = SKIP)
      @document_id = document_id unless document_id == SKIP
      @account_group_id = account_group_id unless account_group_id == SKIP
      @account_group_name = account_group_name unless account_group_name == SKIP
      @document_type = document_type unless document_type == SKIP
      @document_format = document_format unless document_format == SKIP
      @document_date = document_date unless document_date == SKIP
      @number_of_invoices = number_of_invoices unless number_of_invoices == SKIP
      @file_size = file_size unless file_size == SKIP
      @document_status = document_status unless document_status == SKIP
      @document_name = document_name unless document_name == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      document_id = hash.key?('DocumentId') ? hash['DocumentId'] : SKIP
      account_group_id =
        hash.key?('AccountGroupId') ? hash['AccountGroupId'] : SKIP
      account_group_name =
        hash.key?('AccountGroupName') ? hash['AccountGroupName'] : SKIP
      document_type = hash.key?('DocumentType') ? hash['DocumentType'] : SKIP
      document_format =
        hash.key?('DocumentFormat') ? hash['DocumentFormat'] : SKIP
      document_date = hash.key?('DocumentDate') ? hash['DocumentDate'] : SKIP
      number_of_invoices =
        hash.key?('NumberOfInvoices') ? hash['NumberOfInvoices'] : SKIP
      file_size = hash.key?('FileSize') ? hash['FileSize'] : SKIP
      document_status =
        hash.key?('DocumentStatus') ? hash['DocumentStatus'] : SKIP
      document_name = hash.key?('DocumentName') ? hash['DocumentName'] : SKIP

      # Create object from extracted values.
      EIDDocument.new(document_id,
                      account_group_id,
                      account_group_name,
                      document_type,
                      document_format,
                      document_date,
                      number_of_invoices,
                      file_size,
                      document_status,
                      document_name)
    end
  end
end
