# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # PayerRequest Model.
  class PayerRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # List of Payer entity.
    # Optional.
    # Note:
    # •    Max number of payers allowed in the input is 10, if it exceeds in the
    # input it will throw an error.
    # •    This value is configurable. Initial configuration will be 1000 and
    # will change to 10 once SFH changes are integrated.
    # @return [Array[Payers]]
    attr_accessor :payers

    # Returns only the high-level basic details of payers. Set this field to
    # ‘true’ when only the basic details are required to get the result quicker.
    # @return [TrueClass | FalseClass]
    attr_accessor :return_basic_details_only

    # Include address related fields on the response. Set this field to ‘False’
    # when Address fields are not required to get the result quicker.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_addresses

    # Include the Finance Currency, used for Finance Widget, in the response
    # @return [TrueClass | FalseClass]
    attr_accessor :include_bonus_parameters

    # Page Number
    # @return [Integer]
    attr_accessor :current_page

    # Page Size – Number of records to show on a page
    # Default value 50
    # Return 250 rows only in the response if -1 is supplied as page size.
    # Note: 
    # •    Max page size is 250, if the user provided value is more than 250
    # then it will throw error.
    # •    This value is configurable.
    # @return [Integer]
    attr_accessor :page_size

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['payers'] = 'Payers'
      @_hash['return_basic_details_only'] = 'ReturnBasicDetailsOnly'
      @_hash['include_addresses'] = 'IncludeAddresses'
      @_hash['include_bonus_parameters'] = 'IncludeBonusParameters'
      @_hash['current_page'] = 'CurrentPage'
      @_hash['page_size'] = 'PageSize'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        payers
        return_basic_details_only
        include_addresses
        include_bonus_parameters
        current_page
        page_size
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(payers = SKIP, return_basic_details_only = false,
                   include_addresses = false, include_bonus_parameters = false,
                   current_page = SKIP, page_size = SKIP)
      @payers = payers unless payers == SKIP
      unless return_basic_details_only == SKIP
        @return_basic_details_only =
          return_basic_details_only
      end
      @include_addresses = include_addresses unless include_addresses == SKIP
      @include_bonus_parameters = include_bonus_parameters unless include_bonus_parameters == SKIP
      @current_page = current_page unless current_page == SKIP
      @page_size = page_size unless page_size == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      payers = nil
      unless hash['Payers'].nil?
        payers = []
        hash['Payers'].each do |structure|
          payers << (Payers.from_hash(structure) if structure)
        end
      end

      payers = SKIP unless hash.key?('Payers')
      return_basic_details_only = hash['ReturnBasicDetailsOnly'] ||= false
      include_addresses = hash['IncludeAddresses'] ||= false
      include_bonus_parameters = hash['IncludeBonusParameters'] ||= false
      current_page = hash.key?('CurrentPage') ? hash['CurrentPage'] : SKIP
      page_size = hash.key?('PageSize') ? hash['PageSize'] : SKIP

      # Create object from extracted values.
      PayerRequest.new(payers,
                       return_basic_details_only,
                       include_addresses,
                       include_bonus_parameters,
                       current_page,
                       page_size)
    end
  end
end
