# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # RecentTransactions Model.
  class RecentTransactions < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # ColCoCode
    # @return [Integer]
    attr_accessor :col_co_code

    # PayerNumber
    # @return [String]
    attr_accessor :payer_number

    # Account Number
    # @return [String]
    attr_accessor :account_number

    # Card Issue Number
    # @return [String]
    attr_accessor :card_issue_number

    # Collecting Company Currency IsoCode
    # @return [String]
    attr_accessor :collecting_company_currency_code

    # Customer entered data for reference.
    # @return [String]
    attr_accessor :cust_data_customer_entered

    # Customer Data DriverId
    # @return [String]
    attr_accessor :cust_data_driver_id

    # Cust Data Fleet Description
    # @return [String]
    attr_accessor :cust_data_fleet_description

    # Fleet Id Input
    # @return [String]
    attr_accessor :fleet_id_input

    # Amount
    # @return [Float]
    attr_accessor :amount

    # EuroshellSiteNumber
    # @return [String]
    attr_accessor :euroshell_site_number

    # IncomingProductCode
    # @return [String]
    attr_accessor :incoming_product_code

    # ProductCode
    # @return [String]
    attr_accessor :product_code

    # ProductName
    # @return [String]
    attr_accessor :product_name

    # SiteCode
    # @return [Integer]
    attr_accessor :site_code

    # HostingCollectingCompanyName
    # @return [String]
    attr_accessor :hosting_collecting_company_name

    # HostingCollectingCompanyNumber
    # @return [String]
    attr_accessor :hosting_collecting_company_number

    # Transaction type code
    # @return [String]
    attr_accessor :iccdata_tran_type_code

    # Transaction type description.
    # @return [String]
    attr_accessor :transaction_type

    # Latitude of the Coordinate 3.11573
    # @return [String]
    attr_accessor :latitude

    # Longitude of the Coordinate
    # @return [String]
    attr_accessor :longitude

    # Merchant category
    # @return [String]
    attr_accessor :merchant_category

    # Merchant category description
    # @return [String]
    attr_accessor :merchant_category_description

    # Purchased in country
    # @return [String]
    attr_accessor :purchased_in_country

    # Merchant Id
    # @return [String]
    attr_accessor :merchant_id

    # Site name
    # @return [String]
    attr_accessor :site_name

    # Network
    # @return [String]
    attr_accessor :network

    # Three character DelcoCode
    # @return [String]
    attr_accessor :delco_code

    # Odometer input
    # @return [String]
    attr_accessor :odometer_input

    # Odometer reading in Kms
    # @return [String]
    attr_accessor :odometer_reading_km

    # Odometer reading in miles
    # @return [String]
    attr_accessor :odometer_reading_miles

    # Masked Card PAN
    # @return [String]
    attr_accessor :card_pan

    # PIN indicator
    # @return [String]
    attr_accessor :pin_indicator

    # POIReceiptNumber
    # @return [String]
    attr_accessor :poi_receipt_number

    # Additinal Products Code
    # @return [String]
    attr_accessor :products_code_additional

    # Products tax code
    # @return [String]
    attr_accessor :products_tax_code

    # Fuel volume
    # @return [Float]
    attr_accessor :fuel_volume

    # SfgwCard expiry date
    # @return [String]
    attr_accessor :sfgw_card_date_of_expiry

    # Three character Site currency ISO code
    # @return [String]
    attr_accessor :site_currency_iso_code

    # Card ID
    # @return [String]
    attr_accessor :card_id

    # ISO8601-compliant UTC datetime of the last update of the EVSE
    # @return [Date]
    attr_accessor :transaction_date

    # ISO8601-compliant UTC datetime of the last update of the EVSE
    # @return [String]
    attr_accessor :transaction_date_time

    # TransactionId
    # @return [String]
    attr_accessor :transaction_id

    # Type of the connector in the EVSE unit.
    # @return [String]
    attr_accessor :transaction_status

    # Unit of measure
    # @return [String]
    attr_accessor :unit_of_measure

    # VehicleRegistrationNumber
    # @return [String]
    attr_accessor :vehicle_registration_number

    # Network Delco name
    # @return [String]
    attr_accessor :network_delco_name

    # ProductGroupName
    # @return [String]
    attr_accessor :product_group_name

    # FuelProduct
    # @return [String]
    attr_accessor :fuel_product

    # AccountCustomerName
    # @return [String]
    attr_accessor :account_customer_name

    # PayerName
    # @return [String]
    attr_accessor :payer_name

    # ISO8601-compliant UTC datetime of the last update of the EVSE
    # @return [String]
    attr_accessor :transaction_time

    # TransactionCurrencySymbol
    # @return [String]
    attr_accessor :transaction_currency

    # UnitPrice
    # @return [Float]
    attr_accessor :unit_price

    # AuthorisedFlag
    # @return [String]
    attr_accessor :authorised_flag

    # TransactionTimeGMT update of the EVSE
    # @return [String]
    attr_accessor :transaction_time_gmt

    # ReasonCode
    # @return [String]
    attr_accessor :reason_code

    # IssuerActionCode
    # @return [String]
    attr_accessor :issuer_action_code

    # IssuerActionCodeDescription.
    # @return [String]
    attr_accessor :issuer_action_code_description

    # DeclinedReason.
    # @return [String]
    attr_accessor :declined_reason

    # CardStatusReasonDescription.
    # @return [String]
    attr_accessor :card_status_reason_description

    # TransactionCountry
    # @return [String]
    attr_accessor :transaction_country

    # IssuingCollectingCompanyName.
    # @return [String]
    attr_accessor :issuing_collecting_company_name

    # CardIssuerName.
    # @return [String]
    attr_accessor :card_issuer_name

    # DriverName.
    # @return [String]
    attr_accessor :driver_name

    # BearerDescription.
    # @return [String]
    attr_accessor :bearer_description

    # CardCategoryDescription.
    # @return [String]
    attr_accessor :card_category_description

    # CardTypeDescription.
    # @return [String]
    attr_accessor :card_type_description

    # CardTokenTypeDescription.
    # @return [String]
    attr_accessor :card_token_type_description

    # EmbossType.
    # @return [String]
    attr_accessor :emboss_type

    # The EVPrintedNumber which can be found on the Shell EV Card
    # @return [String]
    attr_accessor :ev_printed_number

    # Whether the card type is enabled for RFID (Radio Frequency Identification)
    # @return [TrueClass | FalseClass]
    attr_accessor :is_rfid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['card_issue_number'] = 'CardIssueNumber'
      @_hash['collecting_company_currency_code'] =
        'CollectingCompanyCurrencyCode'
      @_hash['cust_data_customer_entered'] = 'CustDataCustomerEntered'
      @_hash['cust_data_driver_id'] = 'CustDataDriverId'
      @_hash['cust_data_fleet_description'] = 'CustDataFleetDescription'
      @_hash['fleet_id_input'] = 'FleetIdInput'
      @_hash['amount'] = 'Amount'
      @_hash['euroshell_site_number'] = 'EuroshellSiteNumber'
      @_hash['incoming_product_code'] = 'IncomingProductCode'
      @_hash['product_code'] = 'ProductCode'
      @_hash['product_name'] = 'ProductName'
      @_hash['site_code'] = 'SiteCode'
      @_hash['hosting_collecting_company_name'] =
        'HostingCollectingCompanyName'
      @_hash['hosting_collecting_company_number'] =
        'HostingCollectingCompanyNumber'
      @_hash['iccdata_tran_type_code'] = 'IccdataTranTypeCode'
      @_hash['transaction_type'] = 'TransactionType'
      @_hash['latitude'] = 'Latitude'
      @_hash['longitude'] = 'Longitude'
      @_hash['merchant_category'] = 'MerchantCategory'
      @_hash['merchant_category_description'] = 'MerchantCategoryDescription'
      @_hash['purchased_in_country'] = 'PurchasedInCountry'
      @_hash['merchant_id'] = 'MerchantId'
      @_hash['site_name'] = 'SiteName'
      @_hash['network'] = 'Network'
      @_hash['delco_code'] = 'DelcoCode'
      @_hash['odometer_input'] = 'OdometerInput'
      @_hash['odometer_reading_km'] = 'OdometerReadingKm'
      @_hash['odometer_reading_miles'] = 'OdometerReadingMiles'
      @_hash['card_pan'] = 'CardPAN'
      @_hash['pin_indicator'] = 'PINIndicator'
      @_hash['poi_receipt_number'] = 'POIReceiptNumber'
      @_hash['products_code_additional'] = 'ProductsCodeAdditional'
      @_hash['products_tax_code'] = 'ProductsTaxCode'
      @_hash['fuel_volume'] = 'FuelVolume'
      @_hash['sfgw_card_date_of_expiry'] = 'SfgwCardDateOfExpiry'
      @_hash['site_currency_iso_code'] = 'SiteCurrencyISOCode'
      @_hash['card_id'] = 'CardId'
      @_hash['transaction_date'] = 'TransactionDate'
      @_hash['transaction_date_time'] = 'TransactionDateTime'
      @_hash['transaction_id'] = 'TransactionId'
      @_hash['transaction_status'] = 'TransactionStatus'
      @_hash['unit_of_measure'] = 'UnitOfMeasure'
      @_hash['vehicle_registration_number'] = 'VehicleRegistrationNumber'
      @_hash['network_delco_name'] = 'NetworkDelcoName'
      @_hash['product_group_name'] = 'ProductGroupName'
      @_hash['fuel_product'] = 'FuelProduct'
      @_hash['account_customer_name'] = 'AccountCustomerName'
      @_hash['payer_name'] = 'PayerName'
      @_hash['transaction_time'] = 'TransactionTime'
      @_hash['transaction_currency'] = 'TransactionCurrency'
      @_hash['unit_price'] = 'UnitPrice'
      @_hash['authorised_flag'] = 'AuthorisedFlag'
      @_hash['transaction_time_gmt'] = 'TransactionTimeGMT'
      @_hash['reason_code'] = 'ReasonCode'
      @_hash['issuer_action_code'] = 'IssuerActionCode'
      @_hash['issuer_action_code_description'] = 'IssuerActionCodeDescription'
      @_hash['declined_reason'] = 'DeclinedReason'
      @_hash['card_status_reason_description'] = 'CardStatusReasonDescription'
      @_hash['transaction_country'] = 'TransactionCountry'
      @_hash['issuing_collecting_company_name'] =
        'IssuingCollectingCompanyName'
      @_hash['card_issuer_name'] = 'CardIssuerName'
      @_hash['driver_name'] = 'DriverName'
      @_hash['bearer_description'] = 'BearerDescription'
      @_hash['card_category_description'] = 'CardCategoryDescription'
      @_hash['card_type_description'] = 'CardTypeDescription'
      @_hash['card_token_type_description'] = 'CardTokenTypeDescription'
      @_hash['emboss_type'] = 'EmbossType'
      @_hash['ev_printed_number'] = 'EVPrintedNumber'
      @_hash['is_rfid'] = 'IsRFID'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_code
        payer_number
        account_number
        card_issue_number
        collecting_company_currency_code
        cust_data_customer_entered
        cust_data_driver_id
        cust_data_fleet_description
        fleet_id_input
        amount
        euroshell_site_number
        incoming_product_code
        product_code
        product_name
        site_code
        hosting_collecting_company_name
        hosting_collecting_company_number
        iccdata_tran_type_code
        transaction_type
        latitude
        longitude
        merchant_category
        merchant_category_description
        purchased_in_country
        merchant_id
        site_name
        network
        delco_code
        odometer_input
        odometer_reading_km
        odometer_reading_miles
        card_pan
        pin_indicator
        poi_receipt_number
        products_code_additional
        products_tax_code
        fuel_volume
        sfgw_card_date_of_expiry
        site_currency_iso_code
        card_id
        transaction_date
        transaction_date_time
        transaction_id
        transaction_status
        unit_of_measure
        vehicle_registration_number
        network_delco_name
        product_group_name
        fuel_product
        account_customer_name
        payer_name
        transaction_time
        transaction_currency
        unit_price
        authorised_flag
        transaction_time_gmt
        reason_code
        issuer_action_code
        issuer_action_code_description
        declined_reason
        card_status_reason_description
        transaction_country
        issuing_collecting_company_name
        card_issuer_name
        driver_name
        bearer_description
        card_category_description
        card_type_description
        card_token_type_description
        emboss_type
        ev_printed_number
        is_rfid
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_code
        payer_number
        account_number
        card_issue_number
        collecting_company_currency_code
        cust_data_customer_entered
        cust_data_driver_id
        cust_data_fleet_description
        fleet_id_input
        amount
        euroshell_site_number
        incoming_product_code
        product_code
        product_name
        site_code
        hosting_collecting_company_name
        hosting_collecting_company_number
        iccdata_tran_type_code
        transaction_type
        latitude
        longitude
        merchant_category
        merchant_category_description
        purchased_in_country
        merchant_id
        site_name
        network
        delco_code
        odometer_input
        odometer_reading_km
        odometer_reading_miles
        card_pan
        pin_indicator
        poi_receipt_number
        products_code_additional
        products_tax_code
        fuel_volume
        sfgw_card_date_of_expiry
        site_currency_iso_code
        card_id
        transaction_date
        transaction_date_time
        transaction_id
        transaction_status
        unit_of_measure
        vehicle_registration_number
        network_delco_name
        product_group_name
        fuel_product
        account_customer_name
        payer_name
        transaction_time
        transaction_currency
        unit_price
        authorised_flag
        transaction_time_gmt
        reason_code
        issuer_action_code
        issuer_action_code_description
        declined_reason
        card_status_reason_description
        transaction_country
        issuing_collecting_company_name
        card_issuer_name
        driver_name
        bearer_description
        card_category_description
        card_type_description
        card_token_type_description
        emboss_type
        ev_printed_number
        is_rfid
      ]
    end

    def initialize(col_co_code = SKIP,
                   payer_number = SKIP,
                   account_number = SKIP,
                   card_issue_number = SKIP,
                   collecting_company_currency_code = SKIP,
                   cust_data_customer_entered = SKIP,
                   cust_data_driver_id = SKIP,
                   cust_data_fleet_description = SKIP,
                   fleet_id_input = SKIP,
                   amount = SKIP,
                   euroshell_site_number = SKIP,
                   incoming_product_code = SKIP,
                   product_code = SKIP,
                   product_name = SKIP,
                   site_code = SKIP,
                   hosting_collecting_company_name = SKIP,
                   hosting_collecting_company_number = SKIP,
                   iccdata_tran_type_code = SKIP,
                   transaction_type = SKIP,
                   latitude = SKIP,
                   longitude = SKIP,
                   merchant_category = SKIP,
                   merchant_category_description = SKIP,
                   purchased_in_country = SKIP,
                   merchant_id = SKIP,
                   site_name = SKIP,
                   network = SKIP,
                   delco_code = SKIP,
                   odometer_input = SKIP,
                   odometer_reading_km = SKIP,
                   odometer_reading_miles = SKIP,
                   card_pan = SKIP,
                   pin_indicator = SKIP,
                   poi_receipt_number = SKIP,
                   products_code_additional = SKIP,
                   products_tax_code = SKIP,
                   fuel_volume = SKIP,
                   sfgw_card_date_of_expiry = SKIP,
                   site_currency_iso_code = SKIP,
                   card_id = SKIP,
                   transaction_date = SKIP,
                   transaction_date_time = SKIP,
                   transaction_id = SKIP,
                   transaction_status = SKIP,
                   unit_of_measure = SKIP,
                   vehicle_registration_number = SKIP,
                   network_delco_name = SKIP,
                   product_group_name = SKIP,
                   fuel_product = SKIP,
                   account_customer_name = SKIP,
                   payer_name = SKIP,
                   transaction_time = SKIP,
                   transaction_currency = SKIP,
                   unit_price = SKIP,
                   authorised_flag = SKIP,
                   transaction_time_gmt = SKIP,
                   reason_code = SKIP,
                   issuer_action_code = SKIP,
                   issuer_action_code_description = SKIP,
                   declined_reason = SKIP,
                   card_status_reason_description = SKIP,
                   transaction_country = SKIP,
                   issuing_collecting_company_name = SKIP,
                   card_issuer_name = SKIP,
                   driver_name = SKIP,
                   bearer_description = SKIP,
                   card_category_description = SKIP,
                   card_type_description = SKIP,
                   card_token_type_description = SKIP,
                   emboss_type = SKIP,
                   ev_printed_number = SKIP,
                   is_rfid = SKIP)
      @col_co_code = col_co_code unless col_co_code == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @account_number = account_number unless account_number == SKIP
      @card_issue_number = card_issue_number unless card_issue_number == SKIP
      unless collecting_company_currency_code == SKIP
        @collecting_company_currency_code =
          collecting_company_currency_code
      end
      unless cust_data_customer_entered == SKIP
        @cust_data_customer_entered =
          cust_data_customer_entered
      end
      @cust_data_driver_id = cust_data_driver_id unless cust_data_driver_id == SKIP
      unless cust_data_fleet_description == SKIP
        @cust_data_fleet_description =
          cust_data_fleet_description
      end
      @fleet_id_input = fleet_id_input unless fleet_id_input == SKIP
      @amount = amount unless amount == SKIP
      @euroshell_site_number = euroshell_site_number unless euroshell_site_number == SKIP
      @incoming_product_code = incoming_product_code unless incoming_product_code == SKIP
      @product_code = product_code unless product_code == SKIP
      @product_name = product_name unless product_name == SKIP
      @site_code = site_code unless site_code == SKIP
      unless hosting_collecting_company_name == SKIP
        @hosting_collecting_company_name =
          hosting_collecting_company_name
      end
      unless hosting_collecting_company_number == SKIP
        @hosting_collecting_company_number =
          hosting_collecting_company_number
      end
      @iccdata_tran_type_code = iccdata_tran_type_code unless iccdata_tran_type_code == SKIP
      @transaction_type = transaction_type unless transaction_type == SKIP
      @latitude = latitude unless latitude == SKIP
      @longitude = longitude unless longitude == SKIP
      @merchant_category = merchant_category unless merchant_category == SKIP
      unless merchant_category_description == SKIP
        @merchant_category_description =
          merchant_category_description
      end
      @purchased_in_country = purchased_in_country unless purchased_in_country == SKIP
      @merchant_id = merchant_id unless merchant_id == SKIP
      @site_name = site_name unless site_name == SKIP
      @network = network unless network == SKIP
      @delco_code = delco_code unless delco_code == SKIP
      @odometer_input = odometer_input unless odometer_input == SKIP
      @odometer_reading_km = odometer_reading_km unless odometer_reading_km == SKIP
      @odometer_reading_miles = odometer_reading_miles unless odometer_reading_miles == SKIP
      @card_pan = card_pan unless card_pan == SKIP
      @pin_indicator = pin_indicator unless pin_indicator == SKIP
      @poi_receipt_number = poi_receipt_number unless poi_receipt_number == SKIP
      @products_code_additional = products_code_additional unless products_code_additional == SKIP
      @products_tax_code = products_tax_code unless products_tax_code == SKIP
      @fuel_volume = fuel_volume unless fuel_volume == SKIP
      @sfgw_card_date_of_expiry = sfgw_card_date_of_expiry unless sfgw_card_date_of_expiry == SKIP
      @site_currency_iso_code = site_currency_iso_code unless site_currency_iso_code == SKIP
      @card_id = card_id unless card_id == SKIP
      @transaction_date = transaction_date unless transaction_date == SKIP
      @transaction_date_time = transaction_date_time unless transaction_date_time == SKIP
      @transaction_id = transaction_id unless transaction_id == SKIP
      @transaction_status = transaction_status unless transaction_status == SKIP
      @unit_of_measure = unit_of_measure unless unit_of_measure == SKIP
      unless vehicle_registration_number == SKIP
        @vehicle_registration_number =
          vehicle_registration_number
      end
      @network_delco_name = network_delco_name unless network_delco_name == SKIP
      @product_group_name = product_group_name unless product_group_name == SKIP
      @fuel_product = fuel_product unless fuel_product == SKIP
      @account_customer_name = account_customer_name unless account_customer_name == SKIP
      @payer_name = payer_name unless payer_name == SKIP
      @transaction_time = transaction_time unless transaction_time == SKIP
      @transaction_currency = transaction_currency unless transaction_currency == SKIP
      @unit_price = unit_price unless unit_price == SKIP
      @authorised_flag = authorised_flag unless authorised_flag == SKIP
      @transaction_time_gmt = transaction_time_gmt unless transaction_time_gmt == SKIP
      @reason_code = reason_code unless reason_code == SKIP
      @issuer_action_code = issuer_action_code unless issuer_action_code == SKIP
      unless issuer_action_code_description == SKIP
        @issuer_action_code_description =
          issuer_action_code_description
      end
      @declined_reason = declined_reason unless declined_reason == SKIP
      unless card_status_reason_description == SKIP
        @card_status_reason_description =
          card_status_reason_description
      end
      @transaction_country = transaction_country unless transaction_country == SKIP
      unless issuing_collecting_company_name == SKIP
        @issuing_collecting_company_name =
          issuing_collecting_company_name
      end
      @card_issuer_name = card_issuer_name unless card_issuer_name == SKIP
      @driver_name = driver_name unless driver_name == SKIP
      @bearer_description = bearer_description unless bearer_description == SKIP
      unless card_category_description == SKIP
        @card_category_description =
          card_category_description
      end
      @card_type_description = card_type_description unless card_type_description == SKIP
      unless card_token_type_description == SKIP
        @card_token_type_description =
          card_token_type_description
      end
      @emboss_type = emboss_type unless emboss_type == SKIP
      @ev_printed_number = ev_printed_number unless ev_printed_number == SKIP
      @is_rfid = is_rfid unless is_rfid == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      card_issue_number =
        hash.key?('CardIssueNumber') ? hash['CardIssueNumber'] : SKIP
      collecting_company_currency_code =
        hash.key?('CollectingCompanyCurrencyCode') ? hash['CollectingCompanyCurrencyCode'] : SKIP
      cust_data_customer_entered =
        hash.key?('CustDataCustomerEntered') ? hash['CustDataCustomerEntered'] : SKIP
      cust_data_driver_id =
        hash.key?('CustDataDriverId') ? hash['CustDataDriverId'] : SKIP
      cust_data_fleet_description =
        hash.key?('CustDataFleetDescription') ? hash['CustDataFleetDescription'] : SKIP
      fleet_id_input = hash.key?('FleetIdInput') ? hash['FleetIdInput'] : SKIP
      amount = hash.key?('Amount') ? hash['Amount'] : SKIP
      euroshell_site_number =
        hash.key?('EuroshellSiteNumber') ? hash['EuroshellSiteNumber'] : SKIP
      incoming_product_code =
        hash.key?('IncomingProductCode') ? hash['IncomingProductCode'] : SKIP
      product_code = hash.key?('ProductCode') ? hash['ProductCode'] : SKIP
      product_name = hash.key?('ProductName') ? hash['ProductName'] : SKIP
      site_code = hash.key?('SiteCode') ? hash['SiteCode'] : SKIP
      hosting_collecting_company_name =
        hash.key?('HostingCollectingCompanyName') ? hash['HostingCollectingCompanyName'] : SKIP
      hosting_collecting_company_number =
        hash.key?('HostingCollectingCompanyNumber') ? hash['HostingCollectingCompanyNumber'] : SKIP
      iccdata_tran_type_code =
        hash.key?('IccdataTranTypeCode') ? hash['IccdataTranTypeCode'] : SKIP
      transaction_type =
        hash.key?('TransactionType') ? hash['TransactionType'] : SKIP
      latitude = hash.key?('Latitude') ? hash['Latitude'] : SKIP
      longitude = hash.key?('Longitude') ? hash['Longitude'] : SKIP
      merchant_category =
        hash.key?('MerchantCategory') ? hash['MerchantCategory'] : SKIP
      merchant_category_description =
        hash.key?('MerchantCategoryDescription') ? hash['MerchantCategoryDescription'] : SKIP
      purchased_in_country =
        hash.key?('PurchasedInCountry') ? hash['PurchasedInCountry'] : SKIP
      merchant_id = hash.key?('MerchantId') ? hash['MerchantId'] : SKIP
      site_name = hash.key?('SiteName') ? hash['SiteName'] : SKIP
      network = hash.key?('Network') ? hash['Network'] : SKIP
      delco_code = hash.key?('DelcoCode') ? hash['DelcoCode'] : SKIP
      odometer_input = hash.key?('OdometerInput') ? hash['OdometerInput'] : SKIP
      odometer_reading_km =
        hash.key?('OdometerReadingKm') ? hash['OdometerReadingKm'] : SKIP
      odometer_reading_miles =
        hash.key?('OdometerReadingMiles') ? hash['OdometerReadingMiles'] : SKIP
      card_pan = hash.key?('CardPAN') ? hash['CardPAN'] : SKIP
      pin_indicator = hash.key?('PINIndicator') ? hash['PINIndicator'] : SKIP
      poi_receipt_number =
        hash.key?('POIReceiptNumber') ? hash['POIReceiptNumber'] : SKIP
      products_code_additional =
        hash.key?('ProductsCodeAdditional') ? hash['ProductsCodeAdditional'] : SKIP
      products_tax_code =
        hash.key?('ProductsTaxCode') ? hash['ProductsTaxCode'] : SKIP
      fuel_volume = hash.key?('FuelVolume') ? hash['FuelVolume'] : SKIP
      sfgw_card_date_of_expiry =
        hash.key?('SfgwCardDateOfExpiry') ? hash['SfgwCardDateOfExpiry'] : SKIP
      site_currency_iso_code =
        hash.key?('SiteCurrencyISOCode') ? hash['SiteCurrencyISOCode'] : SKIP
      card_id = hash.key?('CardId') ? hash['CardId'] : SKIP
      transaction_date =
        hash.key?('TransactionDate') ? hash['TransactionDate'] : SKIP
      transaction_date_time =
        hash.key?('TransactionDateTime') ? hash['TransactionDateTime'] : SKIP
      transaction_id = hash.key?('TransactionId') ? hash['TransactionId'] : SKIP
      transaction_status =
        hash.key?('TransactionStatus') ? hash['TransactionStatus'] : SKIP
      unit_of_measure =
        hash.key?('UnitOfMeasure') ? hash['UnitOfMeasure'] : SKIP
      vehicle_registration_number =
        hash.key?('VehicleRegistrationNumber') ? hash['VehicleRegistrationNumber'] : SKIP
      network_delco_name =
        hash.key?('NetworkDelcoName') ? hash['NetworkDelcoName'] : SKIP
      product_group_name =
        hash.key?('ProductGroupName') ? hash['ProductGroupName'] : SKIP
      fuel_product = hash.key?('FuelProduct') ? hash['FuelProduct'] : SKIP
      account_customer_name =
        hash.key?('AccountCustomerName') ? hash['AccountCustomerName'] : SKIP
      payer_name = hash.key?('PayerName') ? hash['PayerName'] : SKIP
      transaction_time =
        hash.key?('TransactionTime') ? hash['TransactionTime'] : SKIP
      transaction_currency =
        hash.key?('TransactionCurrency') ? hash['TransactionCurrency'] : SKIP
      unit_price = hash.key?('UnitPrice') ? hash['UnitPrice'] : SKIP
      authorised_flag =
        hash.key?('AuthorisedFlag') ? hash['AuthorisedFlag'] : SKIP
      transaction_time_gmt =
        hash.key?('TransactionTimeGMT') ? hash['TransactionTimeGMT'] : SKIP
      reason_code = hash.key?('ReasonCode') ? hash['ReasonCode'] : SKIP
      issuer_action_code =
        hash.key?('IssuerActionCode') ? hash['IssuerActionCode'] : SKIP
      issuer_action_code_description =
        hash.key?('IssuerActionCodeDescription') ? hash['IssuerActionCodeDescription'] : SKIP
      declined_reason =
        hash.key?('DeclinedReason') ? hash['DeclinedReason'] : SKIP
      card_status_reason_description =
        hash.key?('CardStatusReasonDescription') ? hash['CardStatusReasonDescription'] : SKIP
      transaction_country =
        hash.key?('TransactionCountry') ? hash['TransactionCountry'] : SKIP
      issuing_collecting_company_name =
        hash.key?('IssuingCollectingCompanyName') ? hash['IssuingCollectingCompanyName'] : SKIP
      card_issuer_name =
        hash.key?('CardIssuerName') ? hash['CardIssuerName'] : SKIP
      driver_name = hash.key?('DriverName') ? hash['DriverName'] : SKIP
      bearer_description =
        hash.key?('BearerDescription') ? hash['BearerDescription'] : SKIP
      card_category_description =
        hash.key?('CardCategoryDescription') ? hash['CardCategoryDescription'] : SKIP
      card_type_description =
        hash.key?('CardTypeDescription') ? hash['CardTypeDescription'] : SKIP
      card_token_type_description =
        hash.key?('CardTokenTypeDescription') ? hash['CardTokenTypeDescription'] : SKIP
      emboss_type = hash.key?('EmbossType') ? hash['EmbossType'] : SKIP
      ev_printed_number =
        hash.key?('EVPrintedNumber') ? hash['EVPrintedNumber'] : SKIP
      is_rfid = hash.key?('IsRFID') ? hash['IsRFID'] : SKIP

      # Create object from extracted values.
      RecentTransactions.new(col_co_code,
                             payer_number,
                             account_number,
                             card_issue_number,
                             collecting_company_currency_code,
                             cust_data_customer_entered,
                             cust_data_driver_id,
                             cust_data_fleet_description,
                             fleet_id_input,
                             amount,
                             euroshell_site_number,
                             incoming_product_code,
                             product_code,
                             product_name,
                             site_code,
                             hosting_collecting_company_name,
                             hosting_collecting_company_number,
                             iccdata_tran_type_code,
                             transaction_type,
                             latitude,
                             longitude,
                             merchant_category,
                             merchant_category_description,
                             purchased_in_country,
                             merchant_id,
                             site_name,
                             network,
                             delco_code,
                             odometer_input,
                             odometer_reading_km,
                             odometer_reading_miles,
                             card_pan,
                             pin_indicator,
                             poi_receipt_number,
                             products_code_additional,
                             products_tax_code,
                             fuel_volume,
                             sfgw_card_date_of_expiry,
                             site_currency_iso_code,
                             card_id,
                             transaction_date,
                             transaction_date_time,
                             transaction_id,
                             transaction_status,
                             unit_of_measure,
                             vehicle_registration_number,
                             network_delco_name,
                             product_group_name,
                             fuel_product,
                             account_customer_name,
                             payer_name,
                             transaction_time,
                             transaction_currency,
                             unit_price,
                             authorised_flag,
                             transaction_time_gmt,
                             reason_code,
                             issuer_action_code,
                             issuer_action_code_description,
                             declined_reason,
                             card_status_reason_description,
                             transaction_country,
                             issuing_collecting_company_name,
                             card_issuer_name,
                             driver_name,
                             bearer_description,
                             card_category_description,
                             card_type_description,
                             card_token_type_description,
                             emboss_type,
                             ev_printed_number,
                             is_rfid)
    end
  end
end
