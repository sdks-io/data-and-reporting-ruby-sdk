# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # InvoiceSummaryRequestFilters Model.
  class InvoiceSummaryRequestFilters < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Collecting Company Id of the selected payer. 
    # Optional.
    # Example:
    # 1-Philippines
    # 5-UK
    # @return [Integer]
    attr_accessor :col_co_id

    # Payer Id of the selected payer.
    # Optional if PayerNumber is passed else Mandatory
    # Example: 123456
    # @return [Integer]
    attr_accessor :payer_id

    # Payer Number of the selected payer.
    # Optional if PayerId is passed else Mandatory
    # Example: GB000000123
    # @return [String]
    attr_accessor :payer_number

    # Invoice id.
    # Optional. 
    # This input is a search criterion, if given.
    # Example: 1
    # @return [Integer]
    attr_accessor :invoice_id

    # Invoice number.
    # Optional.
    # This input is a search criterion, if given. 
    # Example: 0123456789
    # @return [String]
    attr_accessor :invoice_number

    # Invoice date searched from this date.
    # Optional.
    # This input is a search criterion, if given.
    # Date format: yyyyMMdd
    # Example: 20170830
    # Note: This criterion is ignored if ‘Period’ is given.
    # Also, this criterion is ignored if ‘ToDate’ is not provided.
    # @return [String]
    attr_accessor :from_date

    # Invoice date searched until this date.
    # Optional.
    # This input is a search criterion, if given.
    # Date format: yyyyMMdd
    # Example: 20170830 
    # Note: This criterion is ignored if ‘Period’ is given. 
    # Also, this criterion is ignored if ‘FromDate’ is not provided.
    # @return [String]
    attr_accessor :to_date

    # Date of invoicing.
    # Optional.
    # This input is a search criterion, if given. 
    # Date format: yyyyMMdd
    # Example: 20170830
    # @return [String]
    attr_accessor :invoice_date

    # Summary document id
    # Optional.
    # This input is a search criterion, if given.
    # Example: 1
    # @return [Integer]
    attr_accessor :summary_document_id

    # Summary document number
    # Optional.
    # This input is a search criterion, if given.
    # Example: ‘0/CZ0000000123456/2017’
    # @return [String]
    attr_accessor :summary_document_number

    # Statement of Account Id of the payment customer. 
    # Optional.
    # This input is a search criterion, if given.
    # Example: 1
    # @return [String]
    attr_accessor :statement_of_account_id

    # Statement of Account reference number of the payment customer. 
    # Optional.
    # This input is a search criterion, if given.
    # Example: 123
    # @return [String]
    attr_accessor :so_a_reference_number

    # Invoice date search period. Valid values –
    # 1.    Last 7 days – Issued in last 7 days.
    # 2.    Last 30 days – Issued in last 30 days.
    # 3.    Last 90 days – Issued in last 90 days.
    # Optional.
    # This input is a search criterion, if given.
    # Example: 1
    # @return [Integer]
    attr_accessor :period

    # Status of the invoice. Valid values –
    # •    Due – Invoices due for payment and is within the due date.
    # •    Paid – Fully paid Invoices.
    # •    Overdue – Invoices due of payment and has crossed the due date.
    # •    CreditNote – Credit notes
    # •    CreditStatement
    # Optional.
    # This input is a search criterion, if given.
    # @return [String]
    attr_accessor :invoice_status

    # ISO code of the country i.e., UK, DE, MY, etc.
    # Optional
    # @return [String]
    attr_accessor :invoiced_on_behalf_of

    # Whether to include the additional invoice details in the API response. 
    # Optional. Default value “False”.
    # The parameters that are populated 
    # •    DocumentReference
    # •    AdditionalDocuments 
    # The above fields will not be present in the response when the respective
    # data is not available in the source system.
    # @return [TrueClass | FalseClass]
    attr_accessor :include_e_invoice_details

    # Collecting Company Code of the selected payer. 
    # Mandatory - It is mandatory field to external source ATOS for E-invoicing.
    # 
    # Example:
    # 86-Philippines
    # 5-UK
    # @return [Integer]
    attr_accessor :col_co_code

    # Collecting Company Code of the selected payer. 
    # Mandatory - It is mandatory field to external source ATOS for E-invoicing.
    # 
    # Example:
    # 86-Philippines
    # 5-UK
    # @return [Array[Accounts]]
    attr_accessor :accounts

    # Invoice type. Allowed values –
    # •    Original – Original document.
    # •    Reversal – Reversed document.
    # •    Replacement – Replaced document.
    # Optional. (When not passed all invoice, types are considered for search)
    # This input is a search criterion, if given.
    # Example: Original
    # @return [String]
    attr_accessor :type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['col_co_id'] = 'ColCoId'
      @_hash['payer_id'] = 'PayerId'
      @_hash['payer_number'] = 'PayerNumber'
      @_hash['invoice_id'] = 'InvoiceId'
      @_hash['invoice_number'] = 'InvoiceNumber'
      @_hash['from_date'] = 'FromDate'
      @_hash['to_date'] = 'ToDate'
      @_hash['invoice_date'] = 'InvoiceDate'
      @_hash['summary_document_id'] = 'SummaryDocumentId'
      @_hash['summary_document_number'] = 'SummaryDocumentNumber'
      @_hash['statement_of_account_id'] = 'StatementOfAccountId'
      @_hash['so_a_reference_number'] = 'SoAReferenceNumber'
      @_hash['period'] = 'Period'
      @_hash['invoice_status'] = 'InvoiceStatus'
      @_hash['invoiced_on_behalf_of'] = 'InvoicedOnBehalfOf'
      @_hash['include_e_invoice_details'] = 'IncludeEInvoiceDetails'
      @_hash['col_co_code'] = 'ColCoCode'
      @_hash['accounts'] = 'Accounts'
      @_hash['type'] = 'Type'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        col_co_id
        payer_id
        payer_number
        invoice_id
        invoice_number
        from_date
        to_date
        invoice_date
        summary_document_id
        summary_document_number
        statement_of_account_id
        so_a_reference_number
        period
        invoice_status
        invoiced_on_behalf_of
        include_e_invoice_details
        col_co_code
        accounts
        type
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        col_co_id
        payer_id
        payer_number
        invoice_id
        invoice_number
        from_date
        to_date
        invoice_date
        summary_document_id
        summary_document_number
        statement_of_account_id
        so_a_reference_number
        period
        invoice_status
        invoiced_on_behalf_of
        include_e_invoice_details
        col_co_code
        type
      ]
    end

    def initialize(col_co_id = SKIP, payer_id = SKIP, payer_number = SKIP,
                   invoice_id = SKIP, invoice_number = SKIP, from_date = SKIP,
                   to_date = SKIP, invoice_date = SKIP,
                   summary_document_id = SKIP, summary_document_number = SKIP,
                   statement_of_account_id = SKIP, so_a_reference_number = SKIP,
                   period = SKIP, invoice_status = SKIP,
                   invoiced_on_behalf_of = SKIP,
                   include_e_invoice_details = SKIP, col_co_code = SKIP,
                   accounts = SKIP, type = SKIP)
      @col_co_id = col_co_id unless col_co_id == SKIP
      @payer_id = payer_id unless payer_id == SKIP
      @payer_number = payer_number unless payer_number == SKIP
      @invoice_id = invoice_id unless invoice_id == SKIP
      @invoice_number = invoice_number unless invoice_number == SKIP
      @from_date = from_date unless from_date == SKIP
      @to_date = to_date unless to_date == SKIP
      @invoice_date = invoice_date unless invoice_date == SKIP
      @summary_document_id = summary_document_id unless summary_document_id == SKIP
      @summary_document_number = summary_document_number unless summary_document_number == SKIP
      @statement_of_account_id = statement_of_account_id unless statement_of_account_id == SKIP
      @so_a_reference_number = so_a_reference_number unless so_a_reference_number == SKIP
      @period = period unless period == SKIP
      @invoice_status = invoice_status unless invoice_status == SKIP
      @invoiced_on_behalf_of = invoiced_on_behalf_of unless invoiced_on_behalf_of == SKIP
      unless include_e_invoice_details == SKIP
        @include_e_invoice_details =
          include_e_invoice_details
      end
      @col_co_code = col_co_code unless col_co_code == SKIP
      @accounts = accounts unless accounts == SKIP
      @type = type unless type == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      col_co_id = hash.key?('ColCoId') ? hash['ColCoId'] : SKIP
      payer_id = hash.key?('PayerId') ? hash['PayerId'] : SKIP
      payer_number = hash.key?('PayerNumber') ? hash['PayerNumber'] : SKIP
      invoice_id = hash.key?('InvoiceId') ? hash['InvoiceId'] : SKIP
      invoice_number = hash.key?('InvoiceNumber') ? hash['InvoiceNumber'] : SKIP
      from_date = hash.key?('FromDate') ? hash['FromDate'] : SKIP
      to_date = hash.key?('ToDate') ? hash['ToDate'] : SKIP
      invoice_date = hash.key?('InvoiceDate') ? hash['InvoiceDate'] : SKIP
      summary_document_id =
        hash.key?('SummaryDocumentId') ? hash['SummaryDocumentId'] : SKIP
      summary_document_number =
        hash.key?('SummaryDocumentNumber') ? hash['SummaryDocumentNumber'] : SKIP
      statement_of_account_id =
        hash.key?('StatementOfAccountId') ? hash['StatementOfAccountId'] : SKIP
      so_a_reference_number =
        hash.key?('SoAReferenceNumber') ? hash['SoAReferenceNumber'] : SKIP
      period = hash.key?('Period') ? hash['Period'] : SKIP
      invoice_status = hash.key?('InvoiceStatus') ? hash['InvoiceStatus'] : SKIP
      invoiced_on_behalf_of =
        hash.key?('InvoicedOnBehalfOf') ? hash['InvoicedOnBehalfOf'] : SKIP
      include_e_invoice_details =
        hash.key?('IncludeEInvoiceDetails') ? hash['IncludeEInvoiceDetails'] : SKIP
      col_co_code = hash.key?('ColCoCode') ? hash['ColCoCode'] : SKIP
      # Parameter is an array, so we need to iterate through it
      accounts = nil
      unless hash['Accounts'].nil?
        accounts = []
        hash['Accounts'].each do |structure|
          accounts << (Accounts.from_hash(structure) if structure)
        end
      end

      accounts = SKIP unless hash.key?('Accounts')
      type = hash.key?('Type') ? hash['Type'] : SKIP

      # Create object from extracted values.
      InvoiceSummaryRequestFilters.new(col_co_id,
                                       payer_id,
                                       payer_number,
                                       invoice_id,
                                       invoice_number,
                                       from_date,
                                       to_date,
                                       invoice_date,
                                       summary_document_id,
                                       summary_document_number,
                                       statement_of_account_id,
                                       so_a_reference_number,
                                       period,
                                       invoice_status,
                                       invoiced_on_behalf_of,
                                       include_e_invoice_details,
                                       col_co_code,
                                       accounts,
                                       type)
    end
  end
end
