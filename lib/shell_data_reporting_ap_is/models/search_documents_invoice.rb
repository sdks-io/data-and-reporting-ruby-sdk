# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # SearchDocumentsInvoice Model.
  class SearchDocumentsInvoice < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Unique Invoice Reference id of the invoice for downloading the zip file
    # containing PDF and proofing elements.
    # Example: 123456
    # @return [Integer]
    attr_accessor :document_reference

    # Payment customer number.
    # Example: GB000000123
    # @return [String]
    attr_accessor :invoice_number

    # Customer payer name
    # @return [String]
    attr_accessor :payer_name

    # Account Number
    # Example: GB99215176
    # @return [String]
    attr_accessor :account_number

    # Invoice account name
    # @return [String]
    attr_accessor :account_name

    # Document type
    # String containing one of the following values:
    # •	NAT (National)
    # •	INT (International)
    # •	SOA (Statement of Account)
    # @return [String]
    attr_accessor :document_type

    # Included tax amount in the invoice
    # @return [Float]
    attr_accessor :gross_amount

    # Included tax amount in the invoice
    # @return [Float]
    attr_accessor :net_amount

    # Included tax amount in the invoice
    # @return [Float]
    attr_accessor :tax_amount

    # Included tax amount in the invoice
    # @return [String]
    attr_accessor :currency_code

    # Included tax amount in the invoice
    # @return [String]
    attr_accessor :invoice_status

    # Included tax amount in the invoice
    # @return [String]
    attr_accessor :invoice_date

    # Included tax amount in the invoice
    # @return [String]
    attr_accessor :due_date

    # Included tax amount in the invoice
    # @return [String]
    attr_accessor :vat_country_iso_code

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['document_reference'] = 'DocumentReference'
      @_hash['invoice_number'] = 'InvoiceNumber'
      @_hash['payer_name'] = 'PayerName'
      @_hash['account_number'] = 'AccountNumber'
      @_hash['account_name'] = 'AccountName'
      @_hash['document_type'] = 'DocumentType'
      @_hash['gross_amount'] = 'GrossAmount'
      @_hash['net_amount'] = 'NetAmount'
      @_hash['tax_amount'] = 'TaxAmount'
      @_hash['currency_code'] = 'CurrencyCode'
      @_hash['invoice_status'] = 'InvoiceStatus'
      @_hash['invoice_date'] = 'InvoiceDate'
      @_hash['due_date'] = 'DueDate'
      @_hash['vat_country_iso_code'] = 'VATCountryISOCode'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        document_reference
        invoice_number
        payer_name
        account_number
        account_name
        document_type
        gross_amount
        net_amount
        tax_amount
        currency_code
        invoice_status
        invoice_date
        due_date
        vat_country_iso_code
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        invoice_number
        payer_name
        account_number
        account_name
        document_type
        gross_amount
        net_amount
        tax_amount
        currency_code
        invoice_status
        invoice_date
        due_date
        vat_country_iso_code
      ]
    end

    def initialize(document_reference = SKIP,
                   invoice_number = SKIP,
                   payer_name = SKIP,
                   account_number = SKIP,
                   account_name = SKIP,
                   document_type = SKIP,
                   gross_amount = SKIP,
                   net_amount = SKIP,
                   tax_amount = SKIP,
                   currency_code = SKIP,
                   invoice_status = SKIP,
                   invoice_date = SKIP,
                   due_date = SKIP,
                   vat_country_iso_code = SKIP)
      @document_reference = document_reference unless document_reference == SKIP
      @invoice_number = invoice_number unless invoice_number == SKIP
      @payer_name = payer_name unless payer_name == SKIP
      @account_number = account_number unless account_number == SKIP
      @account_name = account_name unless account_name == SKIP
      @document_type = document_type unless document_type == SKIP
      @gross_amount = gross_amount unless gross_amount == SKIP
      @net_amount = net_amount unless net_amount == SKIP
      @tax_amount = tax_amount unless tax_amount == SKIP
      @currency_code = currency_code unless currency_code == SKIP
      @invoice_status = invoice_status unless invoice_status == SKIP
      @invoice_date = invoice_date unless invoice_date == SKIP
      @due_date = due_date unless due_date == SKIP
      @vat_country_iso_code = vat_country_iso_code unless vat_country_iso_code == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      document_reference =
        hash.key?('DocumentReference') ? hash['DocumentReference'] : SKIP
      invoice_number = hash.key?('InvoiceNumber') ? hash['InvoiceNumber'] : SKIP
      payer_name = hash.key?('PayerName') ? hash['PayerName'] : SKIP
      account_number = hash.key?('AccountNumber') ? hash['AccountNumber'] : SKIP
      account_name = hash.key?('AccountName') ? hash['AccountName'] : SKIP
      document_type = hash.key?('DocumentType') ? hash['DocumentType'] : SKIP
      gross_amount = hash.key?('GrossAmount') ? hash['GrossAmount'] : SKIP
      net_amount = hash.key?('NetAmount') ? hash['NetAmount'] : SKIP
      tax_amount = hash.key?('TaxAmount') ? hash['TaxAmount'] : SKIP
      currency_code = hash.key?('CurrencyCode') ? hash['CurrencyCode'] : SKIP
      invoice_status = hash.key?('InvoiceStatus') ? hash['InvoiceStatus'] : SKIP
      invoice_date = hash.key?('InvoiceDate') ? hash['InvoiceDate'] : SKIP
      due_date = hash.key?('DueDate') ? hash['DueDate'] : SKIP
      vat_country_iso_code =
        hash.key?('VATCountryISOCode') ? hash['VATCountryISOCode'] : SKIP

      # Create object from extracted values.
      SearchDocumentsInvoice.new(document_reference,
                                 invoice_number,
                                 payer_name,
                                 account_number,
                                 account_name,
                                 document_type,
                                 gross_amount,
                                 net_amount,
                                 tax_amount,
                                 currency_code,
                                 invoice_status,
                                 invoice_date,
                                 due_date,
                                 vat_country_iso_code)
    end
  end
end
