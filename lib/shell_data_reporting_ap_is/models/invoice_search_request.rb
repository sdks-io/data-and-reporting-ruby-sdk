# shell_data_reporting_ap_is
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module ShellDataReportingApIs
  # InvoiceSearchRequest Model.
  class InvoiceSearchRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [InvoiceSearchRequestFilters]
    attr_accessor :filters

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :page_size

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :page

    # Sort option –
    # 1.	InvoiceDate ASC
    # 2.	InvoiceDate DESC
    # 3.	NetAmountCustomerCurrency ASC
    # 4.	NetAmountCustomerCurrency DESC
    # Optional
    # Note:
    # This option uses a column name with a combination of “ASC or DESC” for
    # sorting.
    # If only the column name is provided, it is sorted by ascending.
    # Example values to be passed: 
    # [“InvoiceDate”, “NetAmountCustomerCurrency DESC”]
    # @return [Array[Integer]]
    attr_accessor :sort_by

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['filters'] = 'Filters'
      @_hash['page_size'] = 'PageSize'
      @_hash['page'] = 'Page'
      @_hash['sort_by'] = 'SortBy'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        filters
        page_size
        page
        sort_by
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(filters = SKIP,
                   page_size = SKIP,
                   page = SKIP,
                   sort_by = SKIP)
      @filters = filters unless filters == SKIP
      @page_size = page_size unless page_size == SKIP
      @page = page unless page == SKIP
      @sort_by = sort_by unless sort_by == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      filters = InvoiceSearchRequestFilters.from_hash(hash['Filters']) if hash['Filters']
      page_size = hash.key?('PageSize') ? hash['PageSize'] : SKIP
      page = hash.key?('Page') ? hash['Page'] : SKIP
      sort_by = hash.key?('SortBy') ? hash['SortBy'] : SKIP

      # Create object from extracted values.
      InvoiceSearchRequest.new(filters,
                               page_size,
                               page,
                               sort_by)
    end
  end
end
